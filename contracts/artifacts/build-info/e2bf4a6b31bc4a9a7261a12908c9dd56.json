{
	"id": "e2bf4a6b31bc4a9a7261a12908c9dd56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract NFTMarketplace is ERC721URIStorage {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _itemIds;\r\n    IERC20 private paymentToken;\r\n\r\n    struct MarketItem {\r\n        uint itemId;\r\n        uint256 tokenId;\r\n        address payable seller;\r\n        uint256 price;\r\n        bool sold;\r\n    }\r\n\r\n    mapping(uint256 => MarketItem) private idToMarketItem;\r\n\r\n    event MarketItemCreated (\r\n        uint indexed itemId,\r\n        uint256 indexed tokenId,\r\n        address seller,\r\n        uint256 price,\r\n        bool sold\r\n    );\r\n\r\n    constructor(address _paymentToken) ERC721(\"MiArteDigital\", \"MAD\") {\r\n        paymentToken = IERC20(_paymentToken);\r\n    }\r\n\r\n    function createMarketItem(uint256 tokenId, uint256 price) public payable {\r\n        require(price > 0, \"Price must be at least 1 wei\");\r\n\r\n        _itemIds.increment();\r\n        uint256 itemId = _itemIds.current();\r\n\r\n        idToMarketItem[itemId] = MarketItem(\r\n            itemId,\r\n            tokenId,\r\n            payable(msg.sender),\r\n            price,\r\n            false\r\n        );\r\n\r\n        _transfer(msg.sender, address(this), tokenId);\r\n        emit MarketItemCreated(itemId, tokenId, msg.sender, price, false);\r\n    }\r\n\r\n    function createSale(uint256 itemId) public payable {\r\n        uint price = idToMarketItem[itemId].price;\r\n        uint tokenId = idToMarketItem[itemId].tokenId;\r\n        require(!idToMarketItem[itemId].sold, \"This sale is already finalized\");\r\n        require(paymentToken.transferFrom(msg.sender, idToMarketItem[itemId].seller, price), \"Failed to transfer payment\");\r\n\r\n        idToMarketItem[itemId].sold = true;\r\n        _transfer(address(this), msg.sender, tokenId);\r\n        emit MarketItemCreated(itemId, tokenId, idToMarketItem[itemId].seller, price, true);\r\n    }\r\n\r\n    // Funciones administrativas\r\n\r\n    function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {\r\n        _setTokenURI(tokenId, tokenURI);\r\n    }\r\n\r\n    // Aquí podrían añadirse más funciones según los requisitos del proyecto, incluyendo la gestión de la comisión, la administración de usuarios, entre otros.\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1566,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xC9 0xE7 BYTE 0x21 0xAE 0x2F 0x1F 0xC1 MOD 0x4B 0xEF 0x4F DUP11 0x27 EXTCODECOPY 0xCC 0xE7 0xD1 0xAB 0xC9 0xB2 DUP5 0xBA LOG4 0xD8 BLOBBASEFEE 0xA5 PUSH32 0x79809664736F6C63430008190033000000000000000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xC9 0xE7 BYTE 0x21 0xAE 0x2F 0x1F 0xC1 MOD 0x4B 0xEF 0x4F DUP11 0x27 EXTCODECOPY 0xCC 0xE7 0xD1 0xAB 0xC9 0xB2 DUP5 0xBA LOG4 0xD8 BLOBBASEFEE 0xA5 PUSH32 0x79809664736F6C63430008190033000000000000000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "sold",
									"type": "bool"
								}
							],
							"name": "MarketItemCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "createMarketItem",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "createSale",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "updateTokenMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":308:2456  contract NFTMarketplace is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":871:992  constructor(address _paymentToken) ERC721(\"MiArteDigital\", \"MAD\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x4d69417274654469676974616c00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d41440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":970:983  _paymentToken */\n  dup1\n    /* \"contracts/MyToken.sol\":948:960  paymentToken */\n  0x08\n  0x00\n    /* \"contracts/MyToken.sol\":948:984  paymentToken = IERC20(_paymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":871:992  constructor(address _paymentToken) ERC721(\"MiArteDigital\", \"MAD\") {... */\n  pop\n    /* \"contracts/MyToken.sol\":308:2456  contract NFTMarketplace is ERC721URIStorage {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_53\n  tag_13\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":932:1051   */\ntag_52:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_54\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_19:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_20:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_21:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_22:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_59:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_61\n  tag_21\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1909:1993   */\ntag_60:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_23:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_24:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_25:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_26:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_66\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2624:2663   */\n  tag_67\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_27:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_28:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_29:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_71\n    /* \"#utility.yul\":3013:3047   */\n  tag_72\n    /* \"#utility.yul\":3022:3046   */\n  tag_73\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3013:3047   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2995:3048   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_30:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_31:\n    /* \"#utility.yul\":3251:3290   */\n  tag_76\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3312:3403   */\n  tag_77\n    /* \"#utility.yul\":3361:3402   */\n  tag_78\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_30\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_32:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_33:\n    /* \"#utility.yul\":3572:3604   */\n  tag_81\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3613:3678   */\n  tag_82\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_34:\n    /* \"#utility.yul\":3750:3870   */\ntag_84:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_87\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_33\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_35:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_90\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_23\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4101:4130   */\n  tag_91\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_24\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_92:\n    /* \"#utility.yul\":4328:4408   */\n  tag_93\n    /* \"#utility.yul\":4384:4406   */\n  tag_94\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_34\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_89:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_36:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_37:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_38:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_99\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_101\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_19\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_103\n  tag_20\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5233:5289   */\ntag_102:\n    /* \"#utility.yul\":5313:5351   */\n  tag_104\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_22\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5398:5465   */\n  tag_105\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_108:\n    /* \"#utility.yul\":6339:6406   */\n  tag_109\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_38\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_106)\n    /* \"#utility.yul\":5560:6178   */\ntag_107:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_110\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_23\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_111:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_115\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_37\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_114:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_106:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":308:2456  contract NFTMarketplace is ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":308:2456  contract NFTMarketplace is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9da1b02a\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2cb2f52e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x361c1995\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/MyToken.sol\":2154:2282  function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/MyToken.sol\":1000:1531  function createMarketItem(uint256 tokenId, uint256 price) public payable {... */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1539:2110  function createSale(uint256 itemId) public payable {... */\n    tag_13:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_109\n      jump\t// in\n    tag_110:\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2154:2282  function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {... */\n    tag_54:\n        /* \"contracts/MyToken.sol\":2243:2274  _setTokenURI(tokenId, tokenURI) */\n      tag_134\n        /* \"contracts/MyToken.sol\":2256:2263  tokenId */\n      dup3\n        /* \"contracts/MyToken.sol\":2265:2273  tokenURI */\n      dup3\n        /* \"contracts/MyToken.sol\":2243:2255  _setTokenURI */\n      tag_135\n        /* \"contracts/MyToken.sol\":2243:2274  _setTokenURI(tokenId, tokenURI) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/MyToken.sol\":2154:2282  function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1000:1531  function createMarketItem(uint256 tokenId, uint256 price) public payable {... */\n    tag_58:\n        /* \"contracts/MyToken.sol\":1100:1101  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1092:1097  price */\n      dup2\n        /* \"contracts/MyToken.sol\":1092:1101  price > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":1084:1134  require(price > 0, \"Price must be at least 1 wei\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/MyToken.sol\":1147:1167  _itemIds.increment() */\n      tag_140\n        /* \"contracts/MyToken.sol\":1147:1155  _itemIds */\n      0x07\n        /* \"contracts/MyToken.sol\":1147:1165  _itemIds.increment */\n      tag_141\n        /* \"contracts/MyToken.sol\":1147:1167  _itemIds.increment() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/MyToken.sol\":1178:1192  uint256 itemId */\n      0x00\n        /* \"contracts/MyToken.sol\":1195:1213  _itemIds.current() */\n      tag_142\n        /* \"contracts/MyToken.sol\":1195:1203  _itemIds */\n      0x07\n        /* \"contracts/MyToken.sol\":1195:1211  _itemIds.current */\n      tag_143\n        /* \"contracts/MyToken.sol\":1195:1213  _itemIds.current() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/MyToken.sol\":1178:1213  uint256 itemId = _itemIds.current() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1251:1389  MarketItem(... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":1276:1282  itemId */\n      dup3\n        /* \"contracts/MyToken.sol\":1251:1389  MarketItem(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":1297:1304  tokenId */\n      dup5\n        /* \"contracts/MyToken.sol\":1251:1389  MarketItem(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":1327:1337  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1251:1389  MarketItem(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":1353:1358  price */\n      dup4\n        /* \"contracts/MyToken.sol\":1251:1389  MarketItem(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":1373:1378  false */\n      0x00\n        /* \"contracts/MyToken.sol\":1251:1389  MarketItem(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":1226:1240  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":1226:1248  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":1241:1247  itemId */\n      dup4\n        /* \"contracts/MyToken.sol\":1226:1248  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1226:1389  idToMarketItem[itemId] = MarketItem(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1402:1447  _transfer(msg.sender, address(this), tokenId) */\n      tag_144\n        /* \"contracts/MyToken.sol\":1412:1422  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1432:1436  this */\n      address\n        /* \"contracts/MyToken.sol\":1439:1446  tokenId */\n      dup6\n        /* \"contracts/MyToken.sol\":1402:1411  _transfer */\n      tag_145\n        /* \"contracts/MyToken.sol\":1402:1447  _transfer(msg.sender, address(this), tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/MyToken.sol\":1489:1496  tokenId */\n      dup3\n        /* \"contracts/MyToken.sol\":1481:1487  itemId */\n      dup2\n        /* \"contracts/MyToken.sol\":1463:1523  MarketItemCreated(itemId, tokenId, msg.sender, price, false) */\n      0xf050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c\n        /* \"contracts/MyToken.sol\":1498:1508  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1510:1515  price */\n      dup6\n        /* \"contracts/MyToken.sol\":1517:1522  false */\n      0x00\n        /* \"contracts/MyToken.sol\":1463:1523  MarketItemCreated(itemId, tokenId, msg.sender, price, false) */\n      mload(0x40)\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken.sol\":1073:1531  {... */\n      pop\n        /* \"contracts/MyToken.sol\":1000:1531  function createMarketItem(uint256 tokenId, uint256 price) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_109\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_109\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1539:2110  function createSale(uint256 itemId) public payable {... */\n    tag_81:\n        /* \"contracts/MyToken.sol\":1601:1611  uint price */\n      0x00\n        /* \"contracts/MyToken.sol\":1614:1628  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":1614:1636  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":1629:1635  itemId */\n      dup4\n        /* \"contracts/MyToken.sol\":1614:1636  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1614:1642  idToMarketItem[itemId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/MyToken.sol\":1601:1642  uint price = idToMarketItem[itemId].price */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1653:1665  uint tokenId */\n      0x00\n        /* \"contracts/MyToken.sol\":1668:1682  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":1668:1690  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":1683:1689  itemId */\n      dup5\n        /* \"contracts/MyToken.sol\":1668:1690  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1668:1698  idToMarketItem[itemId].tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/MyToken.sol\":1653:1698  uint tokenId = idToMarketItem[itemId].tokenId */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1718:1732  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":1718:1740  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":1733:1739  itemId */\n      dup5\n        /* \"contracts/MyToken.sol\":1718:1740  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1718:1745  idToMarketItem[itemId].sold */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":1717:1745  !idToMarketItem[itemId].sold */\n      iszero\n        /* \"contracts/MyToken.sol\":1709:1780  require(!idToMarketItem[itemId].sold, \"This sale is already finalized\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/MyToken.sol\":1799:1811  paymentToken */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1799:1824  paymentToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MyToken.sol\":1825:1835  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1837:1851  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":1837:1859  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":1852:1858  itemId */\n      dup8\n        /* \"contracts/MyToken.sol\":1837:1859  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1837:1866  idToMarketItem[itemId].seller */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1868:1873  price */\n      dup6\n        /* \"contracts/MyToken.sol\":1799:1874  paymentToken.transferFrom(msg.sender, idToMarketItem[itemId].seller, price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/MyToken.sol\":1791:1905  require(paymentToken.transferFrom(msg.sender, idToMarketItem[itemId].seller, price), \"Failed to transfer payment\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/MyToken.sol\":1948:1952  true */\n      0x01\n        /* \"contracts/MyToken.sol\":1918:1932  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":1918:1940  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":1933:1939  itemId */\n      dup6\n        /* \"contracts/MyToken.sol\":1918:1940  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1918:1945  idToMarketItem[itemId].sold */\n      0x04\n      add\n      0x00\n        /* \"contracts/MyToken.sol\":1918:1952  idToMarketItem[itemId].sold = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1963:2008  _transfer(address(this), msg.sender, tokenId) */\n      tag_174\n        /* \"contracts/MyToken.sol\":1981:1985  this */\n      address\n        /* \"contracts/MyToken.sol\":1988:1998  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2000:2007  tokenId */\n      dup4\n        /* \"contracts/MyToken.sol\":1963:1972  _transfer */\n      tag_145\n        /* \"contracts/MyToken.sol\":1963:2008  _transfer(address(this), msg.sender, tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/MyToken.sol\":2050:2057  tokenId */\n      dup1\n        /* \"contracts/MyToken.sol\":2042:2048  itemId */\n      dup4\n        /* \"contracts/MyToken.sol\":2024:2102  MarketItemCreated(itemId, tokenId, idToMarketItem[itemId].seller, price, true) */\n      0xf050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c\n        /* \"contracts/MyToken.sol\":2059:2073  idToMarketItem */\n      0x09\n        /* \"contracts/MyToken.sol\":2059:2081  idToMarketItem[itemId] */\n      0x00\n        /* \"contracts/MyToken.sol\":2074:2080  itemId */\n      dup8\n        /* \"contracts/MyToken.sol\":2059:2081  idToMarketItem[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2059:2088  idToMarketItem[itemId].seller */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2090:2095  price */\n      dup6\n        /* \"contracts/MyToken.sol\":2097:2101  true */\n      0x01\n        /* \"contracts/MyToken.sol\":2024:2102  MarketItemCreated(itemId, tokenId, idToMarketItem[itemId].seller, price, true) */\n      mload(0x40)\n      tag_175\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken.sol\":1590:2110  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1539:2110  function createSale(uint256 itemId) public payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_186:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_109\n      jump\t// in\n    tag_187:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_109\n      jump\t// in\n    tag_188:\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_190\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_189)\n    tag_190:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_191:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_191\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_185)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_196\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_185)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_185:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_203\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12112:12113  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12100  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12167:12168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12137:12170  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12211  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12222:12224  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12226:12233  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12243:12244  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12221  _update */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12246  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12285:12286  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12273  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12333:12340  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12310:12341  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12379:12383  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12375  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12427:12431  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12440  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12442:12455  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12406:12456  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12084:12473  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_248\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      0x01\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_251\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_256\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_255)\n    tag_256:\n      0x60\n      swap2\n      pop\n    tag_255:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_265:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_267\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_268)\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_271\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_278\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_279\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap3\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_295\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_296\n      jumpi\n      tag_297\n      tag_298\n      jump\t// in\n    tag_297:\n    tag_296:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_299\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_299:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_302\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n    tag_302:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_300\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_308\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_310\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_314\n      jumpi\n      tag_315\n      tag_304\n      jump\t// in\n    tag_315:\n    tag_314:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_317\n      jumpi\n      tag_318\n      tag_304\n      jump\t// in\n    tag_318:\n    tag_317:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_320\n      jumpi\n      tag_321\n      tag_304\n      jump\t// in\n    tag_321:\n    tag_320:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_323\n      jumpi\n      tag_324\n      tag_304\n      jump\t// in\n    tag_324:\n    tag_323:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_326\n      jumpi\n      tag_327\n      tag_304\n      jump\t// in\n    tag_327:\n    tag_326:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_329\n      jumpi\n      tag_330\n      tag_304\n      jump\t// in\n    tag_330:\n    tag_329:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_332:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_333:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_334:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_335:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_336:\n        /* \"#utility.yul\":561:584   */\n      tag_406\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_335\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_407:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_337:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_409\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_336\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_412\n      tag_333\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":833:952   */\n    tag_411:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_413\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_337\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_338:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_339:\n        /* \"#utility.yul\":1268:1289   */\n      tag_416\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_338\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_418\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_339\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_340:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_341:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_342:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_343:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_344:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_424\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_340\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2222:2293   */\n      tag_425\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_341\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_426\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_342\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2392:2421   */\n      tag_427\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_343\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_32:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_429\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_344\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_345:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_346:\n        /* \"#utility.yul\":2909:2933   */\n      tag_432\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_345\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_433:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_347:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_435\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_346\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_36:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_438\n      tag_333\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3185:3304   */\n    tag_437:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_439\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_347\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_348:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_349:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_442\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_348\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_350:\n        /* \"#utility.yul\":3765:3789   */\n      tag_444\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_349\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_39:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_446\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_350\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_351:\n        /* \"#utility.yul\":4103:4127   */\n      tag_448\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_349\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_449:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_352:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_451\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_351\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_43:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_454\n      tag_333\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4396:4515   */\n    tag_453:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_455\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_352\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_456\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_347\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_48:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_459\n      tag_333\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4893:5012   */\n    tag_458:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_460\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_352\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_461\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_352\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_462\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_347\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_353:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5648   */\n    tag_354:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5637:5638   */\n      dup1\n        /* \"#utility.yul\":5630:5642   */\n      revert\n        /* \"#utility.yul\":5654:5834   */\n    tag_298:\n        /* \"#utility.yul\":5702:5779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5699:5700   */\n      0x00\n        /* \"#utility.yul\":5692:5780   */\n      mstore\n        /* \"#utility.yul\":5799:5803   */\n      0x41\n        /* \"#utility.yul\":5796:5797   */\n      0x04\n        /* \"#utility.yul\":5789:5804   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5840:6121   */\n    tag_355:\n        /* \"#utility.yul\":5923:5950   */\n      tag_467\n        /* \"#utility.yul\":5945:5949   */\n      dup3\n        /* \"#utility.yul\":5923:5950   */\n      tag_343\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5911:5951   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup2\n        /* \"#utility.yul\":6041:6051   */\n      dup2\n        /* \"#utility.yul\":6038:6060   */\n      lt\n        /* \"#utility.yul\":6017:6035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6005:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6036   */\n      gt\n        /* \"#utility.yul\":5999:6061   */\n      or\n        /* \"#utility.yul\":5996:6084   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":6064:6082   */\n      tag_469\n      tag_298\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5996:6084   */\n    tag_468:\n        /* \"#utility.yul\":6104:6114   */\n      dup1\n        /* \"#utility.yul\":6100:6102   */\n      0x40\n        /* \"#utility.yul\":6093:6115   */\n      mstore\n        /* \"#utility.yul\":5883:6121   */\n      pop\n        /* \"#utility.yul\":5840:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6256   */\n    tag_356:\n        /* \"#utility.yul\":6161:6167   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_471\n      tag_332\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6178:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6250   */\n      tag_472\n        /* \"#utility.yul\":6245:6249   */\n      dup3\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6217:6250   */\n      tag_355\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6127:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6570   */\n    tag_357:\n        /* \"#utility.yul\":6324:6328   */\n      0x00\n        /* \"#utility.yul\":6414:6432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6403:6433   */\n      gt\n        /* \"#utility.yul\":6400:6456   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6436:6454   */\n      tag_475\n      tag_298\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6400:6456   */\n    tag_474:\n        /* \"#utility.yul\":6474:6503   */\n      tag_476\n        /* \"#utility.yul\":6496:6502   */\n      dup3\n        /* \"#utility.yul\":6474:6503   */\n      tag_343\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6466:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6562   */\n      0x20\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6563   */\n      add\n        /* \"#utility.yul\":6540:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6724   */\n    tag_358:\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6669:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup4\n        /* \"#utility.yul\":6651:6681   */\n      calldatacopy\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6706:6712   */\n      dup4\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6690:6717   */\n      mstore\n        /* \"#utility.yul\":6576:6724   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7155   */\n    tag_359:\n        /* \"#utility.yul\":6808:6813   */\n      0x00\n        /* \"#utility.yul\":6833:6899   */\n      tag_479\n        /* \"#utility.yul\":6849:6898   */\n      tag_480\n        /* \"#utility.yul\":6891:6897   */\n      dup5\n        /* \"#utility.yul\":6849:6898   */\n      tag_357\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6833:6899   */\n      tag_356\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6824:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6920   */\n      dup2\n        /* \"#utility.yul\":6908:6929   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x20\n        /* \"#utility.yul\":6953:6958   */\n      dup2\n        /* \"#utility.yul\":6949:6965   */\n      add\n        /* \"#utility.yul\":6998:7001   */\n      dup5\n        /* \"#utility.yul\":6989:6995   */\n      dup5\n        /* \"#utility.yul\":6984:6987   */\n      dup5\n        /* \"#utility.yul\":6980:6996   */\n      add\n        /* \"#utility.yul\":6977:7002   */\n      gt\n        /* \"#utility.yul\":6974:7086   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_482\n      tag_354\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6974:7086   */\n    tag_481:\n        /* \"#utility.yul\":7095:7149   */\n      tag_483\n        /* \"#utility.yul\":7142:7148   */\n      dup5\n        /* \"#utility.yul\":7137:7140   */\n      dup3\n        /* \"#utility.yul\":7132:7135   */\n      dup6\n        /* \"#utility.yul\":7095:7149   */\n      tag_358\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6814:7155   */\n      pop\n        /* \"#utility.yul\":6730:7155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7175:7515   */\n    tag_360:\n        /* \"#utility.yul\":7231:7236   */\n      0x00\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7265:7271   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7257:7284   */\n      slt\n        /* \"#utility.yul\":7247:7369   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_486\n      tag_353\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7247:7369   */\n    tag_485:\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7392:7412   */\n      calldataload\n        /* \"#utility.yul\":7430:7509   */\n      tag_487\n        /* \"#utility.yul\":7505:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7490:7494   */\n      0x20\n        /* \"#utility.yul\":7482:7488   */\n      dup7\n        /* \"#utility.yul\":7478:7495   */\n      add\n        /* \"#utility.yul\":7430:7509   */\n      tag_359\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7421:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7515   */\n      pop\n        /* \"#utility.yul\":7175:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:8175   */\n    tag_53:\n        /* \"#utility.yul\":7599:7605   */\n      0x00\n        /* \"#utility.yul\":7607:7613   */\n      dup1\n        /* \"#utility.yul\":7656:7658   */\n      0x40\n        /* \"#utility.yul\":7644:7653   */\n      dup4\n        /* \"#utility.yul\":7635:7642   */\n      dup6\n        /* \"#utility.yul\":7631:7654   */\n      sub\n        /* \"#utility.yul\":7627:7659   */\n      slt\n        /* \"#utility.yul\":7624:7743   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7662:7741   */\n      tag_490\n      tag_333\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7624:7743   */\n    tag_489:\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7807:7860   */\n      tag_491\n        /* \"#utility.yul\":7852:7859   */\n      dup6\n        /* \"#utility.yul\":7843:7849   */\n      dup3\n        /* \"#utility.yul\":7832:7841   */\n      dup7\n        /* \"#utility.yul\":7828:7850   */\n      add\n        /* \"#utility.yul\":7807:7860   */\n      tag_347\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7797:7860   */\n      swap3\n      pop\n        /* \"#utility.yul\":7753:7870   */\n      pop\n        /* \"#utility.yul\":7937:7939   */\n      0x20\n        /* \"#utility.yul\":7926:7935   */\n      dup4\n        /* \"#utility.yul\":7922:7940   */\n      add\n        /* \"#utility.yul\":7909:7941   */\n      calldataload\n        /* \"#utility.yul\":7968:7986   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7960:7966   */\n      dup2\n        /* \"#utility.yul\":7957:7987   */\n      gt\n        /* \"#utility.yul\":7954:8071   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":7990:8069   */\n      tag_493\n      tag_334\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7954:8071   */\n    tag_492:\n        /* \"#utility.yul\":8095:8158   */\n      tag_494\n        /* \"#utility.yul\":8150:8157   */\n      dup6\n        /* \"#utility.yul\":8141:8147   */\n      dup3\n        /* \"#utility.yul\":8130:8139   */\n      dup7\n        /* \"#utility.yul\":8126:8148   */\n      add\n        /* \"#utility.yul\":8095:8158   */\n      tag_360\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8085:8158   */\n      swap2\n      pop\n        /* \"#utility.yul\":7880:8168   */\n      pop\n        /* \"#utility.yul\":7521:8175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8181:8655   */\n    tag_57:\n        /* \"#utility.yul\":8249:8255   */\n      0x00\n        /* \"#utility.yul\":8257:8263   */\n      dup1\n        /* \"#utility.yul\":8306:8308   */\n      0x40\n        /* \"#utility.yul\":8294:8303   */\n      dup4\n        /* \"#utility.yul\":8285:8292   */\n      dup6\n        /* \"#utility.yul\":8281:8304   */\n      sub\n        /* \"#utility.yul\":8277:8309   */\n      slt\n        /* \"#utility.yul\":8274:8393   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":8312:8391   */\n      tag_497\n      tag_333\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8274:8393   */\n    tag_496:\n        /* \"#utility.yul\":8432:8433   */\n      0x00\n        /* \"#utility.yul\":8457:8510   */\n      tag_498\n        /* \"#utility.yul\":8502:8509   */\n      dup6\n        /* \"#utility.yul\":8493:8499   */\n      dup3\n        /* \"#utility.yul\":8482:8491   */\n      dup7\n        /* \"#utility.yul\":8478:8500   */\n      add\n        /* \"#utility.yul\":8457:8510   */\n      tag_347\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8447:8510   */\n      swap3\n      pop\n        /* \"#utility.yul\":8403:8520   */\n      pop\n        /* \"#utility.yul\":8559:8561   */\n      0x20\n        /* \"#utility.yul\":8585:8638   */\n      tag_499\n        /* \"#utility.yul\":8630:8637   */\n      dup6\n        /* \"#utility.yul\":8621:8627   */\n      dup3\n        /* \"#utility.yul\":8610:8619   */\n      dup7\n        /* \"#utility.yul\":8606:8628   */\n      add\n        /* \"#utility.yul\":8585:8638   */\n      tag_347\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8575:8638   */\n      swap2\n      pop\n        /* \"#utility.yul\":8530:8648   */\n      pop\n        /* \"#utility.yul\":8181:8655   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8661:8990   */\n    tag_71:\n        /* \"#utility.yul\":8720:8726   */\n      0x00\n        /* \"#utility.yul\":8769:8771   */\n      0x20\n        /* \"#utility.yul\":8757:8766   */\n      dup3\n        /* \"#utility.yul\":8748:8755   */\n      dup5\n        /* \"#utility.yul\":8744:8767   */\n      sub\n        /* \"#utility.yul\":8740:8772   */\n      slt\n        /* \"#utility.yul\":8737:8856   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8775:8854   */\n      tag_502\n      tag_333\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8737:8856   */\n    tag_501:\n        /* \"#utility.yul\":8895:8896   */\n      0x00\n        /* \"#utility.yul\":8920:8973   */\n      tag_503\n        /* \"#utility.yul\":8965:8972   */\n      dup5\n        /* \"#utility.yul\":8956:8962   */\n      dup3\n        /* \"#utility.yul\":8945:8954   */\n      dup6\n        /* \"#utility.yul\":8941:8963   */\n      add\n        /* \"#utility.yul\":8920:8973   */\n      tag_352\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8910:8973   */\n      swap2\n      pop\n        /* \"#utility.yul\":8866:8983   */\n      pop\n        /* \"#utility.yul\":8661:8990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8996:9114   */\n    tag_361:\n        /* \"#utility.yul\":9083:9107   */\n      tag_505\n        /* \"#utility.yul\":9101:9106   */\n      dup2\n        /* \"#utility.yul\":9083:9107   */\n      tag_345\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9078:9081   */\n      dup3\n        /* \"#utility.yul\":9071:9108   */\n      mstore\n        /* \"#utility.yul\":8996:9114   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9120:9342   */\n    tag_74:\n        /* \"#utility.yul\":9213:9217   */\n      0x00\n        /* \"#utility.yul\":9251:9253   */\n      0x20\n        /* \"#utility.yul\":9240:9249   */\n      dup3\n        /* \"#utility.yul\":9236:9254   */\n      add\n        /* \"#utility.yul\":9228:9254   */\n      swap1\n      pop\n        /* \"#utility.yul\":9264:9335   */\n      tag_507\n        /* \"#utility.yul\":9332:9333   */\n      0x00\n        /* \"#utility.yul\":9321:9330   */\n      dup4\n        /* \"#utility.yul\":9317:9334   */\n      add\n        /* \"#utility.yul\":9308:9314   */\n      dup5\n        /* \"#utility.yul\":9264:9335   */\n      tag_361\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9120:9342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9348:9464   */\n    tag_362:\n        /* \"#utility.yul\":9418:9439   */\n      tag_509\n        /* \"#utility.yul\":9433:9438   */\n      dup2\n        /* \"#utility.yul\":9418:9439   */\n      tag_338\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9411:9416   */\n      dup2\n        /* \"#utility.yul\":9408:9440   */\n      eq\n        /* \"#utility.yul\":9398:9458   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9451:9452   */\n      dup1\n        /* \"#utility.yul\":9444:9456   */\n      revert\n        /* \"#utility.yul\":9398:9458   */\n    tag_510:\n        /* \"#utility.yul\":9348:9464   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9470:9603   */\n    tag_363:\n        /* \"#utility.yul\":9513:9518   */\n      0x00\n        /* \"#utility.yul\":9551:9557   */\n      dup2\n        /* \"#utility.yul\":9538:9558   */\n      calldataload\n        /* \"#utility.yul\":9529:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9567:9597   */\n      tag_512\n        /* \"#utility.yul\":9591:9596   */\n      dup2\n        /* \"#utility.yul\":9567:9597   */\n      tag_362\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9470:9603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9609:10077   */\n    tag_85:\n        /* \"#utility.yul\":9674:9680   */\n      0x00\n        /* \"#utility.yul\":9682:9688   */\n      dup1\n        /* \"#utility.yul\":9731:9733   */\n      0x40\n        /* \"#utility.yul\":9719:9728   */\n      dup4\n        /* \"#utility.yul\":9710:9717   */\n      dup6\n        /* \"#utility.yul\":9706:9729   */\n      sub\n        /* \"#utility.yul\":9702:9734   */\n      slt\n        /* \"#utility.yul\":9699:9818   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":9737:9816   */\n      tag_515\n      tag_333\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9699:9818   */\n    tag_514:\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9882:9935   */\n      tag_516\n        /* \"#utility.yul\":9927:9934   */\n      dup6\n        /* \"#utility.yul\":9918:9924   */\n      dup3\n        /* \"#utility.yul\":9907:9916   */\n      dup7\n        /* \"#utility.yul\":9903:9925   */\n      add\n        /* \"#utility.yul\":9882:9935   */\n      tag_352\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9872:9935   */\n      swap3\n      pop\n        /* \"#utility.yul\":9828:9945   */\n      pop\n        /* \"#utility.yul\":9984:9986   */\n      0x20\n        /* \"#utility.yul\":10010:10060   */\n      tag_517\n        /* \"#utility.yul\":10052:10059   */\n      dup6\n        /* \"#utility.yul\":10043:10049   */\n      dup3\n        /* \"#utility.yul\":10032:10041   */\n      dup7\n        /* \"#utility.yul\":10028:10050   */\n      add\n        /* \"#utility.yul\":10010:10060   */\n      tag_363\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10000:10060   */\n      swap2\n      pop\n        /* \"#utility.yul\":9955:10070   */\n      pop\n        /* \"#utility.yul\":9609:10077   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10083:10390   */\n    tag_364:\n        /* \"#utility.yul\":10144:10148   */\n      0x00\n        /* \"#utility.yul\":10234:10252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10226:10232   */\n      dup3\n        /* \"#utility.yul\":10223:10253   */\n      gt\n        /* \"#utility.yul\":10220:10276   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10256:10274   */\n      tag_520\n      tag_298\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10220:10276   */\n    tag_519:\n        /* \"#utility.yul\":10294:10323   */\n      tag_521\n        /* \"#utility.yul\":10316:10322   */\n      dup3\n        /* \"#utility.yul\":10294:10323   */\n      tag_343\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10286:10323   */\n      swap1\n      pop\n        /* \"#utility.yul\":10378:10382   */\n      0x20\n        /* \"#utility.yul\":10372:10376   */\n      dup2\n        /* \"#utility.yul\":10368:10383   */\n      add\n        /* \"#utility.yul\":10360:10383   */\n      swap1\n      pop\n        /* \"#utility.yul\":10083:10390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10396:10819   */\n    tag_365:\n        /* \"#utility.yul\":10473:10478   */\n      0x00\n        /* \"#utility.yul\":10498:10563   */\n      tag_523\n        /* \"#utility.yul\":10514:10562   */\n      tag_524\n        /* \"#utility.yul\":10555:10561   */\n      dup5\n        /* \"#utility.yul\":10514:10562   */\n      tag_364\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10498:10563   */\n      tag_356\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10489:10563   */\n      swap1\n      pop\n        /* \"#utility.yul\":10586:10592   */\n      dup3\n        /* \"#utility.yul\":10579:10584   */\n      dup2\n        /* \"#utility.yul\":10572:10593   */\n      mstore\n        /* \"#utility.yul\":10624:10628   */\n      0x20\n        /* \"#utility.yul\":10617:10622   */\n      dup2\n        /* \"#utility.yul\":10613:10629   */\n      add\n        /* \"#utility.yul\":10662:10665   */\n      dup5\n        /* \"#utility.yul\":10653:10659   */\n      dup5\n        /* \"#utility.yul\":10648:10651   */\n      dup5\n        /* \"#utility.yul\":10644:10660   */\n      add\n        /* \"#utility.yul\":10641:10666   */\n      gt\n        /* \"#utility.yul\":10638:10750   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10669:10748   */\n      tag_526\n      tag_354\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10638:10750   */\n    tag_525:\n        /* \"#utility.yul\":10759:10813   */\n      tag_527\n        /* \"#utility.yul\":10806:10812   */\n      dup5\n        /* \"#utility.yul\":10801:10804   */\n      dup3\n        /* \"#utility.yul\":10796:10799   */\n      dup6\n        /* \"#utility.yul\":10759:10813   */\n      tag_358\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10479:10819   */\n      pop\n        /* \"#utility.yul\":10396:10819   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10838:11176   */\n    tag_366:\n        /* \"#utility.yul\":10893:10898   */\n      0x00\n        /* \"#utility.yul\":10942:10945   */\n      dup3\n        /* \"#utility.yul\":10935:10939   */\n      0x1f\n        /* \"#utility.yul\":10927:10933   */\n      dup4\n        /* \"#utility.yul\":10923:10940   */\n      add\n        /* \"#utility.yul\":10919:10946   */\n      slt\n        /* \"#utility.yul\":10909:11031   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":10950:11029   */\n      tag_530\n      tag_353\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10909:11031   */\n    tag_529:\n        /* \"#utility.yul\":11067:11073   */\n      dup2\n        /* \"#utility.yul\":11054:11074   */\n      calldataload\n        /* \"#utility.yul\":11092:11170   */\n      tag_531\n        /* \"#utility.yul\":11166:11169   */\n      dup5\n        /* \"#utility.yul\":11158:11164   */\n      dup3\n        /* \"#utility.yul\":11151:11155   */\n      0x20\n        /* \"#utility.yul\":11143:11149   */\n      dup7\n        /* \"#utility.yul\":11139:11156   */\n      add\n        /* \"#utility.yul\":11092:11170   */\n      tag_365\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11083:11170   */\n      swap2\n      pop\n        /* \"#utility.yul\":10899:11176   */\n      pop\n        /* \"#utility.yul\":10838:11176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11182:12125   */\n    tag_90:\n        /* \"#utility.yul\":11277:11283   */\n      0x00\n        /* \"#utility.yul\":11285:11291   */\n      dup1\n        /* \"#utility.yul\":11293:11299   */\n      0x00\n        /* \"#utility.yul\":11301:11307   */\n      dup1\n        /* \"#utility.yul\":11350:11353   */\n      0x80\n        /* \"#utility.yul\":11338:11347   */\n      dup6\n        /* \"#utility.yul\":11329:11336   */\n      dup8\n        /* \"#utility.yul\":11325:11348   */\n      sub\n        /* \"#utility.yul\":11321:11354   */\n      slt\n        /* \"#utility.yul\":11318:11438   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":11357:11436   */\n      tag_534\n      tag_333\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11318:11438   */\n    tag_533:\n        /* \"#utility.yul\":11477:11478   */\n      0x00\n        /* \"#utility.yul\":11502:11555   */\n      tag_535\n        /* \"#utility.yul\":11547:11554   */\n      dup8\n        /* \"#utility.yul\":11538:11544   */\n      dup3\n        /* \"#utility.yul\":11527:11536   */\n      dup9\n        /* \"#utility.yul\":11523:11545   */\n      add\n        /* \"#utility.yul\":11502:11555   */\n      tag_352\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11492:11555   */\n      swap5\n      pop\n        /* \"#utility.yul\":11448:11565   */\n      pop\n        /* \"#utility.yul\":11604:11606   */\n      0x20\n        /* \"#utility.yul\":11630:11683   */\n      tag_536\n        /* \"#utility.yul\":11675:11682   */\n      dup8\n        /* \"#utility.yul\":11666:11672   */\n      dup3\n        /* \"#utility.yul\":11655:11664   */\n      dup9\n        /* \"#utility.yul\":11651:11673   */\n      add\n        /* \"#utility.yul\":11630:11683   */\n      tag_352\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11620:11683   */\n      swap4\n      pop\n        /* \"#utility.yul\":11575:11693   */\n      pop\n        /* \"#utility.yul\":11732:11734   */\n      0x40\n        /* \"#utility.yul\":11758:11811   */\n      tag_537\n        /* \"#utility.yul\":11803:11810   */\n      dup8\n        /* \"#utility.yul\":11794:11800   */\n      dup3\n        /* \"#utility.yul\":11783:11792   */\n      dup9\n        /* \"#utility.yul\":11779:11801   */\n      add\n        /* \"#utility.yul\":11758:11811   */\n      tag_347\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11748:11811   */\n      swap3\n      pop\n        /* \"#utility.yul\":11703:11821   */\n      pop\n        /* \"#utility.yul\":11888:11890   */\n      0x60\n        /* \"#utility.yul\":11877:11886   */\n      dup6\n        /* \"#utility.yul\":11873:11891   */\n      add\n        /* \"#utility.yul\":11860:11892   */\n      calldataload\n        /* \"#utility.yul\":11919:11937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11911:11917   */\n      dup2\n        /* \"#utility.yul\":11908:11938   */\n      gt\n        /* \"#utility.yul\":11905:12022   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":11941:12020   */\n      tag_539\n      tag_334\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11905:12022   */\n    tag_538:\n        /* \"#utility.yul\":12046:12108   */\n      tag_540\n        /* \"#utility.yul\":12100:12107   */\n      dup8\n        /* \"#utility.yul\":12091:12097   */\n      dup3\n        /* \"#utility.yul\":12080:12089   */\n      dup9\n        /* \"#utility.yul\":12076:12098   */\n      add\n        /* \"#utility.yul\":12046:12108   */\n      tag_366\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12036:12108   */\n      swap2\n      pop\n        /* \"#utility.yul\":11831:12118   */\n      pop\n        /* \"#utility.yul\":11182:12125   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12131:12605   */\n    tag_100:\n        /* \"#utility.yul\":12199:12205   */\n      0x00\n        /* \"#utility.yul\":12207:12213   */\n      dup1\n        /* \"#utility.yul\":12256:12258   */\n      0x40\n        /* \"#utility.yul\":12244:12253   */\n      dup4\n        /* \"#utility.yul\":12235:12242   */\n      dup6\n        /* \"#utility.yul\":12231:12254   */\n      sub\n        /* \"#utility.yul\":12227:12259   */\n      slt\n        /* \"#utility.yul\":12224:12343   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":12262:12341   */\n      tag_543\n      tag_333\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12224:12343   */\n    tag_542:\n        /* \"#utility.yul\":12382:12383   */\n      0x00\n        /* \"#utility.yul\":12407:12460   */\n      tag_544\n        /* \"#utility.yul\":12452:12459   */\n      dup6\n        /* \"#utility.yul\":12443:12449   */\n      dup3\n        /* \"#utility.yul\":12432:12441   */\n      dup7\n        /* \"#utility.yul\":12428:12450   */\n      add\n        /* \"#utility.yul\":12407:12460   */\n      tag_352\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12397:12460   */\n      swap3\n      pop\n        /* \"#utility.yul\":12353:12470   */\n      pop\n        /* \"#utility.yul\":12509:12511   */\n      0x20\n        /* \"#utility.yul\":12535:12588   */\n      tag_545\n        /* \"#utility.yul\":12580:12587   */\n      dup6\n        /* \"#utility.yul\":12571:12577   */\n      dup3\n        /* \"#utility.yul\":12560:12569   */\n      dup7\n        /* \"#utility.yul\":12556:12578   */\n      add\n        /* \"#utility.yul\":12535:12588   */\n      tag_352\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12525:12588   */\n      swap2\n      pop\n        /* \"#utility.yul\":12480:12598   */\n      pop\n        /* \"#utility.yul\":12131:12605   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12611:12791   */\n    tag_367:\n        /* \"#utility.yul\":12659:12736   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12656:12657   */\n      0x00\n        /* \"#utility.yul\":12649:12737   */\n      mstore\n        /* \"#utility.yul\":12756:12760   */\n      0x22\n        /* \"#utility.yul\":12753:12754   */\n      0x04\n        /* \"#utility.yul\":12746:12761   */\n      mstore\n        /* \"#utility.yul\":12780:12784   */\n      0x24\n        /* \"#utility.yul\":12777:12778   */\n      0x00\n        /* \"#utility.yul\":12770:12785   */\n      revert\n        /* \"#utility.yul\":12797:13117   */\n    tag_109:\n        /* \"#utility.yul\":12841:12847   */\n      0x00\n        /* \"#utility.yul\":12878:12879   */\n      0x02\n        /* \"#utility.yul\":12872:12876   */\n      dup3\n        /* \"#utility.yul\":12868:12880   */\n      div\n        /* \"#utility.yul\":12858:12880   */\n      swap1\n      pop\n        /* \"#utility.yul\":12925:12926   */\n      0x01\n        /* \"#utility.yul\":12919:12923   */\n      dup3\n        /* \"#utility.yul\":12915:12927   */\n      and\n        /* \"#utility.yul\":12946:12964   */\n      dup1\n        /* \"#utility.yul\":12936:13017   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":13002:13006   */\n      0x7f\n        /* \"#utility.yul\":12994:13000   */\n      dup3\n        /* \"#utility.yul\":12990:13007   */\n      and\n        /* \"#utility.yul\":12980:13007   */\n      swap2\n      pop\n        /* \"#utility.yul\":12936:13017   */\n    tag_548:\n        /* \"#utility.yul\":13064:13066   */\n      0x20\n        /* \"#utility.yul\":13056:13062   */\n      dup3\n        /* \"#utility.yul\":13053:13067   */\n      lt\n        /* \"#utility.yul\":13033:13051   */\n      dup2\n        /* \"#utility.yul\":13030:13068   */\n      sub\n        /* \"#utility.yul\":13027:13111   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":13083:13101   */\n      tag_550\n      tag_367\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13027:13111   */\n    tag_549:\n        /* \"#utility.yul\":12848:13117   */\n      pop\n        /* \"#utility.yul\":12797:13117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13123:13565   */\n    tag_132:\n        /* \"#utility.yul\":13272:13276   */\n      0x00\n        /* \"#utility.yul\":13310:13312   */\n      0x60\n        /* \"#utility.yul\":13299:13308   */\n      dup3\n        /* \"#utility.yul\":13295:13313   */\n      add\n        /* \"#utility.yul\":13287:13313   */\n      swap1\n      pop\n        /* \"#utility.yul\":13323:13394   */\n      tag_552\n        /* \"#utility.yul\":13391:13392   */\n      0x00\n        /* \"#utility.yul\":13380:13389   */\n      dup4\n        /* \"#utility.yul\":13376:13393   */\n      add\n        /* \"#utility.yul\":13367:13373   */\n      dup7\n        /* \"#utility.yul\":13323:13394   */\n      tag_350\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13404:13476   */\n      tag_553\n        /* \"#utility.yul\":13472:13474   */\n      0x20\n        /* \"#utility.yul\":13461:13470   */\n      dup4\n        /* \"#utility.yul\":13457:13475   */\n      add\n        /* \"#utility.yul\":13448:13454   */\n      dup6\n        /* \"#utility.yul\":13404:13476   */\n      tag_361\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13486:13558   */\n      tag_554\n        /* \"#utility.yul\":13554:13556   */\n      0x40\n        /* \"#utility.yul\":13543:13552   */\n      dup4\n        /* \"#utility.yul\":13539:13557   */\n      add\n        /* \"#utility.yul\":13530:13536   */\n      dup5\n        /* \"#utility.yul\":13486:13558   */\n      tag_350\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13123:13565   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13571:13749   */\n    tag_368:\n        /* \"#utility.yul\":13711:13741   */\n      0x5072696365206d757374206265206174206c6561737420312077656900000000\n        /* \"#utility.yul\":13707:13708   */\n      0x00\n        /* \"#utility.yul\":13699:13705   */\n      dup3\n        /* \"#utility.yul\":13695:13709   */\n      add\n        /* \"#utility.yul\":13688:13742   */\n      mstore\n        /* \"#utility.yul\":13571:13749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13755:14121   */\n    tag_369:\n        /* \"#utility.yul\":13897:13900   */\n      0x00\n        /* \"#utility.yul\":13918:13985   */\n      tag_557\n        /* \"#utility.yul\":13982:13984   */\n      0x1c\n        /* \"#utility.yul\":13977:13980   */\n      dup4\n        /* \"#utility.yul\":13918:13985   */\n      tag_341\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":13911:13985   */\n      swap2\n      pop\n        /* \"#utility.yul\":13994:14087   */\n      tag_558\n        /* \"#utility.yul\":14083:14086   */\n      dup3\n        /* \"#utility.yul\":13994:14087   */\n      tag_368\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14112:14114   */\n      0x20\n        /* \"#utility.yul\":14107:14110   */\n      dup3\n        /* \"#utility.yul\":14103:14115   */\n      add\n        /* \"#utility.yul\":14096:14115   */\n      swap1\n      pop\n        /* \"#utility.yul\":13755:14121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14127:14546   */\n    tag_139:\n        /* \"#utility.yul\":14293:14297   */\n      0x00\n        /* \"#utility.yul\":14331:14333   */\n      0x20\n        /* \"#utility.yul\":14320:14329   */\n      dup3\n        /* \"#utility.yul\":14316:14334   */\n      add\n        /* \"#utility.yul\":14308:14334   */\n      swap1\n      pop\n        /* \"#utility.yul\":14380:14389   */\n      dup2\n        /* \"#utility.yul\":14374:14378   */\n      dup2\n        /* \"#utility.yul\":14370:14390   */\n      sub\n        /* \"#utility.yul\":14366:14367   */\n      0x00\n        /* \"#utility.yul\":14355:14364   */\n      dup4\n        /* \"#utility.yul\":14351:14368   */\n      add\n        /* \"#utility.yul\":14344:14391   */\n      mstore\n        /* \"#utility.yul\":14408:14539   */\n      tag_560\n        /* \"#utility.yul\":14534:14538   */\n      dup2\n        /* \"#utility.yul\":14408:14539   */\n      tag_369\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14400:14539   */\n      swap1\n      pop\n        /* \"#utility.yul\":14127:14546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14552:14982   */\n    tag_147:\n        /* \"#utility.yul\":14695:14699   */\n      0x00\n        /* \"#utility.yul\":14733:14735   */\n      0x60\n        /* \"#utility.yul\":14722:14731   */\n      dup3\n        /* \"#utility.yul\":14718:14736   */\n      add\n        /* \"#utility.yul\":14710:14736   */\n      swap1\n      pop\n        /* \"#utility.yul\":14746:14817   */\n      tag_562\n        /* \"#utility.yul\":14814:14815   */\n      0x00\n        /* \"#utility.yul\":14803:14812   */\n      dup4\n        /* \"#utility.yul\":14799:14816   */\n      add\n        /* \"#utility.yul\":14790:14796   */\n      dup7\n        /* \"#utility.yul\":14746:14817   */\n      tag_350\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14827:14899   */\n      tag_563\n        /* \"#utility.yul\":14895:14897   */\n      0x20\n        /* \"#utility.yul\":14884:14893   */\n      dup4\n        /* \"#utility.yul\":14880:14898   */\n      add\n        /* \"#utility.yul\":14871:14877   */\n      dup6\n        /* \"#utility.yul\":14827:14899   */\n      tag_361\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14909:14975   */\n      tag_564\n        /* \"#utility.yul\":14971:14973   */\n      0x40\n        /* \"#utility.yul\":14960:14969   */\n      dup4\n        /* \"#utility.yul\":14956:14974   */\n      add\n        /* \"#utility.yul\":14947:14953   */\n      dup5\n        /* \"#utility.yul\":14909:14975   */\n      tag_339\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14552:14982   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14988:15168   */\n    tag_370:\n        /* \"#utility.yul\":15128:15160   */\n      0x546869732073616c6520697320616c72656164792066696e616c697a65640000\n        /* \"#utility.yul\":15124:15125   */\n      0x00\n        /* \"#utility.yul\":15116:15122   */\n      dup3\n        /* \"#utility.yul\":15112:15126   */\n      add\n        /* \"#utility.yul\":15105:15161   */\n      mstore\n        /* \"#utility.yul\":14988:15168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15174:15540   */\n    tag_371:\n        /* \"#utility.yul\":15316:15319   */\n      0x00\n        /* \"#utility.yul\":15337:15404   */\n      tag_567\n        /* \"#utility.yul\":15401:15403   */\n      0x1e\n        /* \"#utility.yul\":15396:15399   */\n      dup4\n        /* \"#utility.yul\":15337:15404   */\n      tag_341\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15330:15404   */\n      swap2\n      pop\n        /* \"#utility.yul\":15413:15506   */\n      tag_568\n        /* \"#utility.yul\":15502:15505   */\n      dup3\n        /* \"#utility.yul\":15413:15506   */\n      tag_370\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15531:15533   */\n      0x20\n        /* \"#utility.yul\":15526:15529   */\n      dup3\n        /* \"#utility.yul\":15522:15534   */\n      add\n        /* \"#utility.yul\":15515:15534   */\n      swap1\n      pop\n        /* \"#utility.yul\":15174:15540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15546:15965   */\n    tag_164:\n        /* \"#utility.yul\":15712:15716   */\n      0x00\n        /* \"#utility.yul\":15750:15752   */\n      0x20\n        /* \"#utility.yul\":15739:15748   */\n      dup3\n        /* \"#utility.yul\":15735:15753   */\n      add\n        /* \"#utility.yul\":15727:15753   */\n      swap1\n      pop\n        /* \"#utility.yul\":15799:15808   */\n      dup2\n        /* \"#utility.yul\":15793:15797   */\n      dup2\n        /* \"#utility.yul\":15789:15809   */\n      sub\n        /* \"#utility.yul\":15785:15786   */\n      0x00\n        /* \"#utility.yul\":15774:15783   */\n      dup4\n        /* \"#utility.yul\":15770:15787   */\n      add\n        /* \"#utility.yul\":15763:15810   */\n      mstore\n        /* \"#utility.yul\":15827:15958   */\n      tag_570\n        /* \"#utility.yul\":15953:15957   */\n      dup2\n        /* \"#utility.yul\":15827:15958   */\n      tag_371\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15819:15958   */\n      swap1\n      pop\n        /* \"#utility.yul\":15546:15965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15971:16031   */\n    tag_372:\n        /* \"#utility.yul\":15999:16002   */\n      0x00\n        /* \"#utility.yul\":16020:16025   */\n      dup2\n        /* \"#utility.yul\":16013:16025   */\n      swap1\n      pop\n        /* \"#utility.yul\":15971:16031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16037:16179   */\n    tag_373:\n        /* \"#utility.yul\":16087:16096   */\n      0x00\n        /* \"#utility.yul\":16120:16173   */\n      tag_573\n        /* \"#utility.yul\":16138:16172   */\n      tag_574\n        /* \"#utility.yul\":16147:16171   */\n      tag_575\n        /* \"#utility.yul\":16165:16170   */\n      dup5\n        /* \"#utility.yul\":16147:16171   */\n      tag_348\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16138:16172   */\n      tag_372\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16120:16173   */\n      tag_348\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16107:16173   */\n      swap1\n      pop\n        /* \"#utility.yul\":16037:16179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16185:16311   */\n    tag_374:\n        /* \"#utility.yul\":16235:16244   */\n      0x00\n        /* \"#utility.yul\":16268:16305   */\n      tag_577\n        /* \"#utility.yul\":16299:16304   */\n      dup3\n        /* \"#utility.yul\":16268:16305   */\n      tag_373\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16255:16305   */\n      swap1\n      pop\n        /* \"#utility.yul\":16185:16311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16317:16451   */\n    tag_375:\n        /* \"#utility.yul\":16375:16384   */\n      0x00\n        /* \"#utility.yul\":16408:16445   */\n      tag_579\n        /* \"#utility.yul\":16439:16444   */\n      dup3\n        /* \"#utility.yul\":16408:16445   */\n      tag_374\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16395:16445   */\n      swap1\n      pop\n        /* \"#utility.yul\":16317:16451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16457:16604   */\n    tag_376:\n        /* \"#utility.yul\":16552:16597   */\n      tag_581\n        /* \"#utility.yul\":16591:16596   */\n      dup2\n        /* \"#utility.yul\":16552:16597   */\n      tag_375\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16547:16550   */\n      dup3\n        /* \"#utility.yul\":16540:16598   */\n      mstore\n        /* \"#utility.yul\":16457:16604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16610:17068   */\n    tag_166:\n        /* \"#utility.yul\":16767:16771   */\n      0x00\n        /* \"#utility.yul\":16805:16807   */\n      0x60\n        /* \"#utility.yul\":16794:16803   */\n      dup3\n        /* \"#utility.yul\":16790:16808   */\n      add\n        /* \"#utility.yul\":16782:16808   */\n      swap1\n      pop\n        /* \"#utility.yul\":16818:16889   */\n      tag_583\n        /* \"#utility.yul\":16886:16887   */\n      0x00\n        /* \"#utility.yul\":16875:16884   */\n      dup4\n        /* \"#utility.yul\":16871:16888   */\n      add\n        /* \"#utility.yul\":16862:16868   */\n      dup7\n        /* \"#utility.yul\":16818:16889   */\n      tag_350\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16899:16979   */\n      tag_584\n        /* \"#utility.yul\":16975:16977   */\n      0x20\n        /* \"#utility.yul\":16964:16973   */\n      dup4\n        /* \"#utility.yul\":16960:16978   */\n      add\n        /* \"#utility.yul\":16951:16957   */\n      dup6\n        /* \"#utility.yul\":16899:16979   */\n      tag_376\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16989:17061   */\n      tag_585\n        /* \"#utility.yul\":17057:17059   */\n      0x40\n        /* \"#utility.yul\":17046:17055   */\n      dup4\n        /* \"#utility.yul\":17042:17060   */\n      add\n        /* \"#utility.yul\":17033:17039   */\n      dup5\n        /* \"#utility.yul\":16989:17061   */\n      tag_361\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16610:17068   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17074:17211   */\n    tag_377:\n        /* \"#utility.yul\":17128:17133   */\n      0x00\n        /* \"#utility.yul\":17159:17165   */\n      dup2\n        /* \"#utility.yul\":17153:17166   */\n      mload\n        /* \"#utility.yul\":17144:17166   */\n      swap1\n      pop\n        /* \"#utility.yul\":17175:17205   */\n      tag_587\n        /* \"#utility.yul\":17199:17204   */\n      dup2\n        /* \"#utility.yul\":17175:17205   */\n      tag_362\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17074:17211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17217:17562   */\n    tag_170:\n        /* \"#utility.yul\":17284:17290   */\n      0x00\n        /* \"#utility.yul\":17333:17335   */\n      0x20\n        /* \"#utility.yul\":17321:17330   */\n      dup3\n        /* \"#utility.yul\":17312:17319   */\n      dup5\n        /* \"#utility.yul\":17308:17331   */\n      sub\n        /* \"#utility.yul\":17304:17336   */\n      slt\n        /* \"#utility.yul\":17301:17420   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":17339:17418   */\n      tag_590\n      tag_333\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17301:17420   */\n    tag_589:\n        /* \"#utility.yul\":17459:17460   */\n      0x00\n        /* \"#utility.yul\":17484:17545   */\n      tag_591\n        /* \"#utility.yul\":17537:17544   */\n      dup5\n        /* \"#utility.yul\":17528:17534   */\n      dup3\n        /* \"#utility.yul\":17517:17526   */\n      dup6\n        /* \"#utility.yul\":17513:17535   */\n      add\n        /* \"#utility.yul\":17484:17545   */\n      tag_377\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":17474:17545   */\n      swap2\n      pop\n        /* \"#utility.yul\":17430:17555   */\n      pop\n        /* \"#utility.yul\":17217:17562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17568:17744   */\n    tag_378:\n        /* \"#utility.yul\":17708:17736   */\n      0x4661696c656420746f207472616e73666572207061796d656e74000000000000\n        /* \"#utility.yul\":17704:17705   */\n      0x00\n        /* \"#utility.yul\":17696:17702   */\n      dup3\n        /* \"#utility.yul\":17692:17706   */\n      add\n        /* \"#utility.yul\":17685:17737   */\n      mstore\n        /* \"#utility.yul\":17568:17744   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17750:18116   */\n    tag_379:\n        /* \"#utility.yul\":17892:17895   */\n      0x00\n        /* \"#utility.yul\":17913:17980   */\n      tag_594\n        /* \"#utility.yul\":17977:17979   */\n      0x1a\n        /* \"#utility.yul\":17972:17975   */\n      dup4\n        /* \"#utility.yul\":17913:17980   */\n      tag_341\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17906:17980   */\n      swap2\n      pop\n        /* \"#utility.yul\":17989:18082   */\n      tag_595\n        /* \"#utility.yul\":18078:18081   */\n      dup3\n        /* \"#utility.yul\":17989:18082   */\n      tag_378\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":18107:18109   */\n      0x20\n        /* \"#utility.yul\":18102:18105   */\n      dup3\n        /* \"#utility.yul\":18098:18110   */\n      add\n        /* \"#utility.yul\":18091:18110   */\n      swap1\n      pop\n        /* \"#utility.yul\":17750:18116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18122:18541   */\n    tag_173:\n        /* \"#utility.yul\":18288:18292   */\n      0x00\n        /* \"#utility.yul\":18326:18328   */\n      0x20\n        /* \"#utility.yul\":18315:18324   */\n      dup3\n        /* \"#utility.yul\":18311:18329   */\n      add\n        /* \"#utility.yul\":18303:18329   */\n      swap1\n      pop\n        /* \"#utility.yul\":18375:18384   */\n      dup2\n        /* \"#utility.yul\":18369:18373   */\n      dup2\n        /* \"#utility.yul\":18365:18385   */\n      sub\n        /* \"#utility.yul\":18361:18362   */\n      0x00\n        /* \"#utility.yul\":18350:18359   */\n      dup4\n        /* \"#utility.yul\":18346:18363   */\n      add\n        /* \"#utility.yul\":18339:18386   */\n      mstore\n        /* \"#utility.yul\":18403:18534   */\n      tag_597\n        /* \"#utility.yul\":18529:18533   */\n      dup2\n        /* \"#utility.yul\":18403:18534   */\n      tag_379\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":18395:18534   */\n      swap1\n      pop\n        /* \"#utility.yul\":18122:18541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18547:18993   */\n    tag_176:\n        /* \"#utility.yul\":18698:18702   */\n      0x00\n        /* \"#utility.yul\":18736:18738   */\n      0x60\n        /* \"#utility.yul\":18725:18734   */\n      dup3\n        /* \"#utility.yul\":18721:18739   */\n      add\n        /* \"#utility.yul\":18713:18739   */\n      swap1\n      pop\n        /* \"#utility.yul\":18749:18828   */\n      tag_599\n        /* \"#utility.yul\":18825:18826   */\n      0x00\n        /* \"#utility.yul\":18814:18823   */\n      dup4\n        /* \"#utility.yul\":18810:18827   */\n      add\n        /* \"#utility.yul\":18801:18807   */\n      dup7\n        /* \"#utility.yul\":18749:18828   */\n      tag_376\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":18838:18910   */\n      tag_600\n        /* \"#utility.yul\":18906:18908   */\n      0x20\n        /* \"#utility.yul\":18895:18904   */\n      dup4\n        /* \"#utility.yul\":18891:18909   */\n      add\n        /* \"#utility.yul\":18882:18888   */\n      dup6\n        /* \"#utility.yul\":18838:18910   */\n      tag_361\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18920:18986   */\n      tag_601\n        /* \"#utility.yul\":18982:18984   */\n      0x40\n        /* \"#utility.yul\":18971:18980   */\n      dup4\n        /* \"#utility.yul\":18967:18985   */\n      add\n        /* \"#utility.yul\":18958:18964   */\n      dup5\n        /* \"#utility.yul\":18920:18986   */\n      tag_339\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":18547:18993   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18999:19147   */\n    tag_380:\n        /* \"#utility.yul\":19101:19112   */\n      0x00\n        /* \"#utility.yul\":19138:19141   */\n      dup2\n        /* \"#utility.yul\":19123:19141   */\n      swap1\n      pop\n        /* \"#utility.yul\":18999:19147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19153:19543   */\n    tag_381:\n        /* \"#utility.yul\":19259:19262   */\n      0x00\n        /* \"#utility.yul\":19287:19326   */\n      tag_604\n        /* \"#utility.yul\":19320:19325   */\n      dup3\n        /* \"#utility.yul\":19287:19326   */\n      tag_340\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19342:19431   */\n      tag_605\n        /* \"#utility.yul\":19424:19430   */\n      dup2\n        /* \"#utility.yul\":19419:19422   */\n      dup6\n        /* \"#utility.yul\":19342:19431   */\n      tag_380\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":19335:19431   */\n      swap4\n      pop\n        /* \"#utility.yul\":19440:19505   */\n      tag_606\n        /* \"#utility.yul\":19498:19504   */\n      dup2\n        /* \"#utility.yul\":19493:19496   */\n      dup6\n        /* \"#utility.yul\":19486:19490   */\n      0x20\n        /* \"#utility.yul\":19479:19484   */\n      dup7\n        /* \"#utility.yul\":19475:19491   */\n      add\n        /* \"#utility.yul\":19440:19505   */\n      tag_342\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":19530:19536   */\n      dup1\n        /* \"#utility.yul\":19525:19528   */\n      dup5\n        /* \"#utility.yul\":19521:19537   */\n      add\n        /* \"#utility.yul\":19514:19537   */\n      swap2\n      pop\n        /* \"#utility.yul\":19263:19543   */\n      pop\n        /* \"#utility.yul\":19153:19543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19549:19984   */\n    tag_197:\n        /* \"#utility.yul\":19729:19732   */\n      0x00\n        /* \"#utility.yul\":19751:19846   */\n      tag_608\n        /* \"#utility.yul\":19842:19845   */\n      dup3\n        /* \"#utility.yul\":19833:19839   */\n      dup6\n        /* \"#utility.yul\":19751:19846   */\n      tag_381\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":19744:19846   */\n      swap2\n      pop\n        /* \"#utility.yul\":19863:19958   */\n      tag_609\n        /* \"#utility.yul\":19954:19957   */\n      dup3\n        /* \"#utility.yul\":19945:19951   */\n      dup5\n        /* \"#utility.yul\":19863:19958   */\n      tag_381\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19856:19958   */\n      swap2\n      pop\n        /* \"#utility.yul\":19975:19978   */\n      dup2\n        /* \"#utility.yul\":19968:19978   */\n      swap1\n      pop\n        /* \"#utility.yul\":19549:19984   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19990:20131   */\n    tag_382:\n        /* \"#utility.yul\":20039:20043   */\n      0x00\n        /* \"#utility.yul\":20062:20065   */\n      dup2\n        /* \"#utility.yul\":20054:20065   */\n      swap1\n      pop\n        /* \"#utility.yul\":20085:20088   */\n      dup2\n        /* \"#utility.yul\":20082:20083   */\n      0x00\n        /* \"#utility.yul\":20075:20089   */\n      mstore\n        /* \"#utility.yul\":20119:20123   */\n      0x20\n        /* \"#utility.yul\":20116:20117   */\n      0x00\n        /* \"#utility.yul\":20106:20124   */\n      keccak256\n        /* \"#utility.yul\":20098:20124   */\n      swap1\n      pop\n        /* \"#utility.yul\":19990:20131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20137:20230   */\n    tag_383:\n        /* \"#utility.yul\":20174:20180   */\n      0x00\n        /* \"#utility.yul\":20221:20223   */\n      0x20\n        /* \"#utility.yul\":20216:20218   */\n      0x1f\n        /* \"#utility.yul\":20209:20214   */\n      dup4\n        /* \"#utility.yul\":20205:20219   */\n      add\n        /* \"#utility.yul\":20201:20224   */\n      div\n        /* \"#utility.yul\":20191:20224   */\n      swap1\n      pop\n        /* \"#utility.yul\":20137:20230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20236:20343   */\n    tag_384:\n        /* \"#utility.yul\":20280:20288   */\n      0x00\n        /* \"#utility.yul\":20330:20335   */\n      dup3\n        /* \"#utility.yul\":20324:20328   */\n      dup3\n        /* \"#utility.yul\":20320:20336   */\n      shl\n        /* \"#utility.yul\":20299:20336   */\n      swap1\n      pop\n        /* \"#utility.yul\":20236:20343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20349:20742   */\n    tag_385:\n        /* \"#utility.yul\":20418:20424   */\n      0x00\n        /* \"#utility.yul\":20468:20469   */\n      0x08\n        /* \"#utility.yul\":20456:20466   */\n      dup4\n        /* \"#utility.yul\":20452:20470   */\n      mul\n        /* \"#utility.yul\":20491:20588   */\n      tag_614\n        /* \"#utility.yul\":20521:20587   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20510:20519   */\n      dup3\n        /* \"#utility.yul\":20491:20588   */\n      tag_384\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20609:20648   */\n      tag_615\n        /* \"#utility.yul\":20639:20647   */\n      dup7\n        /* \"#utility.yul\":20628:20637   */\n      dup4\n        /* \"#utility.yul\":20609:20648   */\n      tag_384\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20597:20648   */\n      swap6\n      pop\n        /* \"#utility.yul\":20681:20685   */\n      dup1\n        /* \"#utility.yul\":20677:20686   */\n      not\n        /* \"#utility.yul\":20670:20675   */\n      dup5\n        /* \"#utility.yul\":20666:20687   */\n      and\n        /* \"#utility.yul\":20657:20687   */\n      swap4\n      pop\n        /* \"#utility.yul\":20730:20734   */\n      dup1\n        /* \"#utility.yul\":20720:20728   */\n      dup7\n        /* \"#utility.yul\":20716:20735   */\n      and\n        /* \"#utility.yul\":20709:20714   */\n      dup5\n        /* \"#utility.yul\":20706:20736   */\n      or\n        /* \"#utility.yul\":20696:20736   */\n      swap3\n      pop\n        /* \"#utility.yul\":20425:20742   */\n      pop\n      pop\n        /* \"#utility.yul\":20349:20742   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20748:20890   */\n    tag_386:\n        /* \"#utility.yul\":20798:20807   */\n      0x00\n        /* \"#utility.yul\":20831:20884   */\n      tag_617\n        /* \"#utility.yul\":20849:20883   */\n      tag_618\n        /* \"#utility.yul\":20858:20882   */\n      tag_619\n        /* \"#utility.yul\":20876:20881   */\n      dup5\n        /* \"#utility.yul\":20858:20882   */\n      tag_345\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":20849:20883   */\n      tag_372\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":20831:20884   */\n      tag_345\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":20818:20884   */\n      swap1\n      pop\n        /* \"#utility.yul\":20748:20890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20896:20971   */\n    tag_387:\n        /* \"#utility.yul\":20939:20942   */\n      0x00\n        /* \"#utility.yul\":20960:20965   */\n      dup2\n        /* \"#utility.yul\":20953:20965   */\n      swap1\n      pop\n        /* \"#utility.yul\":20896:20971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20977:21246   */\n    tag_388:\n        /* \"#utility.yul\":21087:21126   */\n      tag_622\n        /* \"#utility.yul\":21118:21125   */\n      dup4\n        /* \"#utility.yul\":21087:21126   */\n      tag_386\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":21148:21239   */\n      tag_623\n        /* \"#utility.yul\":21197:21238   */\n      tag_624\n        /* \"#utility.yul\":21221:21237   */\n      dup3\n        /* \"#utility.yul\":21197:21238   */\n      tag_387\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":21189:21195   */\n      dup5\n        /* \"#utility.yul\":21182:21186   */\n      dup5\n        /* \"#utility.yul\":21176:21187   */\n      sload\n        /* \"#utility.yul\":21148:21239   */\n      tag_385\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":21142:21146   */\n      dup3\n        /* \"#utility.yul\":21135:21240   */\n      sstore\n        /* \"#utility.yul\":21053:21246   */\n      pop\n        /* \"#utility.yul\":20977:21246   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21252:21325   */\n    tag_389:\n        /* \"#utility.yul\":21297:21300   */\n      0x00\n        /* \"#utility.yul\":21252:21325   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21331:21520   */\n    tag_390:\n        /* \"#utility.yul\":21408:21440   */\n      tag_627\n      tag_389\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":21449:21514   */\n      tag_628\n        /* \"#utility.yul\":21507:21513   */\n      dup2\n        /* \"#utility.yul\":21499:21505   */\n      dup5\n        /* \"#utility.yul\":21493:21497   */\n      dup5\n        /* \"#utility.yul\":21449:21514   */\n      tag_388\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":21384:21520   */\n      pop\n        /* \"#utility.yul\":21331:21520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21526:21712   */\n    tag_391:\n        /* \"#utility.yul\":21586:21706   */\n    tag_630:\n        /* \"#utility.yul\":21603:21606   */\n      dup2\n        /* \"#utility.yul\":21596:21601   */\n      dup2\n        /* \"#utility.yul\":21593:21607   */\n      lt\n        /* \"#utility.yul\":21586:21706   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":21657:21696   */\n      tag_633\n        /* \"#utility.yul\":21694:21695   */\n      0x00\n        /* \"#utility.yul\":21687:21692   */\n      dup3\n        /* \"#utility.yul\":21657:21696   */\n      tag_390\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":21630:21631   */\n      0x01\n        /* \"#utility.yul\":21623:21628   */\n      dup2\n        /* \"#utility.yul\":21619:21632   */\n      add\n        /* \"#utility.yul\":21610:21632   */\n      swap1\n      pop\n        /* \"#utility.yul\":21586:21706   */\n      jump(tag_630)\n    tag_632:\n        /* \"#utility.yul\":21526:21712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21718:22261   */\n    tag_392:\n        /* \"#utility.yul\":21819:21821   */\n      0x1f\n        /* \"#utility.yul\":21814:21817   */\n      dup3\n        /* \"#utility.yul\":21811:21822   */\n      gt\n        /* \"#utility.yul\":21808:22254   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":21853:21891   */\n      tag_636\n        /* \"#utility.yul\":21885:21890   */\n      dup2\n        /* \"#utility.yul\":21853:21891   */\n      tag_382\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":21937:21966   */\n      tag_637\n        /* \"#utility.yul\":21955:21965   */\n      dup5\n        /* \"#utility.yul\":21937:21966   */\n      tag_383\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21927:21935   */\n      dup2\n        /* \"#utility.yul\":21923:21967   */\n      add\n        /* \"#utility.yul\":22120:22122   */\n      0x20\n        /* \"#utility.yul\":22108:22118   */\n      dup6\n        /* \"#utility.yul\":22105:22123   */\n      lt\n        /* \"#utility.yul\":22102:22151   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":22141:22149   */\n      dup2\n        /* \"#utility.yul\":22126:22149   */\n      swap1\n      pop\n        /* \"#utility.yul\":22102:22151   */\n    tag_638:\n        /* \"#utility.yul\":22164:22244   */\n      tag_639\n        /* \"#utility.yul\":22220:22242   */\n      tag_640\n        /* \"#utility.yul\":22238:22241   */\n      dup6\n        /* \"#utility.yul\":22220:22242   */\n      tag_383\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":22210:22218   */\n      dup4\n        /* \"#utility.yul\":22206:22243   */\n      add\n        /* \"#utility.yul\":22193:22204   */\n      dup3\n        /* \"#utility.yul\":22164:22244   */\n      tag_391\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21823:22254   */\n      pop\n      pop\n        /* \"#utility.yul\":21808:22254   */\n    tag_635:\n        /* \"#utility.yul\":21718:22261   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22267:22384   */\n    tag_393:\n        /* \"#utility.yul\":22321:22329   */\n      0x00\n        /* \"#utility.yul\":22371:22376   */\n      dup3\n        /* \"#utility.yul\":22365:22369   */\n      dup3\n        /* \"#utility.yul\":22361:22377   */\n      shr\n        /* \"#utility.yul\":22340:22377   */\n      swap1\n      pop\n        /* \"#utility.yul\":22267:22384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22390:22559   */\n    tag_394:\n        /* \"#utility.yul\":22434:22440   */\n      0x00\n        /* \"#utility.yul\":22467:22518   */\n      tag_643\n        /* \"#utility.yul\":22515:22516   */\n      0x00\n        /* \"#utility.yul\":22511:22517   */\n      not\n        /* \"#utility.yul\":22503:22508   */\n      dup5\n        /* \"#utility.yul\":22500:22501   */\n      0x08\n        /* \"#utility.yul\":22496:22509   */\n      mul\n        /* \"#utility.yul\":22467:22518   */\n      tag_393\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":22463:22519   */\n      not\n        /* \"#utility.yul\":22548:22552   */\n      dup1\n        /* \"#utility.yul\":22542:22546   */\n      dup4\n        /* \"#utility.yul\":22538:22553   */\n      and\n        /* \"#utility.yul\":22528:22553   */\n      swap2\n      pop\n        /* \"#utility.yul\":22441:22559   */\n      pop\n        /* \"#utility.yul\":22390:22559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22564:22859   */\n    tag_395:\n        /* \"#utility.yul\":22640:22644   */\n      0x00\n        /* \"#utility.yul\":22786:22815   */\n      tag_645\n        /* \"#utility.yul\":22811:22814   */\n      dup4\n        /* \"#utility.yul\":22805:22809   */\n      dup4\n        /* \"#utility.yul\":22786:22815   */\n      tag_394\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":22778:22815   */\n      swap2\n      pop\n        /* \"#utility.yul\":22848:22851   */\n      dup3\n        /* \"#utility.yul\":22845:22846   */\n      0x02\n        /* \"#utility.yul\":22841:22852   */\n      mul\n        /* \"#utility.yul\":22835:22839   */\n      dup3\n        /* \"#utility.yul\":22832:22853   */\n      or\n        /* \"#utility.yul\":22824:22853   */\n      swap1\n      pop\n        /* \"#utility.yul\":22564:22859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22864:24259   */\n    tag_226:\n        /* \"#utility.yul\":22981:23018   */\n      tag_647\n        /* \"#utility.yul\":23014:23017   */\n      dup3\n        /* \"#utility.yul\":22981:23018   */\n      tag_340\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":23083:23101   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23075:23081   */\n      dup2\n        /* \"#utility.yul\":23072:23102   */\n      gt\n        /* \"#utility.yul\":23069:23125   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":23105:23123   */\n      tag_649\n      tag_298\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":23069:23125   */\n    tag_648:\n        /* \"#utility.yul\":23149:23187   */\n      tag_650\n        /* \"#utility.yul\":23181:23185   */\n      dup3\n        /* \"#utility.yul\":23175:23186   */\n      sload\n        /* \"#utility.yul\":23149:23187   */\n      tag_109\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":23234:23301   */\n      tag_651\n        /* \"#utility.yul\":23294:23300   */\n      dup3\n        /* \"#utility.yul\":23286:23292   */\n      dup3\n        /* \"#utility.yul\":23280:23284   */\n      dup6\n        /* \"#utility.yul\":23234:23301   */\n      tag_392\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":23328:23329   */\n      0x00\n        /* \"#utility.yul\":23352:23356   */\n      0x20\n        /* \"#utility.yul\":23339:23356   */\n      swap1\n      pop\n        /* \"#utility.yul\":23384:23386   */\n      0x1f\n        /* \"#utility.yul\":23376:23382   */\n      dup4\n        /* \"#utility.yul\":23373:23387   */\n      gt\n        /* \"#utility.yul\":23401:23402   */\n      0x01\n        /* \"#utility.yul\":23396:24014   */\n      dup2\n      eq\n      tag_653\n      jumpi\n        /* \"#utility.yul\":24058:24059   */\n      0x00\n        /* \"#utility.yul\":24075:24081   */\n      dup5\n        /* \"#utility.yul\":24072:24149   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":24124:24133   */\n      dup3\n        /* \"#utility.yul\":24119:24122   */\n      dup8\n        /* \"#utility.yul\":24115:24134   */\n      add\n        /* \"#utility.yul\":24109:24135   */\n      mload\n        /* \"#utility.yul\":24100:24135   */\n      swap1\n      pop\n        /* \"#utility.yul\":24072:24149   */\n    tag_654:\n        /* \"#utility.yul\":24175:24242   */\n      tag_655\n        /* \"#utility.yul\":24235:24241   */\n      dup6\n        /* \"#utility.yul\":24228:24233   */\n      dup3\n        /* \"#utility.yul\":24175:24242   */\n      tag_395\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":24169:24173   */\n      dup7\n        /* \"#utility.yul\":24162:24243   */\n      sstore\n        /* \"#utility.yul\":24031:24253   */\n      pop\n        /* \"#utility.yul\":23366:24253   */\n      jump(tag_652)\n        /* \"#utility.yul\":23396:24014   */\n    tag_653:\n        /* \"#utility.yul\":23448:23452   */\n      0x1f\n        /* \"#utility.yul\":23444:23453   */\n      not\n        /* \"#utility.yul\":23436:23442   */\n      dup5\n        /* \"#utility.yul\":23432:23454   */\n      and\n        /* \"#utility.yul\":23482:23519   */\n      tag_656\n        /* \"#utility.yul\":23514:23518   */\n      dup7\n        /* \"#utility.yul\":23482:23519   */\n      tag_382\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":23541:23542   */\n      0x00\n        /* \"#utility.yul\":23555:23763   */\n    tag_657:\n        /* \"#utility.yul\":23569:23576   */\n      dup3\n        /* \"#utility.yul\":23566:23567   */\n      dup2\n        /* \"#utility.yul\":23563:23577   */\n      lt\n        /* \"#utility.yul\":23555:23763   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":23648:23657   */\n      dup5\n        /* \"#utility.yul\":23643:23646   */\n      dup10\n        /* \"#utility.yul\":23639:23658   */\n      add\n        /* \"#utility.yul\":23633:23659   */\n      mload\n        /* \"#utility.yul\":23625:23631   */\n      dup3\n        /* \"#utility.yul\":23618:23660   */\n      sstore\n        /* \"#utility.yul\":23699:23700   */\n      0x01\n        /* \"#utility.yul\":23691:23697   */\n      dup3\n        /* \"#utility.yul\":23687:23701   */\n      add\n        /* \"#utility.yul\":23677:23701   */\n      swap2\n      pop\n        /* \"#utility.yul\":23746:23748   */\n      0x20\n        /* \"#utility.yul\":23735:23744   */\n      dup6\n        /* \"#utility.yul\":23731:23749   */\n      add\n        /* \"#utility.yul\":23718:23749   */\n      swap5\n      pop\n        /* \"#utility.yul\":23592:23596   */\n      0x20\n        /* \"#utility.yul\":23589:23590   */\n      dup2\n        /* \"#utility.yul\":23585:23597   */\n      add\n        /* \"#utility.yul\":23580:23597   */\n      swap1\n      pop\n        /* \"#utility.yul\":23555:23763   */\n      jump(tag_657)\n    tag_659:\n        /* \"#utility.yul\":23791:23797   */\n      dup7\n        /* \"#utility.yul\":23782:23789   */\n      dup4\n        /* \"#utility.yul\":23779:23798   */\n      lt\n        /* \"#utility.yul\":23776:23955   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":23849:23858   */\n      dup5\n        /* \"#utility.yul\":23844:23847   */\n      dup10\n        /* \"#utility.yul\":23840:23859   */\n      add\n        /* \"#utility.yul\":23834:23860   */\n      mload\n        /* \"#utility.yul\":23892:23940   */\n      tag_661\n        /* \"#utility.yul\":23934:23938   */\n      0x1f\n        /* \"#utility.yul\":23926:23932   */\n      dup10\n        /* \"#utility.yul\":23922:23939   */\n      and\n        /* \"#utility.yul\":23911:23920   */\n      dup3\n        /* \"#utility.yul\":23892:23940   */\n      tag_394\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":23884:23890   */\n      dup4\n        /* \"#utility.yul\":23877:23941   */\n      sstore\n        /* \"#utility.yul\":23799:23955   */\n      pop\n        /* \"#utility.yul\":23776:23955   */\n    tag_660:\n        /* \"#utility.yul\":24001:24002   */\n      0x01\n        /* \"#utility.yul\":23997:23998   */\n      0x02\n        /* \"#utility.yul\":23989:23995   */\n      dup9\n        /* \"#utility.yul\":23985:23999   */\n      mul\n        /* \"#utility.yul\":23981:24003   */\n      add\n        /* \"#utility.yul\":23975:23979   */\n      dup9\n        /* \"#utility.yul\":23968:24004   */\n      sstore\n        /* \"#utility.yul\":23403:24014   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23366:24253   */\n    tag_652:\n      pop\n        /* \"#utility.yul\":22956:24259   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22864:24259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24265:24363   */\n    tag_396:\n        /* \"#utility.yul\":24316:24322   */\n      0x00\n        /* \"#utility.yul\":24350:24355   */\n      dup2\n        /* \"#utility.yul\":24344:24356   */\n      mload\n        /* \"#utility.yul\":24334:24356   */\n      swap1\n      pop\n        /* \"#utility.yul\":24265:24363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24369:24537   */\n    tag_397:\n        /* \"#utility.yul\":24452:24463   */\n      0x00\n        /* \"#utility.yul\":24486:24492   */\n      dup3\n        /* \"#utility.yul\":24481:24484   */\n      dup3\n        /* \"#utility.yul\":24474:24493   */\n      mstore\n        /* \"#utility.yul\":24526:24530   */\n      0x20\n        /* \"#utility.yul\":24521:24524   */\n      dup3\n        /* \"#utility.yul\":24517:24531   */\n      add\n        /* \"#utility.yul\":24502:24531   */\n      swap1\n      pop\n        /* \"#utility.yul\":24369:24537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24543:24916   */\n    tag_398:\n        /* \"#utility.yul\":24629:24632   */\n      0x00\n        /* \"#utility.yul\":24657:24695   */\n      tag_665\n        /* \"#utility.yul\":24689:24694   */\n      dup3\n        /* \"#utility.yul\":24657:24695   */\n      tag_396\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":24711:24781   */\n      tag_666\n        /* \"#utility.yul\":24774:24780   */\n      dup2\n        /* \"#utility.yul\":24769:24772   */\n      dup6\n        /* \"#utility.yul\":24711:24781   */\n      tag_397\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":24704:24781   */\n      swap4\n      pop\n        /* \"#utility.yul\":24790:24855   */\n      tag_667\n        /* \"#utility.yul\":24848:24854   */\n      dup2\n        /* \"#utility.yul\":24843:24846   */\n      dup6\n        /* \"#utility.yul\":24836:24840   */\n      0x20\n        /* \"#utility.yul\":24829:24834   */\n      dup7\n        /* \"#utility.yul\":24825:24841   */\n      add\n        /* \"#utility.yul\":24790:24855   */\n      tag_342\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":24880:24909   */\n      tag_668\n        /* \"#utility.yul\":24902:24908   */\n      dup2\n        /* \"#utility.yul\":24880:24909   */\n      tag_343\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":24875:24878   */\n      dup5\n        /* \"#utility.yul\":24871:24910   */\n      add\n        /* \"#utility.yul\":24864:24910   */\n      swap2\n      pop\n        /* \"#utility.yul\":24633:24916   */\n      pop\n        /* \"#utility.yul\":24543:24916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24922:25562   */\n    tag_247:\n        /* \"#utility.yul\":25117:25121   */\n      0x00\n        /* \"#utility.yul\":25155:25158   */\n      0x80\n        /* \"#utility.yul\":25144:25153   */\n      dup3\n        /* \"#utility.yul\":25140:25159   */\n      add\n        /* \"#utility.yul\":25132:25159   */\n      swap1\n      pop\n        /* \"#utility.yul\":25169:25240   */\n      tag_670\n        /* \"#utility.yul\":25237:25238   */\n      0x00\n        /* \"#utility.yul\":25226:25235   */\n      dup4\n        /* \"#utility.yul\":25222:25239   */\n      add\n        /* \"#utility.yul\":25213:25219   */\n      dup8\n        /* \"#utility.yul\":25169:25240   */\n      tag_350\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":25250:25322   */\n      tag_671\n        /* \"#utility.yul\":25318:25320   */\n      0x20\n        /* \"#utility.yul\":25307:25316   */\n      dup4\n        /* \"#utility.yul\":25303:25321   */\n      add\n        /* \"#utility.yul\":25294:25300   */\n      dup7\n        /* \"#utility.yul\":25250:25322   */\n      tag_350\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":25332:25404   */\n      tag_672\n        /* \"#utility.yul\":25400:25402   */\n      0x40\n        /* \"#utility.yul\":25389:25398   */\n      dup4\n        /* \"#utility.yul\":25385:25403   */\n      add\n        /* \"#utility.yul\":25376:25382   */\n      dup6\n        /* \"#utility.yul\":25332:25404   */\n      tag_361\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":25451:25460   */\n      dup2\n        /* \"#utility.yul\":25445:25449   */\n      dup2\n        /* \"#utility.yul\":25441:25461   */\n      sub\n        /* \"#utility.yul\":25436:25438   */\n      0x60\n        /* \"#utility.yul\":25425:25434   */\n      dup4\n        /* \"#utility.yul\":25421:25439   */\n      add\n        /* \"#utility.yul\":25414:25462   */\n      mstore\n        /* \"#utility.yul\":25479:25555   */\n      tag_673\n        /* \"#utility.yul\":25550:25554   */\n      dup2\n        /* \"#utility.yul\":25541:25547   */\n      dup5\n        /* \"#utility.yul\":25479:25555   */\n      tag_398\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":25471:25555   */\n      swap1\n      pop\n        /* \"#utility.yul\":24922:25562   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25568:25709   */\n    tag_399:\n        /* \"#utility.yul\":25624:25629   */\n      0x00\n        /* \"#utility.yul\":25655:25661   */\n      dup2\n        /* \"#utility.yul\":25649:25662   */\n      mload\n        /* \"#utility.yul\":25640:25662   */\n      swap1\n      pop\n        /* \"#utility.yul\":25671:25703   */\n      tag_675\n        /* \"#utility.yul\":25697:25702   */\n      dup2\n        /* \"#utility.yul\":25671:25703   */\n      tag_336\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":25568:25709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25715:26064   */\n    tag_250:\n        /* \"#utility.yul\":25784:25790   */\n      0x00\n        /* \"#utility.yul\":25833:25835   */\n      0x20\n        /* \"#utility.yul\":25821:25830   */\n      dup3\n        /* \"#utility.yul\":25812:25819   */\n      dup5\n        /* \"#utility.yul\":25808:25831   */\n      sub\n        /* \"#utility.yul\":25804:25836   */\n      slt\n        /* \"#utility.yul\":25801:25920   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":25839:25918   */\n      tag_678\n      tag_333\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":25801:25920   */\n    tag_677:\n        /* \"#utility.yul\":25959:25960   */\n      0x00\n        /* \"#utility.yul\":25984:26047   */\n      tag_679\n        /* \"#utility.yul\":26039:26046   */\n      dup5\n        /* \"#utility.yul\":26030:26036   */\n      dup3\n        /* \"#utility.yul\":26019:26028   */\n      dup6\n        /* \"#utility.yul\":26015:26037   */\n      add\n        /* \"#utility.yul\":25984:26047   */\n      tag_399\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":25974:26047   */\n      swap2\n      pop\n        /* \"#utility.yul\":25930:26057   */\n      pop\n        /* \"#utility.yul\":25715:26064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26070:26402   */\n    tag_292:\n        /* \"#utility.yul\":26191:26195   */\n      0x00\n        /* \"#utility.yul\":26229:26231   */\n      0x40\n        /* \"#utility.yul\":26218:26227   */\n      dup3\n        /* \"#utility.yul\":26214:26232   */\n      add\n        /* \"#utility.yul\":26206:26232   */\n      swap1\n      pop\n        /* \"#utility.yul\":26242:26313   */\n      tag_681\n        /* \"#utility.yul\":26310:26311   */\n      0x00\n        /* \"#utility.yul\":26299:26308   */\n      dup4\n        /* \"#utility.yul\":26295:26312   */\n      add\n        /* \"#utility.yul\":26286:26292   */\n      dup6\n        /* \"#utility.yul\":26242:26313   */\n      tag_350\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":26323:26395   */\n      tag_682\n        /* \"#utility.yul\":26391:26393   */\n      0x20\n        /* \"#utility.yul\":26380:26389   */\n      dup4\n        /* \"#utility.yul\":26376:26394   */\n      add\n        /* \"#utility.yul\":26367:26373   */\n      dup5\n        /* \"#utility.yul\":26323:26395   */\n      tag_361\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":26070:26402   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26408:26588   */\n    tag_304:\n        /* \"#utility.yul\":26456:26533   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26453:26454   */\n      0x00\n        /* \"#utility.yul\":26446:26534   */\n      mstore\n        /* \"#utility.yul\":26553:26557   */\n      0x12\n        /* \"#utility.yul\":26550:26551   */\n      0x04\n        /* \"#utility.yul\":26543:26558   */\n      mstore\n        /* \"#utility.yul\":26577:26581   */\n      0x24\n        /* \"#utility.yul\":26574:26575   */\n      0x00\n        /* \"#utility.yul\":26567:26582   */\n      revert\n\n    auxdata: 0xa26469706673582212205416000879852e3e00367ab6a1ac1788db4dd36dcff4692d25d1ae06ed34614164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3308": {
									"entryPoint": null,
									"id": 3308,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_464": {
									"entryPoint": null,
									"id": 464,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:19",
										"nodeType": "YulBlock",
										"src": "0:6426:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "759:80:19",
													"nodeType": "YulBlock",
													"src": "759:80:19",
													"statements": [
														{
															"nativeSrc": "769:22:19",
															"nodeType": "YulAssignment",
															"src": "769:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:19"
																},
																"nativeSrc": "778:13:19",
																"nodeType": "YulFunctionCall",
																"src": "778:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:19"
																},
																"nativeSrc": "800:33:19",
																"nodeType": "YulFunctionCall",
																"src": "800:33:19"
															},
															"nativeSrc": "800:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:19",
														"nodeType": "YulTypedName",
														"src": "737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:19",
														"nodeType": "YulTypedName",
														"src": "745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:19",
														"nodeType": "YulTypedName",
														"src": "753:5:19",
														"type": ""
													}
												],
												"src": "696:143:19"
											},
											{
												"body": {
													"nativeSrc": "922:274:19",
													"nodeType": "YulBlock",
													"src": "922:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:19",
																"nodeType": "YulBlock",
																"src": "968:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:19"
																			},
																			"nativeSrc": "970:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:19"
																		},
																		"nativeSrc": "970:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:19"
																		},
																		"nativeSrc": "939:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:19",
																		"nodeType": "YulLiteral",
																		"src": "964:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:19"
																},
																"nativeSrc": "935:32:19",
																"nodeType": "YulFunctionCall",
																"src": "935:32:19"
															},
															"nativeSrc": "932:119:19",
															"nodeType": "YulIf",
															"src": "932:119:19"
														},
														{
															"nativeSrc": "1061:128:19",
															"nodeType": "YulBlock",
															"src": "1061:128:19",
															"statements": [
																{
																	"nativeSrc": "1076:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:19"
																				},
																				"nativeSrc": "1147:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:19"
																		},
																		"nativeSrc": "1115:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:19",
														"nodeType": "YulTypedName",
														"src": "892:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:19",
														"nodeType": "YulTypedName",
														"src": "903:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:19",
														"nodeType": "YulTypedName",
														"src": "915:6:19",
														"type": ""
													}
												],
												"src": "845:351:19"
											},
											{
												"body": {
													"nativeSrc": "1261:40:19",
													"nodeType": "YulBlock",
													"src": "1261:40:19",
													"statements": [
														{
															"nativeSrc": "1272:22:19",
															"nodeType": "YulAssignment",
															"src": "1272:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:19"
																},
																"nativeSrc": "1282:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:19",
														"nodeType": "YulTypedName",
														"src": "1244:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:19",
														"nodeType": "YulTypedName",
														"src": "1254:6:19",
														"type": ""
													}
												],
												"src": "1202:99:19"
											},
											{
												"body": {
													"nativeSrc": "1335:152:19",
													"nodeType": "YulBlock",
													"src": "1335:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:19"
																},
																"nativeSrc": "1345:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:19"
															},
															"nativeSrc": "1345:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:19"
																},
																"nativeSrc": "1442:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:19"
															},
															"nativeSrc": "1442:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:19"
																},
																"nativeSrc": "1466:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:19"
															},
															"nativeSrc": "1466:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:19"
											},
											{
												"body": {
													"nativeSrc": "1521:152:19",
													"nodeType": "YulBlock",
													"src": "1521:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:19"
																},
																"nativeSrc": "1531:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:19"
															},
															"nativeSrc": "1531:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:19"
																},
																"nativeSrc": "1628:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:19"
															},
															"nativeSrc": "1628:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:19"
																},
																"nativeSrc": "1652:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:19"
															},
															"nativeSrc": "1652:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:19"
											},
											{
												"body": {
													"nativeSrc": "1730:269:19",
													"nodeType": "YulBlock",
													"src": "1730:269:19",
													"statements": [
														{
															"nativeSrc": "1740:22:19",
															"nodeType": "YulAssignment",
															"src": "1740:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:19"
																},
																"nativeSrc": "1750:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:19"
																}
															]
														},
														{
															"nativeSrc": "1771:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:19"
																},
																"nativeSrc": "1797:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:19",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:19",
																"nodeType": "YulBlock",
																"src": "1848:51:19",
																"statements": [
																	{
																		"nativeSrc": "1862:27:19",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:19",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:19"
																			},
																			"nativeSrc": "1872:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:19"
																},
																"nativeSrc": "1821:26:19",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:19"
															},
															"nativeSrc": "1818:81:19",
															"nodeType": "YulIf",
															"src": "1818:81:19"
														},
														{
															"body": {
																"nativeSrc": "1951:42:19",
																"nodeType": "YulBlock",
																"src": "1951:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:19"
																			},
																			"nativeSrc": "1965:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:19"
																		},
																		"nativeSrc": "1965:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:19"
																		},
																		"nativeSrc": "1935:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:19"
																},
																"nativeSrc": "1912:38:19",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:19"
															},
															"nativeSrc": "1909:84:19",
															"nodeType": "YulIf",
															"src": "1909:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:19",
														"nodeType": "YulTypedName",
														"src": "1714:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:19",
														"nodeType": "YulTypedName",
														"src": "1723:6:19",
														"type": ""
													}
												],
												"src": "1679:320:19"
											},
											{
												"body": {
													"nativeSrc": "2059:87:19",
													"nodeType": "YulBlock",
													"src": "2059:87:19",
													"statements": [
														{
															"nativeSrc": "2069:11:19",
															"nodeType": "YulAssignment",
															"src": "2069:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:19",
																"nodeType": "YulIdentifier",
																"src": "2077:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:19"
																},
																"nativeSrc": "2090:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:19"
															},
															"nativeSrc": "2090:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:19"
														},
														{
															"nativeSrc": "2113:26:19",
															"nodeType": "YulAssignment",
															"src": "2113:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:19",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:19"
																},
																"nativeSrc": "2121:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:19",
														"nodeType": "YulTypedName",
														"src": "2046:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:19",
														"nodeType": "YulTypedName",
														"src": "2054:4:19",
														"type": ""
													}
												],
												"src": "2005:141:19"
											},
											{
												"body": {
													"nativeSrc": "2196:49:19",
													"nodeType": "YulBlock",
													"src": "2196:49:19",
													"statements": [
														{
															"nativeSrc": "2206:33:19",
															"nodeType": "YulAssignment",
															"src": "2206:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:19"
																		},
																		"nativeSrc": "2220:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:19"
																},
																"nativeSrc": "2216:23:19",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:19",
														"nodeType": "YulTypedName",
														"src": "2179:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:19",
														"nodeType": "YulTypedName",
														"src": "2189:6:19",
														"type": ""
													}
												],
												"src": "2152:93:19"
											},
											{
												"body": {
													"nativeSrc": "2304:54:19",
													"nodeType": "YulBlock",
													"src": "2304:54:19",
													"statements": [
														{
															"nativeSrc": "2314:37:19",
															"nodeType": "YulAssignment",
															"src": "2314:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:19"
																},
																"nativeSrc": "2335:16:19",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:19",
														"nodeType": "YulTypedName",
														"src": "2279:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:19",
														"nodeType": "YulTypedName",
														"src": "2285:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:19",
														"nodeType": "YulTypedName",
														"src": "2295:8:19",
														"type": ""
													}
												],
												"src": "2251:107:19"
											},
											{
												"body": {
													"nativeSrc": "2440:317:19",
													"nodeType": "YulBlock",
													"src": "2440:317:19",
													"statements": [
														{
															"nativeSrc": "2450:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:19"
																},
																"nativeSrc": "2467:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:19",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:19",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:19"
																},
																"nativeSrc": "2506:97:19",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:19",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:19",
															"nodeType": "YulAssignment",
															"src": "2612:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:19"
																},
																"nativeSrc": "2624:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:19"
																}
															]
														},
														{
															"nativeSrc": "2672:30:19",
															"nodeType": "YulAssignment",
															"src": "2672:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:19"
																		},
																		"nativeSrc": "2692:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:19"
																},
																"nativeSrc": "2681:21:19",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:19"
																}
															]
														},
														{
															"nativeSrc": "2711:40:19",
															"nodeType": "YulAssignment",
															"src": "2711:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:19"
																		},
																		"nativeSrc": "2731:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:19"
																},
																"nativeSrc": "2721:30:19",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:19",
														"nodeType": "YulTypedName",
														"src": "2401:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:19",
														"nodeType": "YulTypedName",
														"src": "2408:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:19",
														"nodeType": "YulTypedName",
														"src": "2420:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:19",
														"nodeType": "YulTypedName",
														"src": "2433:6:19",
														"type": ""
													}
												],
												"src": "2364:393:19"
											},
											{
												"body": {
													"nativeSrc": "2808:32:19",
													"nodeType": "YulBlock",
													"src": "2808:32:19",
													"statements": [
														{
															"nativeSrc": "2818:16:19",
															"nodeType": "YulAssignment",
															"src": "2818:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:19",
																"nodeType": "YulIdentifier",
																"src": "2829:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:19",
														"nodeType": "YulTypedName",
														"src": "2790:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:19",
														"nodeType": "YulTypedName",
														"src": "2800:7:19",
														"type": ""
													}
												],
												"src": "2763:77:19"
											},
											{
												"body": {
													"nativeSrc": "2878:28:19",
													"nodeType": "YulBlock",
													"src": "2878:28:19",
													"statements": [
														{
															"nativeSrc": "2888:12:19",
															"nodeType": "YulAssignment",
															"src": "2888:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:19",
																"nodeType": "YulIdentifier",
																"src": "2895:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:19",
														"nodeType": "YulTypedName",
														"src": "2864:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:19",
														"nodeType": "YulTypedName",
														"src": "2874:3:19",
														"type": ""
													}
												],
												"src": "2846:60:19"
											},
											{
												"body": {
													"nativeSrc": "2972:82:19",
													"nodeType": "YulBlock",
													"src": "2972:82:19",
													"statements": [
														{
															"nativeSrc": "2982:66:19",
															"nodeType": "YulAssignment",
															"src": "2982:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:19"
																				},
																				"nativeSrc": "3022:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:19"
																		},
																		"nativeSrc": "3013:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:19"
																},
																"nativeSrc": "2995:53:19",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:19",
														"nodeType": "YulTypedName",
														"src": "2952:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:19",
														"nodeType": "YulTypedName",
														"src": "2962:9:19",
														"type": ""
													}
												],
												"src": "2912:142:19"
											},
											{
												"body": {
													"nativeSrc": "3107:28:19",
													"nodeType": "YulBlock",
													"src": "3107:28:19",
													"statements": [
														{
															"nativeSrc": "3117:12:19",
															"nodeType": "YulAssignment",
															"src": "3117:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:19",
																"nodeType": "YulIdentifier",
																"src": "3124:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:19",
														"nodeType": "YulTypedName",
														"src": "3093:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:19",
														"nodeType": "YulTypedName",
														"src": "3103:3:19",
														"type": ""
													}
												],
												"src": "3060:75:19"
											},
											{
												"body": {
													"nativeSrc": "3217:193:19",
													"nodeType": "YulBlock",
													"src": "3217:193:19",
													"statements": [
														{
															"nativeSrc": "3227:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:19"
																},
																"nativeSrc": "3251:39:19",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:19",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:19"
																				},
																				"nativeSrc": "3340:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:19"
																				},
																				"nativeSrc": "3361:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:19"
																		},
																		"nativeSrc": "3312:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:19"
																},
																"nativeSrc": "3299:105:19",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:19"
															},
															"nativeSrc": "3299:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:19",
														"nodeType": "YulTypedName",
														"src": "3194:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:19",
														"nodeType": "YulTypedName",
														"src": "3200:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:19",
														"nodeType": "YulTypedName",
														"src": "3208:7:19",
														"type": ""
													}
												],
												"src": "3141:269:19"
											},
											{
												"body": {
													"nativeSrc": "3465:24:19",
													"nodeType": "YulBlock",
													"src": "3465:24:19",
													"statements": [
														{
															"nativeSrc": "3475:8:19",
															"nodeType": "YulAssignment",
															"src": "3475:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:19",
																"nodeType": "YulLiteral",
																"src": "3482:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:19",
														"nodeType": "YulTypedName",
														"src": "3461:3:19",
														"type": ""
													}
												],
												"src": "3416:73:19"
											},
											{
												"body": {
													"nativeSrc": "3548:136:19",
													"nodeType": "YulBlock",
													"src": "3548:136:19",
													"statements": [
														{
															"nativeSrc": "3558:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:19"
																},
																"nativeSrc": "3572:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:19"
																},
																"nativeSrc": "3613:65:19",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:19"
															},
															"nativeSrc": "3613:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:19",
														"nodeType": "YulTypedName",
														"src": "3534:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:19",
														"nodeType": "YulTypedName",
														"src": "3540:6:19",
														"type": ""
													}
												],
												"src": "3495:189:19"
											},
											{
												"body": {
													"nativeSrc": "3740:136:19",
													"nodeType": "YulBlock",
													"src": "3740:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:19",
																"nodeType": "YulBlock",
																"src": "3807:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:19"
																			},
																			"nativeSrc": "3821:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:19"
																		},
																		"nativeSrc": "3821:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:19"
																},
																"nativeSrc": "3757:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:19"
															},
															"nativeSrc": "3750:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:19",
																"nodeType": "YulBlock",
																"src": "3772:26:19",
																"statements": [
																	{
																		"nativeSrc": "3774:22:19",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:19"
																			},
																			"nativeSrc": "3783:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:19",
																"nodeType": "YulBlock",
																"src": "3754:2:19",
																"statements": []
															},
															"src": "3750:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:19",
														"nodeType": "YulTypedName",
														"src": "3728:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:19",
														"nodeType": "YulTypedName",
														"src": "3735:3:19",
														"type": ""
													}
												],
												"src": "3690:186:19"
											},
											{
												"body": {
													"nativeSrc": "3961:464:19",
													"nodeType": "YulBlock",
													"src": "3961:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:19",
																"nodeType": "YulBlock",
																"src": "3987:431:19",
																"statements": [
																	{
																		"nativeSrc": "4001:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:19"
																			},
																			"nativeSrc": "4017:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:19",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:19"
																					},
																					"nativeSrc": "4101:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:19"
																			},
																			"nativeSrc": "4087:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:19",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:19",
																			"nodeType": "YulBlock",
																			"src": "4288:27:19",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:19",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:19",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:19"
																			},
																			"nativeSrc": "4269:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:19"
																		},
																		"nativeSrc": "4266:49:19",
																		"nodeType": "YulIf",
																		"src": "4266:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:19"
																							},
																							"nativeSrc": "4384:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:19"
																					},
																					"nativeSrc": "4370:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:19"
																			},
																			"nativeSrc": "4328:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:19"
																		},
																		"nativeSrc": "4328:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:19"
																},
																"nativeSrc": "3975:11:19",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:19"
															},
															"nativeSrc": "3972:446:19",
															"nodeType": "YulIf",
															"src": "3972:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:19",
														"nodeType": "YulTypedName",
														"src": "3937:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:19",
														"nodeType": "YulTypedName",
														"src": "3944:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:19",
														"nodeType": "YulTypedName",
														"src": "3949:10:19",
														"type": ""
													}
												],
												"src": "3882:543:19"
											},
											{
												"body": {
													"nativeSrc": "4494:54:19",
													"nodeType": "YulBlock",
													"src": "4494:54:19",
													"statements": [
														{
															"nativeSrc": "4504:37:19",
															"nodeType": "YulAssignment",
															"src": "4504:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:19"
																},
																"nativeSrc": "4525:16:19",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:19",
														"nodeType": "YulTypedName",
														"src": "4469:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:19",
														"nodeType": "YulTypedName",
														"src": "4475:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:19",
														"nodeType": "YulTypedName",
														"src": "4485:8:19",
														"type": ""
													}
												],
												"src": "4431:117:19"
											},
											{
												"body": {
													"nativeSrc": "4605:118:19",
													"nodeType": "YulBlock",
													"src": "4605:118:19",
													"statements": [
														{
															"nativeSrc": "4615:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:19"
																				},
																				"nativeSrc": "4660:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:19"
																				},
																				"nativeSrc": "4675:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:19"
																		},
																		"nativeSrc": "4631:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:19"
																},
																"nativeSrc": "4627:56:19",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:19",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:19",
															"nodeType": "YulAssignment",
															"src": "4692:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:19"
																},
																"nativeSrc": "4702:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:19",
														"nodeType": "YulTypedName",
														"src": "4582:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:19",
														"nodeType": "YulTypedName",
														"src": "4588:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:19",
														"nodeType": "YulTypedName",
														"src": "4598:6:19",
														"type": ""
													}
												],
												"src": "4554:169:19"
											},
											{
												"body": {
													"nativeSrc": "4809:214:19",
													"nodeType": "YulBlock",
													"src": "4809:214:19",
													"statements": [
														{
															"nativeSrc": "4942:37:19",
															"nodeType": "YulAssignment",
															"src": "4942:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:19"
																},
																"nativeSrc": "4950:29:19",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:19"
																}
															]
														},
														{
															"nativeSrc": "4988:29:19",
															"nodeType": "YulAssignment",
															"src": "4988:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:19",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:19"
																		},
																		"nativeSrc": "5005:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:19"
																},
																"nativeSrc": "4996:21:19",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:19",
														"nodeType": "YulTypedName",
														"src": "4790:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:19",
														"nodeType": "YulTypedName",
														"src": "4796:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:19",
														"nodeType": "YulTypedName",
														"src": "4804:4:19",
														"type": ""
													}
												],
												"src": "4728:295:19"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:19",
													"nodeType": "YulBlock",
													"src": "5120:1303:19",
													"statements": [
														{
															"nativeSrc": "5131:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:19"
																},
																"nativeSrc": "5145:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:19",
																"nodeType": "YulBlock",
																"src": "5267:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:19"
																			},
																			"nativeSrc": "5269:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:19"
																		},
																		"nativeSrc": "5269:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:19",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:19"
																},
																"nativeSrc": "5236:30:19",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:19"
															},
															"nativeSrc": "5233:56:19",
															"nodeType": "YulIf",
															"src": "5233:56:19"
														},
														{
															"nativeSrc": "5299:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:19"
																		},
																		"nativeSrc": "5339:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:19"
																},
																"nativeSrc": "5313:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:19"
																},
																"nativeSrc": "5398:67:19",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:19"
															},
															"nativeSrc": "5398:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:19"
														},
														{
															"nativeSrc": "5475:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:19",
																"nodeType": "YulLiteral",
																"src": "5492:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:19",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:19",
															"nodeType": "YulAssignment",
															"src": "5503:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:19",
																"nodeType": "YulLiteral",
																"src": "5516:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:19",
																		"nodeType": "YulBlock",
																		"src": "5567:611:19",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:19",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:19"
																							},
																							"nativeSrc": "5608:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:19"
																					},
																					"nativeSrc": "5596:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:19",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:19"
																					},
																					"nativeSrc": "5646:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:19",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:19",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:19",
																					"nodeType": "YulBlock",
																					"src": "5764:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:19"
																												},
																												"nativeSrc": "5803:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:19"
																										},
																										"nativeSrc": "5797:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:19"
																								},
																								"nativeSrc": "5782:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:19"
																							},
																							"nativeSrc": "5782:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:19"
																						},
																						{
																							"nativeSrc": "5841:24:19",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:19",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:19"
																								},
																								"nativeSrc": "5851:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:19",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:19",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:19"
																								},
																								"nativeSrc": "5895:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:19"
																					},
																					"nativeSrc": "5727:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:19"
																				},
																				"nativeSrc": "5719:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:19",
																					"nodeType": "YulBlock",
																					"src": "5742:21:19",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:19",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:19",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:19"
																								},
																								"nativeSrc": "5749:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:19",
																					"nodeType": "YulBlock",
																					"src": "5723:3:19",
																					"statements": []
																				},
																				"src": "5719:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:19",
																					"nodeType": "YulBlock",
																					"src": "5963:156:19",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:19"
																										},
																										"nativeSrc": "6004:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:19"
																								},
																								"nativeSrc": "5998:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:19",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:19",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:19"
																												},
																												"nativeSrc": "6086:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:19"
																										},
																										"nativeSrc": "6056:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:19"
																								},
																								"nativeSrc": "6041:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:19"
																							},
																							"nativeSrc": "6041:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:19"
																					},
																					"nativeSrc": "5943:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:19"
																				},
																				"nativeSrc": "5940:179:19",
																				"nodeType": "YulIf",
																				"src": "5940:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:19",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:19"
																									},
																									"nativeSrc": "6149:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:19",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:19"
																							},
																							"nativeSrc": "6145:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:19"
																					},
																					"nativeSrc": "6132:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:19"
																				},
																				"nativeSrc": "6132:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:19"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:19",
																	"nodeType": "YulCase",
																	"src": "5560:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:19",
																		"nodeType": "YulBlock",
																		"src": "6195:222:19",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:19",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:19",
																					"nodeType": "YulBlock",
																					"src": "6246:67:19",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:19",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:19"
																										},
																										"nativeSrc": "6279:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:19"
																								},
																								"nativeSrc": "6273:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:19"
																				},
																				"nativeSrc": "6236:77:19",
																				"nodeType": "YulIf",
																				"src": "6236:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:19"
																							},
																							"nativeSrc": "6339:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:19"
																					},
																					"nativeSrc": "6326:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:19"
																				},
																				"nativeSrc": "6326:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:19"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:19",
																	"nodeType": "YulCase",
																	"src": "6187:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:19"
																},
																"nativeSrc": "5537:14:19",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:19"
															},
															"nativeSrc": "5530:887:19",
															"nodeType": "YulSwitch",
															"src": "5530:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:19",
														"nodeType": "YulTypedName",
														"src": "5109:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:19",
														"nodeType": "YulTypedName",
														"src": "5115:3:19",
														"type": ""
													}
												],
												"src": "5028:1395:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612eb5380380612eb583398181016040528101906100319190610162565b6040518060400160405280600d81526020017f4d69417274654469676974616c000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d41440000000000000000000000000000000000000000000000000000000000815250815f90816100ab91906103c7565b5080600190816100bb91906103c7565b5050508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610496565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61013182610108565b9050919050565b61014181610127565b811461014b575f80fd5b50565b5f8151905061015c81610138565b92915050565b5f6020828403121561017757610176610104565b5b5f6101848482850161014e565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061020857607f821691505b60208210810361021b5761021a6101c4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261027d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610242565b6102878683610242565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6102cb6102c66102c18461029f565b6102a8565b61029f565b9050919050565b5f819050919050565b6102e4836102b1565b6102f86102f0826102d2565b84845461024e565b825550505050565b5f90565b61030c610300565b6103178184846102db565b505050565b5b8181101561033a5761032f5f82610304565b60018101905061031d565b5050565b601f82111561037f5761035081610221565b61035984610233565b81016020851015610368578190505b61037c61037485610233565b83018261031c565b50505b505050565b5f82821c905092915050565b5f61039f5f1984600802610384565b1980831691505092915050565b5f6103b78383610390565b9150826002028217905092915050565b6103d08261018d565b67ffffffffffffffff8111156103e9576103e8610197565b5b6103f382546101f1565b6103fe82828561033e565b5f60209050601f83116001811461042f575f841561041d578287015190505b61042785826103ac565b86555061048e565b601f19841661043d86610221565b5f5b828110156104645784890151825560018201915060208501945060208101905061043f565b86831015610481578489015161047d601f891682610390565b8355505b6001600288020188555050505b505050505050565b612a12806104a35f395ff3fe6080604052600436106100f2575f3560e01c80636352211e11610089578063a22cb46511610058578063a22cb46514610312578063b88d4fde1461033a578063c87b56dd14610362578063e985e9c51461039e576100f2565b80636352211e1461025457806370a082311461029057806395d89b41146102cc5780639da1b02a146102f6576100f2565b806323b872dd116100c557806323b872dd146101c05780632cb2f52e146101e8578063361c19951461021057806342842e0e1461022c576100f2565b806301ffc9a7146100f657806306fdde0314610132578063081812fc1461015c578063095ea7b314610198575b5f80fd5b348015610101575f80fd5b5061011c60048036038101906101179190611cb3565b6103da565b6040516101299190611cf8565b60405180910390f35b34801561013d575f80fd5b5061014661043a565b6040516101539190611d81565b60405180910390f35b348015610167575f80fd5b50610182600480360381019061017d9190611dd4565b6104c9565b60405161018f9190611e3e565b60405180910390f35b3480156101a3575f80fd5b506101be60048036038101906101b99190611e81565b6104e4565b005b3480156101cb575f80fd5b506101e660048036038101906101e19190611ebf565b6104fa565b005b3480156101f3575f80fd5b5061020e6004803603810190610209919061203b565b6105f9565b005b61022a60048036038101906102259190612095565b610607565b005b348015610237575f80fd5b50610252600480360381019061024d9190611ebf565b610781565b005b34801561025f575f80fd5b5061027a60048036038101906102759190611dd4565b6107a0565b6040516102879190611e3e565b60405180910390f35b34801561029b575f80fd5b506102b660048036038101906102b191906120d3565b6107b1565b6040516102c3919061210d565b60405180910390f35b3480156102d7575f80fd5b506102e0610867565b6040516102ed9190611d81565b60405180910390f35b610310600480360381019061030b9190611dd4565b6108f7565b005b34801561031d575f80fd5b5061033860048036038101906103339190612150565b610b45565b005b348015610345575f80fd5b50610360600480360381019061035b919061222c565b610b5b565b005b34801561036d575f80fd5b5061038860048036038101906103839190611dd4565b610b78565b6040516103959190611d81565b60405180910390f35b3480156103a9575f80fd5b506103c460048036038101906103bf91906122ac565b610c83565b6040516103d19190611cf8565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610433575061043282610d11565b5b9050919050565b60605f805461044890612317565b80601f016020809104026020016040519081016040528092919081815260200182805461047490612317565b80156104bf5780601f10610496576101008083540402835291602001916104bf565b820191905f5260205f20905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b5f6104d382610df2565b506104dd82610e78565b9050919050565b6104f682826104f1610eb1565b610eb8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361056a575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105619190611e3e565b60405180910390fd5b5f61057d8383610578610eb1565b610eca565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105f3578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105ea93929190612347565b60405180910390fd5b50505050565b61060382826110d5565b5050565b5f8111610649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610640906123c6565b60405180910390fd5b610653600761112f565b5f61065e6007611143565b90506040518060a001604052808281526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f151581525060095f8381526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555090505061073f33308561114f565b82817ff050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c33855f604051610774939291906123e4565b60405180910390a3505050565b61079b83838360405180602001604052805f815250610b5b565b505050565b5f6107aa82610df2565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610822575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108199190611e3e565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461087690612317565b80601f01602080910402602001604051908101604052809291908181526020018280546108a290612317565b80156108ed5780601f106108c4576101008083540402835291602001916108ed565b820191905f5260205f20905b8154815290600101906020018083116108d057829003601f168201915b5050505050905090565b5f60095f8381526020019081526020015f206003015490505f60095f8481526020019081526020015f2060010154905060095f8481526020019081526020015f206004015f9054906101000a900460ff1615610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90612463565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3360095f8781526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401610a19939291906124dc565b6020604051808303815f875af1158015610a35573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a599190612525565b610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f9061259a565b60405180910390fd5b600160095f8581526020019081526020015f206004015f6101000a81548160ff021916908315150217905550610acf30338361114f565b80837ff050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c60095f8781526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856001604051610b38939291906125b8565b60405180910390a3505050565b610b57610b50610eb1565b83836112b7565b5050565b610b668484846104fa565b610b7284848484611420565b50505050565b6060610b8382610df2565b505f60065f8481526020019081526020015f208054610ba190612317565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90612317565b8015610c185780601f10610bef57610100808354040283529160200191610c18565b820191905f5260205f20905b815481529060010190602001808311610bfb57829003601f168201915b505050505090505f610c286115d2565b90505f815103610c3c578192505050610c7e565b5f82511115610c70578082604051602001610c58929190612627565b60405160208183030381529060405292505050610c7e565b610c79846115e8565b925050505b919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ddb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610deb5750610dea8261164e565b5b9050919050565b5f80610dfd836116b7565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e6f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e66919061210d565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ec583838360016116f0565b505050565b5f80610ed5846116b7565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f1657610f158184866118af565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fa157610f555f855f806116f0565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461102057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b8060065f8481526020019081526020015f2090816110f391906127de565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051611123919061210d565b60405180910390a15050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111bf575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111b69190611e3e565b60405180910390fd5b5f6111cb83835f610eca565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361123d57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611234919061210d565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112b1578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016112a893929190612347565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361132757816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161131e9190611e3e565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114139190611cf8565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156115cc578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611463610eb1565b8685856040518563ffffffff1660e01b815260040161148594939291906128ff565b6020604051808303815f875af19250505080156114c057506040513d601f19601f820116820180604052508101906114bd919061295d565b60015b611541573d805f81146114ee576040519150601f19603f3d011682016040523d82523d5f602084013e6114f3565b606091505b505f81510361153957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115309190611e3e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115ca57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115c19190611e3e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606115f382610df2565b505f6115fd6115d2565b90505f81511161161b5760405180602001604052805f815250611646565b8061162584611972565b604051602001611636929190612627565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061172857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561185a575f61173784610df2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117a157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117b457506117b28184610c83565b155b156117f657826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117ed9190611e3e565b60405180910390fd5b811561185857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118ba838383611a3c565b61196d575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361192e57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611925919061210d565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611964929190612988565b60405180910390fd5b505050565b60605f600161198084611afc565b0190505f8167ffffffffffffffff81111561199e5761199d611f17565b5b6040519080825280601f01601f1916602001820160405280156119d05781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a31578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a2657611a256129af565b5b0494505f85036119dd575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611af357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ab45750611ab38484610c83565b5b80611af257508273ffffffffffffffffffffffffffffffffffffffff16611ada83610e78565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b58577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b4e57611b4d6129af565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b95576d04ee2d6d415b85acef81000000008381611b8b57611b8a6129af565b5b0492506020810190505b662386f26fc100008310611bc457662386f26fc100008381611bba57611bb96129af565b5b0492506010810190505b6305f5e1008310611bed576305f5e1008381611be357611be26129af565b5b0492506008810190505b6127108310611c12576127108381611c0857611c076129af565b5b0492506004810190505b60648310611c355760648381611c2b57611c2a6129af565b5b0492506002810190505b600a8310611c44576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c9281611c5e565b8114611c9c575f80fd5b50565b5f81359050611cad81611c89565b92915050565b5f60208284031215611cc857611cc7611c56565b5b5f611cd584828501611c9f565b91505092915050565b5f8115159050919050565b611cf281611cde565b82525050565b5f602082019050611d0b5f830184611ce9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d5382611d11565b611d5d8185611d1b565b9350611d6d818560208601611d2b565b611d7681611d39565b840191505092915050565b5f6020820190508181035f830152611d998184611d49565b905092915050565b5f819050919050565b611db381611da1565b8114611dbd575f80fd5b50565b5f81359050611dce81611daa565b92915050565b5f60208284031215611de957611de8611c56565b5b5f611df684828501611dc0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e2882611dff565b9050919050565b611e3881611e1e565b82525050565b5f602082019050611e515f830184611e2f565b92915050565b611e6081611e1e565b8114611e6a575f80fd5b50565b5f81359050611e7b81611e57565b92915050565b5f8060408385031215611e9757611e96611c56565b5b5f611ea485828601611e6d565b9250506020611eb585828601611dc0565b9150509250929050565b5f805f60608486031215611ed657611ed5611c56565b5b5f611ee386828701611e6d565b9350506020611ef486828701611e6d565b9250506040611f0586828701611dc0565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f4d82611d39565b810181811067ffffffffffffffff82111715611f6c57611f6b611f17565b5b80604052505050565b5f611f7e611c4d565b9050611f8a8282611f44565b919050565b5f67ffffffffffffffff821115611fa957611fa8611f17565b5b611fb282611d39565b9050602081019050919050565b828183375f83830152505050565b5f611fdf611fda84611f8f565b611f75565b905082815260208101848484011115611ffb57611ffa611f13565b5b612006848285611fbf565b509392505050565b5f82601f83011261202257612021611f0f565b5b8135612032848260208601611fcd565b91505092915050565b5f806040838503121561205157612050611c56565b5b5f61205e85828601611dc0565b925050602083013567ffffffffffffffff81111561207f5761207e611c5a565b5b61208b8582860161200e565b9150509250929050565b5f80604083850312156120ab576120aa611c56565b5b5f6120b885828601611dc0565b92505060206120c985828601611dc0565b9150509250929050565b5f602082840312156120e8576120e7611c56565b5b5f6120f584828501611e6d565b91505092915050565b61210781611da1565b82525050565b5f6020820190506121205f8301846120fe565b92915050565b61212f81611cde565b8114612139575f80fd5b50565b5f8135905061214a81612126565b92915050565b5f806040838503121561216657612165611c56565b5b5f61217385828601611e6d565b92505060206121848582860161213c565b9150509250929050565b5f67ffffffffffffffff8211156121a8576121a7611f17565b5b6121b182611d39565b9050602081019050919050565b5f6121d06121cb8461218e565b611f75565b9050828152602081018484840111156121ec576121eb611f13565b5b6121f7848285611fbf565b509392505050565b5f82601f83011261221357612212611f0f565b5b81356122238482602086016121be565b91505092915050565b5f805f806080858703121561224457612243611c56565b5b5f61225187828801611e6d565b945050602061226287828801611e6d565b935050604061227387828801611dc0565b925050606085013567ffffffffffffffff81111561229457612293611c5a565b5b6122a0878288016121ff565b91505092959194509250565b5f80604083850312156122c2576122c1611c56565b5b5f6122cf85828601611e6d565b92505060206122e085828601611e6d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061232e57607f821691505b602082108103612341576123406122ea565b5b50919050565b5f60608201905061235a5f830186611e2f565b61236760208301856120fe565b6123746040830184611e2f565b949350505050565b7f5072696365206d757374206265206174206c65617374203120776569000000005f82015250565b5f6123b0601c83611d1b565b91506123bb8261237c565b602082019050919050565b5f6020820190508181035f8301526123dd816123a4565b9050919050565b5f6060820190506123f75f830186611e2f565b61240460208301856120fe565b6124116040830184611ce9565b949350505050565b7f546869732073616c6520697320616c72656164792066696e616c697a656400005f82015250565b5f61244d601e83611d1b565b915061245882612419565b602082019050919050565b5f6020820190508181035f83015261247a81612441565b9050919050565b5f819050919050565b5f6124a461249f61249a84611dff565b612481565b611dff565b9050919050565b5f6124b58261248a565b9050919050565b5f6124c6826124ab565b9050919050565b6124d6816124bc565b82525050565b5f6060820190506124ef5f830186611e2f565b6124fc60208301856124cd565b61250960408301846120fe565b949350505050565b5f8151905061251f81612126565b92915050565b5f6020828403121561253a57612539611c56565b5b5f61254784828501612511565b91505092915050565b7f4661696c656420746f207472616e73666572207061796d656e740000000000005f82015250565b5f612584601a83611d1b565b915061258f82612550565b602082019050919050565b5f6020820190508181035f8301526125b181612578565b9050919050565b5f6060820190506125cb5f8301866124cd565b6125d860208301856120fe565b6125e56040830184611ce9565b949350505050565b5f81905092915050565b5f61260182611d11565b61260b81856125ed565b935061261b818560208601611d2b565b80840191505092915050565b5f61263282856125f7565b915061263e82846125f7565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261266b565b6126b0868361266b565b95508019841693508086168417925050509392505050565b5f6126e26126dd6126d884611da1565b612481565b611da1565b9050919050565b5f819050919050565b6126fb836126c8565b61270f612707826126e9565b848454612677565b825550505050565b5f90565b612723612717565b61272e8184846126f2565b505050565b5b81811015612751576127465f8261271b565b600181019050612734565b5050565b601f821115612796576127678161264a565b6127708461265c565b8101602085101561277f578190505b61279361278b8561265c565b830182612733565b50505b505050565b5f82821c905092915050565b5f6127b65f198460080261279b565b1980831691505092915050565b5f6127ce83836127a7565b9150826002028217905092915050565b6127e782611d11565b67ffffffffffffffff811115612800576127ff611f17565b5b61280a8254612317565b612815828285612755565b5f60209050601f831160018114612846575f8415612834578287015190505b61283e85826127c3565b8655506128a5565b601f1984166128548661264a565b5f5b8281101561287b57848901518255600182019150602085019450602081019050612856565b868310156128985784890151612894601f8916826127a7565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128d1826128ad565b6128db81856128b7565b93506128eb818560208601611d2b565b6128f481611d39565b840191505092915050565b5f6080820190506129125f830187611e2f565b61291f6020830186611e2f565b61292c60408301856120fe565b818103606083015261293e81846128c7565b905095945050505050565b5f8151905061295781611c89565b92915050565b5f6020828403121561297257612971611c56565b5b5f61297f84828501612949565b91505092915050565b5f60408201905061299b5f830185611e2f565b6129a860208301846120fe565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212205416000879852e3e00367ab6a1ac1788db4dd36dcff4692d25d1ae06ed34614164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2EB5 CODESIZE SUB DUP1 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D69417274654469676974616C00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D41440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x496 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x131 DUP3 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x127 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0x104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184 DUP5 DUP3 DUP6 ADD PUSH2 0x14E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x208 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21B JUMPI PUSH2 0x21A PUSH2 0x1C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x27D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x287 DUP7 DUP4 PUSH2 0x242 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB PUSH2 0x2C6 PUSH2 0x2C1 DUP5 PUSH2 0x29F JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E4 DUP4 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x2F8 PUSH2 0x2F0 DUP3 PUSH2 0x2D2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x300 JUMP JUMPDEST PUSH2 0x317 DUP2 DUP5 DUP5 PUSH2 0x2DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH2 0x32F PUSH0 DUP3 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x31D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x37F JUMPI PUSH2 0x350 DUP2 PUSH2 0x221 JUMP JUMPDEST PUSH2 0x359 DUP5 PUSH2 0x233 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x368 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x37C PUSH2 0x374 DUP6 PUSH2 0x233 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x31C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x39F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x384 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3B7 DUP4 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D0 DUP3 PUSH2 0x18D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3E8 PUSH2 0x197 JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP3 SLOAD PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x3FE DUP3 DUP3 DUP6 PUSH2 0x33E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x42F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x41D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x427 DUP6 DUP3 PUSH2 0x3AC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x48E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x43D DUP7 PUSH2 0x221 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x464 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x481 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x47D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x390 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2A12 DUP1 PUSH2 0x4A3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39E JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x9DA1B02A EQ PUSH2 0x2F6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x2CB2F52E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x361C1995 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x433 JUMPI POP PUSH2 0x432 DUP3 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4D3 DUP3 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH2 0x4DD DUP3 PUSH2 0xE78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F6 DUP3 DUP3 PUSH2 0x4F1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x57D DUP4 DUP4 PUSH2 0x578 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F3 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x603 DUP3 DUP3 PUSH2 0x10D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x653 PUSH1 0x7 PUSH2 0x112F JUMP JUMPDEST PUSH0 PUSH2 0x65E PUSH1 0x7 PUSH2 0x1143 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x73F CALLER ADDRESS DUP6 PUSH2 0x114F JUMP JUMPDEST DUP3 DUP2 PUSH32 0xF050D1D203B1CFD01278E7A30D56F8A7D85CE6EC3A5F320E7FCB5F06E40E866C CALLER DUP6 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x774 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x79B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AA DUP3 PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x822 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x876 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x9 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xACF ADDRESS CALLER DUP4 PUSH2 0x114F JUMP JUMPDEST DUP1 DUP4 PUSH32 0xF050D1D203B1CFD01278E7A30D56F8A7D85CE6EC3A5F320E7FCB5F06E40E866C PUSH1 0x9 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB57 PUSH2 0xB50 PUSH2 0xEB1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB66 DUP5 DUP5 DUP5 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xB72 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1420 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB83 DUP3 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBA1 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBCD SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xC28 PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xC3C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xC7E JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xC70 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC58 SWAP3 SWAP2 SWAP1 PUSH2 0x2627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xC79 DUP5 PUSH2 0x15E8 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDDB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xDEB JUMPI POP PUSH2 0xDEA DUP3 PUSH2 0x164E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDFD DUP4 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEC5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xED5 DUP5 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF16 JUMPI PUSH2 0xF15 DUP2 DUP5 DUP7 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFA1 JUMPI PUSH2 0xF55 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1020 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x10F3 SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1123 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11CB DUP4 DUP4 PUSH0 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B1 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1413 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15CC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1463 PUSH2 0xEB1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1485 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14C0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BD SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1541 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1539 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1530 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15CA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15F3 DUP3 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH0 PUSH2 0x15FD PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1646 JUMP JUMPDEST DUP1 PUSH2 0x1625 DUP5 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1636 SWAP3 SWAP2 SWAP1 PUSH2 0x2627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1728 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x185A JUMPI PUSH0 PUSH2 0x1737 DUP5 PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17A1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17B4 JUMPI POP PUSH2 0x17B2 DUP2 DUP5 PUSH2 0xC83 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x17F6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17ED SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1858 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18BA DUP4 DUP4 DUP4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x196D JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1925 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1964 SWAP3 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1980 DUP5 PUSH2 0x1AFC JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199E JUMPI PUSH2 0x199D PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A31 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A26 JUMPI PUSH2 0x1A25 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x19DD JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1AF3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AB4 JUMPI POP PUSH2 0x1AB3 DUP5 DUP5 PUSH2 0xC83 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1AF2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ADA DUP4 PUSH2 0xE78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B58 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B4E JUMPI PUSH2 0x1B4D PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B95 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B8B JUMPI PUSH2 0x1B8A PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BC4 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1BED JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1BE3 JUMPI PUSH2 0x1BE2 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C12 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C35 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C2B JUMPI PUSH2 0x1C2A PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C44 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C92 DUP2 PUSH2 0x1C5E JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAD DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC7 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF2 DUP2 PUSH2 0x1CDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D53 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1D5D DUP2 DUP6 PUSH2 0x1D1B JUMP JUMPDEST SWAP4 POP PUSH2 0x1D6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D76 DUP2 PUSH2 0x1D39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D99 DUP2 DUP5 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB3 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DCE DUP2 PUSH2 0x1DAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF6 DUP5 DUP3 DUP6 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 DUP3 PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E38 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E60 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E6A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E7B DUP2 PUSH2 0x1E57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH2 0x1E96 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED6 JUMPI PUSH2 0x1ED5 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EF4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F05 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F4D DUP3 PUSH2 0x1D39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7E PUSH2 0x1C4D JUMP JUMPDEST SWAP1 POP PUSH2 0x1F8A DUP3 DUP3 PUSH2 0x1F44 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FA9 JUMPI PUSH2 0x1FA8 PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB2 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF PUSH2 0x1FDA DUP5 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x1F75 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x1F13 JUMP JUMPDEST JUMPDEST PUSH2 0x2006 DUP5 DUP3 DUP6 PUSH2 0x1FBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1F0F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2032 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2051 JUMPI PUSH2 0x2050 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205E DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1C5A JUMP JUMPDEST JUMPDEST PUSH2 0x208B DUP6 DUP3 DUP7 ADD PUSH2 0x200E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E8 JUMPI PUSH2 0x20E7 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F5 DUP5 DUP3 DUP6 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2107 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2120 PUSH0 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x212F DUP2 PUSH2 0x1CDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2139 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x214A DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2166 JUMPI PUSH2 0x2165 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2173 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2184 DUP6 DUP3 DUP7 ADD PUSH2 0x213C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH2 0x21B1 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D0 PUSH2 0x21CB DUP5 PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1F75 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21EC JUMPI PUSH2 0x21EB PUSH2 0x1F13 JUMP JUMPDEST JUMPDEST PUSH2 0x21F7 DUP5 DUP3 DUP6 PUSH2 0x1FBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2213 JUMPI PUSH2 0x2212 PUSH2 0x1F0F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2223 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2244 JUMPI PUSH2 0x2243 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2251 DUP8 DUP3 DUP9 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2262 DUP8 DUP3 DUP9 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2273 DUP8 DUP3 DUP9 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x1C5A JUMP JUMPDEST JUMPDEST PUSH2 0x22A0 DUP8 DUP3 DUP9 ADD PUSH2 0x21FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C2 JUMPI PUSH2 0x22C1 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22CF DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E0 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x232E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2341 JUMPI PUSH2 0x2340 PUSH2 0x22EA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x235A PUSH0 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x2367 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2374 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23B0 PUSH1 0x1C DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x23BB DUP3 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23DD DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23F7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x2404 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2411 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546869732073616C6520697320616C72656164792066696E616C697A65640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x244D PUSH1 0x1E DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP3 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x247A DUP2 PUSH2 0x2441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24A4 PUSH2 0x249F PUSH2 0x249A DUP5 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24B5 DUP3 PUSH2 0x248A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24C6 DUP3 PUSH2 0x24AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24D6 DUP2 PUSH2 0x24BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24EF PUSH0 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x24FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24CD JUMP JUMPDEST PUSH2 0x2509 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x251F DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253A JUMPI PUSH2 0x2539 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2547 DUP5 DUP3 DUP6 ADD PUSH2 0x2511 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E73666572207061796D656E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2584 PUSH1 0x1A DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x258F DUP3 PUSH2 0x2550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B1 DUP2 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25CB PUSH0 DUP4 ADD DUP7 PUSH2 0x24CD JUMP JUMPDEST PUSH2 0x25D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x25E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2601 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x260B DUP2 DUP6 PUSH2 0x25ED JUMP JUMPDEST SWAP4 POP PUSH2 0x261B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2632 DUP3 DUP6 PUSH2 0x25F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x263E DUP3 DUP5 PUSH2 0x25F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26A6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x266B JUMP JUMPDEST PUSH2 0x26B0 DUP7 DUP4 PUSH2 0x266B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x26D8 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26FB DUP4 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x270F PUSH2 0x2707 DUP3 PUSH2 0x26E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2677 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2723 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x272E DUP2 DUP5 DUP5 PUSH2 0x26F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2751 JUMPI PUSH2 0x2746 PUSH0 DUP3 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2734 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2796 JUMPI PUSH2 0x2767 DUP2 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x2770 DUP5 PUSH2 0x265C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2793 PUSH2 0x278B DUP6 PUSH2 0x265C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2733 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x279B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE DUP4 DUP4 PUSH2 0x27A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E7 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2800 JUMPI PUSH2 0x27FF PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH2 0x280A DUP3 SLOAD PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x2815 DUP3 DUP3 DUP6 PUSH2 0x2755 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2846 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2834 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283E DUP6 DUP3 PUSH2 0x27C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2854 DUP7 PUSH2 0x264A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x287B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2856 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2898 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2894 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28D1 DUP3 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0x28DB DUP2 DUP6 PUSH2 0x28B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x28EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x1D39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2912 PUSH0 DUP4 ADD DUP8 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x291F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x292C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x293E DUP2 DUP5 PUSH2 0x28C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2957 DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2972 JUMPI PUSH2 0x2971 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x297F DUP5 DUP3 DUP6 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x299B PUSH0 DUP4 ADD DUP6 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x29A8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD AND STOP ADDMOD PUSH26 0x852E3E00367AB6A1AC1788DB4DD36DCFF4692D25D1AE06ED3461 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "308:2148:18:-:0;;;871:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;970:13:18::1;948:12;;:36;;;;;;;;;;;;;;;;;;871:121:::0;308:2148;;88:117:19;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;308:2148:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1206": {
									"entryPoint": 3768,
									"id": 1206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1272": {
									"entryPoint": 5872,
									"id": 1272,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_599": {
									"entryPoint": 5586,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_854": {
									"entryPoint": 6319,
									"id": 854,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1402": {
									"entryPoint": 5152,
									"id": 1402,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_781": {
									"entryPoint": 3704,
									"id": 781,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_817": {
									"entryPoint": 6716,
									"id": 817,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1704": {
									"entryPoint": 3761,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_768": {
									"entryPoint": 5815,
									"id": 768,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1338": {
									"entryPoint": 3570,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1309": {
									"entryPoint": 4791,
									"id": 1309,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1663": {
									"entryPoint": 4309,
									"id": 1663,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_1144": {
									"entryPoint": 4431,
									"id": 1144,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_960": {
									"entryPoint": 3786,
									"id": 960,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_615": {
									"entryPoint": 1252,
									"id": 615,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_523": {
									"entryPoint": 1969,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createMarketItem_3369": {
									"entryPoint": 1543,
									"id": 3369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createSale_3440": {
									"entryPoint": 2295,
									"id": 3440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1740": {
									"entryPoint": 4419,
									"id": 1740,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_632": {
									"entryPoint": 1225,
									"id": 632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1754": {
									"entryPoint": 4399,
									"id": 1754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_665": {
									"entryPoint": 3203,
									"id": 665,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2961": {
									"entryPoint": 6908,
									"id": 2961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_545": {
									"entryPoint": 1082,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_536": {
									"entryPoint": 1952,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_729": {
									"entryPoint": 1921,
									"id": 729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_755": {
									"entryPoint": 2907,
									"id": 755,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_648": {
									"entryPoint": 2885,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1587": {
									"entryPoint": 986,
									"id": 1587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2074": {
									"entryPoint": 5710,
									"id": 2074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_495": {
									"entryPoint": 3345,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_554": {
									"entryPoint": 2151,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1864": {
									"entryPoint": 6514,
									"id": 1864,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1644": {
									"entryPoint": 2936,
									"id": 1644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_590": {
									"entryPoint": 5608,
									"id": 590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_711": {
									"entryPoint": 1274,
									"id": 711,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateTokenMetadata_3453": {
									"entryPoint": 1529,
									"id": 3453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 9656,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10495,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10632,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 9404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 10671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7": {
									"entryPoint": 9552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9": {
									"entryPoint": 9084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26591:19",
										"nodeType": "YulBlock",
										"src": "0:26591:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1577:40:19",
													"nodeType": "YulBlock",
													"src": "1577:40:19",
													"statements": [
														{
															"nativeSrc": "1588:22:19",
															"nodeType": "YulAssignment",
															"src": "1588:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:19"
																},
																"nativeSrc": "1598:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:19",
														"nodeType": "YulTypedName",
														"src": "1560:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:19",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													}
												],
												"src": "1518:99:19"
											},
											{
												"body": {
													"nativeSrc": "1719:73:19",
													"nodeType": "YulBlock",
													"src": "1719:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:19"
																},
																"nativeSrc": "1729:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:19"
															},
															"nativeSrc": "1729:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:19"
														},
														{
															"nativeSrc": "1757:29:19",
															"nodeType": "YulAssignment",
															"src": "1757:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nativeSrc": "1772:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:19",
														"nodeType": "YulTypedName",
														"src": "1691:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:19",
														"nodeType": "YulTypedName",
														"src": "1696:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:19",
														"nodeType": "YulTypedName",
														"src": "1707:11:19",
														"type": ""
													}
												],
												"src": "1623:169:19"
											},
											{
												"body": {
													"nativeSrc": "1860:77:19",
													"nodeType": "YulBlock",
													"src": "1860:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:19"
																},
																"nativeSrc": "1871:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:19"
															},
															"nativeSrc": "1871:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:19"
																		},
																		"nativeSrc": "1910:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:19"
																},
																"nativeSrc": "1903:27:19",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:19"
															},
															"nativeSrc": "1903:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:19",
														"nodeType": "YulTypedName",
														"src": "1842:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:19",
														"nodeType": "YulTypedName",
														"src": "1847:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:19",
														"nodeType": "YulTypedName",
														"src": "1852:6:19",
														"type": ""
													}
												],
												"src": "1798:139:19"
											},
											{
												"body": {
													"nativeSrc": "1991:54:19",
													"nodeType": "YulBlock",
													"src": "1991:54:19",
													"statements": [
														{
															"nativeSrc": "2001:38:19",
															"nodeType": "YulAssignment",
															"src": "2001:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:19"
																		},
																		"nativeSrc": "2015:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:19"
																		},
																		"nativeSrc": "2031:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:19"
																},
																"nativeSrc": "2011:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:19",
														"nodeType": "YulTypedName",
														"src": "1974:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:19",
														"nodeType": "YulTypedName",
														"src": "1984:6:19",
														"type": ""
													}
												],
												"src": "1943:102:19"
											},
											{
												"body": {
													"nativeSrc": "2143:285:19",
													"nodeType": "YulBlock",
													"src": "2143:285:19",
													"statements": [
														{
															"nativeSrc": "2153:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:19"
																},
																"nativeSrc": "2167:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:19",
															"nodeType": "YulAssignment",
															"src": "2215:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:19"
																},
																"nativeSrc": "2222:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:19"
																		},
																		"nativeSrc": "2337:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:19"
																},
																"nativeSrc": "2302:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:19"
															},
															"nativeSrc": "2302:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:19"
														},
														{
															"nativeSrc": "2376:46:19",
															"nodeType": "YulAssignment",
															"src": "2376:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:19"
																		},
																		"nativeSrc": "2392:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:19"
																},
																"nativeSrc": "2383:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:19",
														"nodeType": "YulTypedName",
														"src": "2124:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:19",
														"nodeType": "YulTypedName",
														"src": "2131:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:19",
														"nodeType": "YulTypedName",
														"src": "2139:3:19",
														"type": ""
													}
												],
												"src": "2051:377:19"
											},
											{
												"body": {
													"nativeSrc": "2552:195:19",
													"nodeType": "YulBlock",
													"src": "2552:195:19",
													"statements": [
														{
															"nativeSrc": "2562:26:19",
															"nodeType": "YulAssignment",
															"src": "2562:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:19"
																},
																"nativeSrc": "2570:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:19"
																		},
																		"nativeSrc": "2605:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:19"
																		},
																		"nativeSrc": "2624:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:19"
																},
																"nativeSrc": "2598:47:19",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:19"
															},
															"nativeSrc": "2598:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:19"
														},
														{
															"nativeSrc": "2654:86:19",
															"nodeType": "YulAssignment",
															"src": "2654:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:19"
																},
																"nativeSrc": "2662:78:19",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:19",
														"nodeType": "YulTypedName",
														"src": "2524:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:19",
														"nodeType": "YulTypedName",
														"src": "2536:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:19",
														"nodeType": "YulTypedName",
														"src": "2547:4:19",
														"type": ""
													}
												],
												"src": "2434:313:19"
											},
											{
												"body": {
													"nativeSrc": "2798:32:19",
													"nodeType": "YulBlock",
													"src": "2798:32:19",
													"statements": [
														{
															"nativeSrc": "2808:16:19",
															"nodeType": "YulAssignment",
															"src": "2808:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:19",
																"nodeType": "YulIdentifier",
																"src": "2819:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:19",
														"nodeType": "YulTypedName",
														"src": "2780:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:19",
														"nodeType": "YulTypedName",
														"src": "2790:7:19",
														"type": ""
													}
												],
												"src": "2753:77:19"
											},
											{
												"body": {
													"nativeSrc": "2879:79:19",
													"nodeType": "YulBlock",
													"src": "2879:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:19",
																"nodeType": "YulBlock",
																"src": "2936:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:19"
																			},
																			"nativeSrc": "2938:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:19"
																		},
																		"nativeSrc": "2938:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:19"
																				},
																				"nativeSrc": "2909:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:19"
																		},
																		"nativeSrc": "2899:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:19"
																},
																"nativeSrc": "2892:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:19"
															},
															"nativeSrc": "2889:63:19",
															"nodeType": "YulIf",
															"src": "2889:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:19",
														"nodeType": "YulTypedName",
														"src": "2872:5:19",
														"type": ""
													}
												],
												"src": "2836:122:19"
											},
											{
												"body": {
													"nativeSrc": "3016:87:19",
													"nodeType": "YulBlock",
													"src": "3016:87:19",
													"statements": [
														{
															"nativeSrc": "3026:29:19",
															"nodeType": "YulAssignment",
															"src": "3026:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:19"
																},
																"nativeSrc": "3035:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:19"
																},
																"nativeSrc": "3064:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:19"
															},
															"nativeSrc": "3064:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:19",
														"nodeType": "YulTypedName",
														"src": "2994:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:19",
														"nodeType": "YulTypedName",
														"src": "3002:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:19",
														"nodeType": "YulTypedName",
														"src": "3010:5:19",
														"type": ""
													}
												],
												"src": "2964:139:19"
											},
											{
												"body": {
													"nativeSrc": "3175:263:19",
													"nodeType": "YulBlock",
													"src": "3175:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:19",
																"nodeType": "YulBlock",
																"src": "3221:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:19"
																			},
																			"nativeSrc": "3223:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:19"
																		},
																		"nativeSrc": "3223:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:19"
																		},
																		"nativeSrc": "3192:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:19"
																},
																"nativeSrc": "3188:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:19"
															},
															"nativeSrc": "3185:119:19",
															"nodeType": "YulIf",
															"src": "3185:119:19"
														},
														{
															"nativeSrc": "3314:117:19",
															"nodeType": "YulBlock",
															"src": "3314:117:19",
															"statements": [
																{
																	"nativeSrc": "3329:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:19"
																				},
																				"nativeSrc": "3389:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:19"
																		},
																		"nativeSrc": "3368:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:19",
														"nodeType": "YulTypedName",
														"src": "3145:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:19",
														"nodeType": "YulTypedName",
														"src": "3156:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:19",
														"nodeType": "YulTypedName",
														"src": "3168:6:19",
														"type": ""
													}
												],
												"src": "3109:329:19"
											},
											{
												"body": {
													"nativeSrc": "3489:81:19",
													"nodeType": "YulBlock",
													"src": "3489:81:19",
													"statements": [
														{
															"nativeSrc": "3499:65:19",
															"nodeType": "YulAssignment",
															"src": "3499:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:19"
																},
																"nativeSrc": "3510:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:19",
														"nodeType": "YulTypedName",
														"src": "3471:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:19",
														"nodeType": "YulTypedName",
														"src": "3481:7:19",
														"type": ""
													}
												],
												"src": "3444:126:19"
											},
											{
												"body": {
													"nativeSrc": "3621:51:19",
													"nodeType": "YulBlock",
													"src": "3621:51:19",
													"statements": [
														{
															"nativeSrc": "3631:35:19",
															"nodeType": "YulAssignment",
															"src": "3631:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:19"
																},
																"nativeSrc": "3642:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:19",
														"nodeType": "YulTypedName",
														"src": "3603:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:19",
														"nodeType": "YulTypedName",
														"src": "3613:7:19",
														"type": ""
													}
												],
												"src": "3576:96:19"
											},
											{
												"body": {
													"nativeSrc": "3743:53:19",
													"nodeType": "YulBlock",
													"src": "3743:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:19"
																		},
																		"nativeSrc": "3765:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:19"
																},
																"nativeSrc": "3753:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:19"
															},
															"nativeSrc": "3753:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:19",
														"nodeType": "YulTypedName",
														"src": "3731:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:19",
														"nodeType": "YulTypedName",
														"src": "3738:3:19",
														"type": ""
													}
												],
												"src": "3678:118:19"
											},
											{
												"body": {
													"nativeSrc": "3900:124:19",
													"nodeType": "YulBlock",
													"src": "3900:124:19",
													"statements": [
														{
															"nativeSrc": "3910:26:19",
															"nodeType": "YulAssignment",
															"src": "3910:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:19"
																},
																"nativeSrc": "3918:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:19"
																		},
																		"nativeSrc": "3999:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:19"
																},
																"nativeSrc": "3946:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:19"
															},
															"nativeSrc": "3946:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:19",
														"nodeType": "YulTypedName",
														"src": "3872:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:19",
														"nodeType": "YulTypedName",
														"src": "3884:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:19",
														"nodeType": "YulTypedName",
														"src": "3895:4:19",
														"type": ""
													}
												],
												"src": "3802:222:19"
											},
											{
												"body": {
													"nativeSrc": "4073:79:19",
													"nodeType": "YulBlock",
													"src": "4073:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:19",
																"nodeType": "YulBlock",
																"src": "4130:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:19"
																			},
																			"nativeSrc": "4132:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:19"
																		},
																		"nativeSrc": "4132:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:19"
																				},
																				"nativeSrc": "4103:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:19"
																		},
																		"nativeSrc": "4093:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:19"
																},
																"nativeSrc": "4086:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:19"
															},
															"nativeSrc": "4083:63:19",
															"nodeType": "YulIf",
															"src": "4083:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:19",
														"nodeType": "YulTypedName",
														"src": "4066:5:19",
														"type": ""
													}
												],
												"src": "4030:122:19"
											},
											{
												"body": {
													"nativeSrc": "4210:87:19",
													"nodeType": "YulBlock",
													"src": "4210:87:19",
													"statements": [
														{
															"nativeSrc": "4220:29:19",
															"nodeType": "YulAssignment",
															"src": "4220:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:19"
																},
																"nativeSrc": "4229:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:19"
																},
																"nativeSrc": "4258:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:19"
															},
															"nativeSrc": "4258:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:19",
														"nodeType": "YulTypedName",
														"src": "4188:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:19",
														"nodeType": "YulTypedName",
														"src": "4196:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:19",
														"nodeType": "YulTypedName",
														"src": "4204:5:19",
														"type": ""
													}
												],
												"src": "4158:139:19"
											},
											{
												"body": {
													"nativeSrc": "4386:391:19",
													"nodeType": "YulBlock",
													"src": "4386:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:19",
																"nodeType": "YulBlock",
																"src": "4432:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:19"
																			},
																			"nativeSrc": "4434:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:19"
																		},
																		"nativeSrc": "4434:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:19"
																		},
																		"nativeSrc": "4403:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:19"
																},
																"nativeSrc": "4399:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:19"
															},
															"nativeSrc": "4396:119:19",
															"nodeType": "YulIf",
															"src": "4396:119:19"
														},
														{
															"nativeSrc": "4525:117:19",
															"nodeType": "YulBlock",
															"src": "4525:117:19",
															"statements": [
																{
																	"nativeSrc": "4540:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:19"
																				},
																				"nativeSrc": "4600:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:19"
																		},
																		"nativeSrc": "4579:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:19",
															"nodeType": "YulBlock",
															"src": "4652:118:19",
															"statements": [
																{
																	"nativeSrc": "4667:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:19"
																				},
																				"nativeSrc": "4728:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:19"
																		},
																		"nativeSrc": "4707:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:19",
														"nodeType": "YulTypedName",
														"src": "4348:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:19",
														"nodeType": "YulTypedName",
														"src": "4359:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:19",
														"nodeType": "YulTypedName",
														"src": "4371:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:19",
														"nodeType": "YulTypedName",
														"src": "4379:6:19",
														"type": ""
													}
												],
												"src": "4303:474:19"
											},
											{
												"body": {
													"nativeSrc": "4883:519:19",
													"nodeType": "YulBlock",
													"src": "4883:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:19",
																"nodeType": "YulBlock",
																"src": "4929:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:19"
																			},
																			"nativeSrc": "4931:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:19"
																		},
																		"nativeSrc": "4931:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:19"
																		},
																		"nativeSrc": "4900:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:19"
																},
																"nativeSrc": "4896:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:19"
															},
															"nativeSrc": "4893:119:19",
															"nodeType": "YulIf",
															"src": "4893:119:19"
														},
														{
															"nativeSrc": "5022:117:19",
															"nodeType": "YulBlock",
															"src": "5022:117:19",
															"statements": [
																{
																	"nativeSrc": "5037:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:19"
																				},
																				"nativeSrc": "5097:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:19"
																		},
																		"nativeSrc": "5076:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:19",
															"nodeType": "YulBlock",
															"src": "5149:118:19",
															"statements": [
																{
																	"nativeSrc": "5164:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:19"
																				},
																				"nativeSrc": "5225:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:19"
																		},
																		"nativeSrc": "5204:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:19",
															"nodeType": "YulBlock",
															"src": "5277:118:19",
															"statements": [
																{
																	"nativeSrc": "5292:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:19"
																				},
																				"nativeSrc": "5353:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:19"
																		},
																		"nativeSrc": "5332:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:19",
														"nodeType": "YulTypedName",
														"src": "4837:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:19",
														"nodeType": "YulTypedName",
														"src": "4848:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:19",
														"nodeType": "YulTypedName",
														"src": "4860:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:19",
														"nodeType": "YulTypedName",
														"src": "4868:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:19",
														"nodeType": "YulTypedName",
														"src": "4876:6:19",
														"type": ""
													}
												],
												"src": "4783:619:19"
											},
											{
												"body": {
													"nativeSrc": "5497:28:19",
													"nodeType": "YulBlock",
													"src": "5497:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:19"
																},
																"nativeSrc": "5507:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:19"
															},
															"nativeSrc": "5507:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:19"
											},
											{
												"body": {
													"nativeSrc": "5620:28:19",
													"nodeType": "YulBlock",
													"src": "5620:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5637:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5637:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5630:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:19"
																},
																"nativeSrc": "5630:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5630:12:19"
															},
															"nativeSrc": "5630:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5630:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5531:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:117:19"
											},
											{
												"body": {
													"nativeSrc": "5682:152:19",
													"nodeType": "YulBlock",
													"src": "5682:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:77:19",
																		"nodeType": "YulLiteral",
																		"src": "5702:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:19"
																},
																"nativeSrc": "5692:88:19",
																"nodeType": "YulFunctionCall",
																"src": "5692:88:19"
															},
															"nativeSrc": "5692:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "5692:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5796:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5789:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:19"
																},
																"nativeSrc": "5789:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5789:15:19"
															},
															"nativeSrc": "5789:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5820:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5823:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5813:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:19"
																},
																"nativeSrc": "5813:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5813:15:19"
															},
															"nativeSrc": "5813:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5813:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5654:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5654:180:19"
											},
											{
												"body": {
													"nativeSrc": "5883:238:19",
													"nodeType": "YulBlock",
													"src": "5883:238:19",
													"statements": [
														{
															"nativeSrc": "5893:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5915:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5945:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5923:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "5923:21:19"
																		},
																		"nativeSrc": "5923:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:19"
																},
																"nativeSrc": "5911:40:19",
																"nodeType": "YulFunctionCall",
																"src": "5911:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5897:10:19",
																	"nodeType": "YulTypedName",
																	"src": "5897:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6062:22:19",
																"nodeType": "YulBlock",
																"src": "6062:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6064:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6064:16:19"
																			},
																			"nativeSrc": "6064:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6064:18:19"
																		},
																		"nativeSrc": "6064:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6064:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6005:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6005:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6017:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6017:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6002:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:19"
																		},
																		"nativeSrc": "6002:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6041:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6041:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6053:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6038:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6038:2:19"
																		},
																		"nativeSrc": "6038:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5999:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5999:2:19"
																},
																"nativeSrc": "5999:62:19",
																"nodeType": "YulFunctionCall",
																"src": "5999:62:19"
															},
															"nativeSrc": "5996:88:19",
															"nodeType": "YulIf",
															"src": "5996:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6104:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "6104:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:19"
																},
																"nativeSrc": "6093:22:19",
																"nodeType": "YulFunctionCall",
																"src": "6093:22:19"
															},
															"nativeSrc": "6093:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "6093:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5840:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5869:6:19",
														"nodeType": "YulTypedName",
														"src": "5869:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5877:4:19",
														"nodeType": "YulTypedName",
														"src": "5877:4:19",
														"type": ""
													}
												],
												"src": "5840:281:19"
											},
											{
												"body": {
													"nativeSrc": "6168:88:19",
													"nodeType": "YulBlock",
													"src": "6168:88:19",
													"statements": [
														{
															"nativeSrc": "6178:30:19",
															"nodeType": "YulAssignment",
															"src": "6178:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6188:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "6188:18:19"
																},
																"nativeSrc": "6188:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6178:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6237:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6237:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6245:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6217:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "6217:19:19"
																},
																"nativeSrc": "6217:33:19",
																"nodeType": "YulFunctionCall",
																"src": "6217:33:19"
															},
															"nativeSrc": "6217:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "6217:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6127:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6152:4:19",
														"nodeType": "YulTypedName",
														"src": "6152:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6161:6:19",
														"nodeType": "YulTypedName",
														"src": "6161:6:19",
														"type": ""
													}
												],
												"src": "6127:129:19"
											},
											{
												"body": {
													"nativeSrc": "6329:241:19",
													"nodeType": "YulBlock",
													"src": "6329:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6434:22:19",
																"nodeType": "YulBlock",
																"src": "6434:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6436:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6436:16:19"
																			},
																			"nativeSrc": "6436:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:18:19"
																		},
																		"nativeSrc": "6436:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:18:19",
																		"nodeType": "YulLiteral",
																		"src": "6414:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6403:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6403:2:19"
																},
																"nativeSrc": "6403:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6403:30:19"
															},
															"nativeSrc": "6400:56:19",
															"nodeType": "YulIf",
															"src": "6400:56:19"
														},
														{
															"nativeSrc": "6466:37:19",
															"nodeType": "YulAssignment",
															"src": "6466:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6496:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6496:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6474:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "6474:21:19"
																},
																"nativeSrc": "6474:29:19",
																"nodeType": "YulFunctionCall",
																"src": "6474:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6466:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:19"
																}
															]
														},
														{
															"nativeSrc": "6540:23:19",
															"nodeType": "YulAssignment",
															"src": "6540:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6552:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6558:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6548:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:19"
																},
																"nativeSrc": "6548:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6548:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6540:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6262:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6313:6:19",
														"nodeType": "YulTypedName",
														"src": "6313:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6324:4:19",
														"nodeType": "YulTypedName",
														"src": "6324:4:19",
														"type": ""
													}
												],
												"src": "6262:308:19"
											},
											{
												"body": {
													"nativeSrc": "6640:84:19",
													"nodeType": "YulBlock",
													"src": "6640:84:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6664:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6669:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6651:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6651:12:19"
																},
																"nativeSrc": "6651:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6651:30:19"
															},
															"nativeSrc": "6651:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6651:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6701:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6706:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6706:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:19"
																		},
																		"nativeSrc": "6697:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:19"
																},
																"nativeSrc": "6690:27:19",
																"nodeType": "YulFunctionCall",
																"src": "6690:27:19"
															},
															"nativeSrc": "6690:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "6690:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6576:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6622:3:19",
														"nodeType": "YulTypedName",
														"src": "6622:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6627:3:19",
														"nodeType": "YulTypedName",
														"src": "6627:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6632:6:19",
														"nodeType": "YulTypedName",
														"src": "6632:6:19",
														"type": ""
													}
												],
												"src": "6576:148:19"
											},
											{
												"body": {
													"nativeSrc": "6814:341:19",
													"nodeType": "YulBlock",
													"src": "6814:341:19",
													"statements": [
														{
															"nativeSrc": "6824:75:19",
															"nodeType": "YulAssignment",
															"src": "6824:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6891:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6849:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "6849:41:19"
																		},
																		"nativeSrc": "6849:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6833:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "6833:15:19"
																},
																"nativeSrc": "6833:66:19",
																"nodeType": "YulFunctionCall",
																"src": "6833:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6824:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6915:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6915:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:19"
																},
																"nativeSrc": "6908:21:19",
																"nodeType": "YulFunctionCall",
																"src": "6908:21:19"
															},
															"nativeSrc": "6908:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "6908:21:19"
														},
														{
															"nativeSrc": "6938:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6938:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6953:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6953:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:19"
																},
																"nativeSrc": "6949:16:19",
																"nodeType": "YulFunctionCall",
																"src": "6949:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6942:3:19",
																	"nodeType": "YulTypedName",
																	"src": "6942:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:83:19",
																"nodeType": "YulBlock",
																"src": "7003:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7005:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7005:77:19"
																			},
																			"nativeSrc": "7005:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:79:19"
																		},
																		"nativeSrc": "7005:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6984:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6984:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6989:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6980:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6980:3:19"
																		},
																		"nativeSrc": "6980:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6980:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6998:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6977:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:19"
																},
																"nativeSrc": "6977:25:19",
																"nodeType": "YulFunctionCall",
																"src": "6977:25:19"
															},
															"nativeSrc": "6974:112:19",
															"nodeType": "YulIf",
															"src": "6974:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7132:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7137:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7137:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7142:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7095:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "7095:36:19"
																},
																"nativeSrc": "7095:54:19",
																"nodeType": "YulFunctionCall",
																"src": "7095:54:19"
															},
															"nativeSrc": "7095:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "7095:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6730:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6787:3:19",
														"nodeType": "YulTypedName",
														"src": "6787:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6792:6:19",
														"nodeType": "YulTypedName",
														"src": "6792:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6800:3:19",
														"nodeType": "YulTypedName",
														"src": "6800:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6808:5:19",
														"nodeType": "YulTypedName",
														"src": "6808:5:19",
														"type": ""
													}
												],
												"src": "6730:425:19"
											},
											{
												"body": {
													"nativeSrc": "7237:278:19",
													"nodeType": "YulBlock",
													"src": "7237:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:19",
																"nodeType": "YulBlock",
																"src": "7286:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7288:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:19"
																			},
																			"nativeSrc": "7288:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:19"
																		},
																		"nativeSrc": "7288:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:19",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:19"
																				},
																				"nativeSrc": "7261:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7280:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7280:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7257:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:19"
																		},
																		"nativeSrc": "7257:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7250:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:19"
																},
																"nativeSrc": "7250:35:19",
																"nodeType": "YulFunctionCall",
																"src": "7250:35:19"
															},
															"nativeSrc": "7247:122:19",
															"nodeType": "YulIf",
															"src": "7247:122:19"
														},
														{
															"nativeSrc": "7378:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7405:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7392:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "7392:12:19"
																},
																"nativeSrc": "7392:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7392:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7421:88:19",
															"nodeType": "YulAssignment",
															"src": "7421:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7482:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:4:19",
																				"nodeType": "YulLiteral",
																				"src": "7490:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7478:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:19"
																		},
																		"nativeSrc": "7478:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7505:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7430:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "7430:47:19"
																},
																"nativeSrc": "7430:79:19",
																"nodeType": "YulFunctionCall",
																"src": "7430:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7421:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7421:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7175:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7215:6:19",
														"nodeType": "YulTypedName",
														"src": "7215:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7223:3:19",
														"nodeType": "YulTypedName",
														"src": "7223:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7231:5:19",
														"nodeType": "YulTypedName",
														"src": "7231:5:19",
														"type": ""
													}
												],
												"src": "7175:340:19"
											},
											{
												"body": {
													"nativeSrc": "7614:561:19",
													"nodeType": "YulBlock",
													"src": "7614:561:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7660:83:19",
																"nodeType": "YulBlock",
																"src": "7660:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7662:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7662:77:19"
																			},
																			"nativeSrc": "7662:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7662:79:19"
																		},
																		"nativeSrc": "7662:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7662:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7635:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7635:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7644:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7644:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7631:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:19"
																		},
																		"nativeSrc": "7631:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7656:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:19"
																},
																"nativeSrc": "7627:32:19",
																"nodeType": "YulFunctionCall",
																"src": "7627:32:19"
															},
															"nativeSrc": "7624:119:19",
															"nodeType": "YulIf",
															"src": "7624:119:19"
														},
														{
															"nativeSrc": "7753:117:19",
															"nodeType": "YulBlock",
															"src": "7753:117:19",
															"statements": [
																{
																	"nativeSrc": "7768:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7768:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7782:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7782:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7772:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7772:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7797:63:19",
																	"nodeType": "YulAssignment",
																	"src": "7797:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7832:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7832:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7843:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7843:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7828:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7828:3:19"
																				},
																				"nativeSrc": "7828:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7828:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7852:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7852:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7807:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "7807:20:19"
																		},
																		"nativeSrc": "7807:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7797:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7797:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7880:288:19",
															"nodeType": "YulBlock",
															"src": "7880:288:19",
															"statements": [
																{
																	"nativeSrc": "7895:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7895:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7926:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7926:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7937:2:19",
																						"nodeType": "YulLiteral",
																						"src": "7937:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7922:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7922:3:19"
																				},
																				"nativeSrc": "7922:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7922:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7909:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "7909:12:19"
																		},
																		"nativeSrc": "7909:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7909:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7899:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7899:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7988:83:19",
																		"nodeType": "YulBlock",
																		"src": "7988:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7990:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "7990:77:19"
																					},
																					"nativeSrc": "7990:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "7990:79:19"
																				},
																				"nativeSrc": "7990:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "7990:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7960:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7960:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7968:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7968:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7957:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7957:2:19"
																		},
																		"nativeSrc": "7957:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:30:19"
																	},
																	"nativeSrc": "7954:117:19",
																	"nodeType": "YulIf",
																	"src": "7954:117:19"
																},
																{
																	"nativeSrc": "8085:73:19",
																	"nodeType": "YulAssignment",
																	"src": "8085:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8130:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8130:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8141:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8141:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8126:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8126:3:19"
																				},
																				"nativeSrc": "8126:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8126:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8150:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8150:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8095:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "8095:30:19"
																		},
																		"nativeSrc": "8095:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8095:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8085:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8085:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nativeSrc": "7521:654:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7576:9:19",
														"nodeType": "YulTypedName",
														"src": "7576:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7587:7:19",
														"nodeType": "YulTypedName",
														"src": "7587:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7599:6:19",
														"nodeType": "YulTypedName",
														"src": "7599:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7607:6:19",
														"nodeType": "YulTypedName",
														"src": "7607:6:19",
														"type": ""
													}
												],
												"src": "7521:654:19"
											},
											{
												"body": {
													"nativeSrc": "8264:391:19",
													"nodeType": "YulBlock",
													"src": "8264:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8310:83:19",
																"nodeType": "YulBlock",
																"src": "8310:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8312:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8312:77:19"
																			},
																			"nativeSrc": "8312:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8312:79:19"
																		},
																		"nativeSrc": "8312:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8312:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8285:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8285:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8294:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8294:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8281:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:19"
																		},
																		"nativeSrc": "8281:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8281:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8306:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8277:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:19"
																},
																"nativeSrc": "8277:32:19",
																"nodeType": "YulFunctionCall",
																"src": "8277:32:19"
															},
															"nativeSrc": "8274:119:19",
															"nodeType": "YulIf",
															"src": "8274:119:19"
														},
														{
															"nativeSrc": "8403:117:19",
															"nodeType": "YulBlock",
															"src": "8403:117:19",
															"statements": [
																{
																	"nativeSrc": "8418:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8418:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8432:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8432:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8422:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8422:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8447:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8447:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8482:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8482:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8493:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8493:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8478:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8478:3:19"
																				},
																				"nativeSrc": "8478:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8478:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8502:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8502:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8457:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8457:20:19"
																		},
																		"nativeSrc": "8457:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8457:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8447:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8447:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8530:118:19",
															"nodeType": "YulBlock",
															"src": "8530:118:19",
															"statements": [
																{
																	"nativeSrc": "8545:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8545:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8559:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8559:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8549:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8549:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8575:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8575:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8610:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8610:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8621:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8621:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8606:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8606:3:19"
																				},
																				"nativeSrc": "8606:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8606:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8630:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8630:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8585:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8585:20:19"
																		},
																		"nativeSrc": "8585:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8585:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8575:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8575:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8181:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8226:9:19",
														"nodeType": "YulTypedName",
														"src": "8226:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8237:7:19",
														"nodeType": "YulTypedName",
														"src": "8237:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8249:6:19",
														"nodeType": "YulTypedName",
														"src": "8249:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8257:6:19",
														"nodeType": "YulTypedName",
														"src": "8257:6:19",
														"type": ""
													}
												],
												"src": "8181:474:19"
											},
											{
												"body": {
													"nativeSrc": "8727:263:19",
													"nodeType": "YulBlock",
													"src": "8727:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8773:83:19",
																"nodeType": "YulBlock",
																"src": "8773:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8775:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8775:77:19"
																			},
																			"nativeSrc": "8775:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8775:79:19"
																		},
																		"nativeSrc": "8775:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8775:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8748:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8748:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8757:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8744:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8744:3:19"
																		},
																		"nativeSrc": "8744:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8744:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8769:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8769:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8740:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8740:3:19"
																},
																"nativeSrc": "8740:32:19",
																"nodeType": "YulFunctionCall",
																"src": "8740:32:19"
															},
															"nativeSrc": "8737:119:19",
															"nodeType": "YulIf",
															"src": "8737:119:19"
														},
														{
															"nativeSrc": "8866:117:19",
															"nodeType": "YulBlock",
															"src": "8866:117:19",
															"statements": [
																{
																	"nativeSrc": "8881:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8881:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8895:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8895:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8885:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8885:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8910:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8910:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8945:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8945:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8956:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8956:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8941:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8941:3:19"
																				},
																				"nativeSrc": "8941:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8941:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8965:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8965:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8920:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8920:20:19"
																		},
																		"nativeSrc": "8920:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8920:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8910:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8910:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8661:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8697:9:19",
														"nodeType": "YulTypedName",
														"src": "8697:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8708:7:19",
														"nodeType": "YulTypedName",
														"src": "8708:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8720:6:19",
														"nodeType": "YulTypedName",
														"src": "8720:6:19",
														"type": ""
													}
												],
												"src": "8661:329:19"
											},
											{
												"body": {
													"nativeSrc": "9061:53:19",
													"nodeType": "YulBlock",
													"src": "9061:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9078:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9078:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9101:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9101:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9083:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "9083:17:19"
																		},
																		"nativeSrc": "9083:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9083:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9071:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9071:6:19"
																},
																"nativeSrc": "9071:37:19",
																"nodeType": "YulFunctionCall",
																"src": "9071:37:19"
															},
															"nativeSrc": "9071:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "9071:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8996:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9049:5:19",
														"nodeType": "YulTypedName",
														"src": "9049:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9056:3:19",
														"nodeType": "YulTypedName",
														"src": "9056:3:19",
														"type": ""
													}
												],
												"src": "8996:118:19"
											},
											{
												"body": {
													"nativeSrc": "9218:124:19",
													"nodeType": "YulBlock",
													"src": "9218:124:19",
													"statements": [
														{
															"nativeSrc": "9228:26:19",
															"nodeType": "YulAssignment",
															"src": "9228:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9240:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9240:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9251:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9251:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9236:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9236:3:19"
																},
																"nativeSrc": "9236:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9236:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9228:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9228:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9308:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9308:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9321:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9321:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9332:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9332:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9317:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9317:3:19"
																		},
																		"nativeSrc": "9317:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9317:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9264:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "9264:43:19"
																},
																"nativeSrc": "9264:71:19",
																"nodeType": "YulFunctionCall",
																"src": "9264:71:19"
															},
															"nativeSrc": "9264:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "9264:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9120:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9190:9:19",
														"nodeType": "YulTypedName",
														"src": "9190:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9202:6:19",
														"nodeType": "YulTypedName",
														"src": "9202:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9213:4:19",
														"nodeType": "YulTypedName",
														"src": "9213:4:19",
														"type": ""
													}
												],
												"src": "9120:222:19"
											},
											{
												"body": {
													"nativeSrc": "9388:76:19",
													"nodeType": "YulBlock",
													"src": "9388:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9442:16:19",
																"nodeType": "YulBlock",
																"src": "9442:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9451:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9451:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9454:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9454:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9444:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9444:6:19"
																			},
																			"nativeSrc": "9444:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9444:12:19"
																		},
																		"nativeSrc": "9444:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9444:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9411:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9411:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9433:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "9433:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9418:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "9418:14:19"
																				},
																				"nativeSrc": "9418:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9418:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9408:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9408:2:19"
																		},
																		"nativeSrc": "9408:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9408:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9401:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9401:6:19"
																},
																"nativeSrc": "9401:40:19",
																"nodeType": "YulFunctionCall",
																"src": "9401:40:19"
															},
															"nativeSrc": "9398:60:19",
															"nodeType": "YulIf",
															"src": "9398:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9348:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9381:5:19",
														"nodeType": "YulTypedName",
														"src": "9381:5:19",
														"type": ""
													}
												],
												"src": "9348:116:19"
											},
											{
												"body": {
													"nativeSrc": "9519:84:19",
													"nodeType": "YulBlock",
													"src": "9519:84:19",
													"statements": [
														{
															"nativeSrc": "9529:29:19",
															"nodeType": "YulAssignment",
															"src": "9529:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9551:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9551:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9538:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "9538:12:19"
																},
																"nativeSrc": "9538:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9538:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9529:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9529:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9591:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "9591:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9567:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "9567:23:19"
																},
																"nativeSrc": "9567:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9567:30:19"
															},
															"nativeSrc": "9567:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "9567:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9470:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9497:6:19",
														"nodeType": "YulTypedName",
														"src": "9497:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9505:3:19",
														"nodeType": "YulTypedName",
														"src": "9505:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9513:5:19",
														"nodeType": "YulTypedName",
														"src": "9513:5:19",
														"type": ""
													}
												],
												"src": "9470:133:19"
											},
											{
												"body": {
													"nativeSrc": "9689:388:19",
													"nodeType": "YulBlock",
													"src": "9689:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9735:83:19",
																"nodeType": "YulBlock",
																"src": "9735:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9737:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9737:77:19"
																			},
																			"nativeSrc": "9737:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9737:79:19"
																		},
																		"nativeSrc": "9737:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9737:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9710:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9710:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9719:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9719:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9706:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9706:3:19"
																		},
																		"nativeSrc": "9706:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9706:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9731:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9731:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9702:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9702:3:19"
																},
																"nativeSrc": "9702:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9702:32:19"
															},
															"nativeSrc": "9699:119:19",
															"nodeType": "YulIf",
															"src": "9699:119:19"
														},
														{
															"nativeSrc": "9828:117:19",
															"nodeType": "YulBlock",
															"src": "9828:117:19",
															"statements": [
																{
																	"nativeSrc": "9843:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9843:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9857:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9857:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9847:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9847:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9872:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9872:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9907:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9907:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9918:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9918:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9903:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9903:3:19"
																				},
																				"nativeSrc": "9903:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9903:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9927:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9927:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9882:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9882:20:19"
																		},
																		"nativeSrc": "9882:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9882:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9872:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9872:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9955:115:19",
															"nodeType": "YulBlock",
															"src": "9955:115:19",
															"statements": [
																{
																	"nativeSrc": "9970:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9970:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9984:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9984:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9974:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9974:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10000:60:19",
																	"nodeType": "YulAssignment",
																	"src": "10000:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10032:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10032:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10043:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10043:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10028:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10028:3:19"
																				},
																				"nativeSrc": "10028:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10028:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10052:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10052:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10010:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "10010:17:19"
																		},
																		"nativeSrc": "10010:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10010:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10000:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10000:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9609:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9651:9:19",
														"nodeType": "YulTypedName",
														"src": "9651:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9662:7:19",
														"nodeType": "YulTypedName",
														"src": "9662:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9674:6:19",
														"nodeType": "YulTypedName",
														"src": "9674:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9682:6:19",
														"nodeType": "YulTypedName",
														"src": "9682:6:19",
														"type": ""
													}
												],
												"src": "9609:468:19"
											},
											{
												"body": {
													"nativeSrc": "10149:241:19",
													"nodeType": "YulBlock",
													"src": "10149:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10254:22:19",
																"nodeType": "YulBlock",
																"src": "10254:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10256:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10256:16:19"
																			},
																			"nativeSrc": "10256:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10256:18:19"
																		},
																		"nativeSrc": "10256:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10256:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10226:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10226:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10234:18:19",
																		"nodeType": "YulLiteral",
																		"src": "10234:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10223:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10223:2:19"
																},
																"nativeSrc": "10223:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10223:30:19"
															},
															"nativeSrc": "10220:56:19",
															"nodeType": "YulIf",
															"src": "10220:56:19"
														},
														{
															"nativeSrc": "10286:37:19",
															"nodeType": "YulAssignment",
															"src": "10286:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10316:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10316:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10294:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "10294:21:19"
																},
																"nativeSrc": "10294:29:19",
																"nodeType": "YulFunctionCall",
																"src": "10294:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10286:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10286:4:19"
																}
															]
														},
														{
															"nativeSrc": "10360:23:19",
															"nodeType": "YulAssignment",
															"src": "10360:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10372:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10372:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10378:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10378:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10368:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10368:3:19"
																},
																"nativeSrc": "10368:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10368:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10360:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10360:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10083:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10133:6:19",
														"nodeType": "YulTypedName",
														"src": "10133:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10144:4:19",
														"nodeType": "YulTypedName",
														"src": "10144:4:19",
														"type": ""
													}
												],
												"src": "10083:307:19"
											},
											{
												"body": {
													"nativeSrc": "10479:340:19",
													"nodeType": "YulBlock",
													"src": "10479:340:19",
													"statements": [
														{
															"nativeSrc": "10489:74:19",
															"nodeType": "YulAssignment",
															"src": "10489:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10555:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10555:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10514:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "10514:40:19"
																		},
																		"nativeSrc": "10514:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10514:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10498:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "10498:15:19"
																},
																"nativeSrc": "10498:65:19",
																"nodeType": "YulFunctionCall",
																"src": "10498:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10489:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10489:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10579:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10579:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10586:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10586:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10572:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10572:6:19"
																},
																"nativeSrc": "10572:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10572:21:19"
															},
															"nativeSrc": "10572:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10572:21:19"
														},
														{
															"nativeSrc": "10602:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10602:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10617:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10617:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10624:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10624:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10613:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10613:3:19"
																},
																"nativeSrc": "10613:16:19",
																"nodeType": "YulFunctionCall",
																"src": "10613:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10606:3:19",
																	"nodeType": "YulTypedName",
																	"src": "10606:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10667:83:19",
																"nodeType": "YulBlock",
																"src": "10667:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10669:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10669:77:19"
																			},
																			"nativeSrc": "10669:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10669:79:19"
																		},
																		"nativeSrc": "10669:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10669:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10648:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10648:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10653:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10644:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10644:3:19"
																		},
																		"nativeSrc": "10644:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10662:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10662:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10641:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10641:2:19"
																},
																"nativeSrc": "10641:25:19",
																"nodeType": "YulFunctionCall",
																"src": "10641:25:19"
															},
															"nativeSrc": "10638:112:19",
															"nodeType": "YulIf",
															"src": "10638:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10796:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10796:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10801:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10801:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10806:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10759:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "10759:36:19"
																},
																"nativeSrc": "10759:54:19",
																"nodeType": "YulFunctionCall",
																"src": "10759:54:19"
															},
															"nativeSrc": "10759:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "10759:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10396:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10452:3:19",
														"nodeType": "YulTypedName",
														"src": "10452:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10457:6:19",
														"nodeType": "YulTypedName",
														"src": "10457:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10465:3:19",
														"nodeType": "YulTypedName",
														"src": "10465:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10473:5:19",
														"nodeType": "YulTypedName",
														"src": "10473:5:19",
														"type": ""
													}
												],
												"src": "10396:423:19"
											},
											{
												"body": {
													"nativeSrc": "10899:277:19",
													"nodeType": "YulBlock",
													"src": "10899:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10948:83:19",
																"nodeType": "YulBlock",
																"src": "10948:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10950:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10950:77:19"
																			},
																			"nativeSrc": "10950:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10950:79:19"
																		},
																		"nativeSrc": "10950:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10950:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10927:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10927:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10935:4:19",
																						"nodeType": "YulLiteral",
																						"src": "10935:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10923:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10923:3:19"
																				},
																				"nativeSrc": "10923:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10923:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10942:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10942:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10919:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10919:3:19"
																		},
																		"nativeSrc": "10919:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10919:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10912:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10912:6:19"
																},
																"nativeSrc": "10912:35:19",
																"nodeType": "YulFunctionCall",
																"src": "10912:35:19"
															},
															"nativeSrc": "10909:122:19",
															"nodeType": "YulIf",
															"src": "10909:122:19"
														},
														{
															"nativeSrc": "11040:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11040:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11067:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11067:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11054:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "11054:12:19"
																},
																"nativeSrc": "11054:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11054:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11044:6:19",
																	"nodeType": "YulTypedName",
																	"src": "11044:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11083:87:19",
															"nodeType": "YulAssignment",
															"src": "11083:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11143:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11143:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11151:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11151:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11139:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11139:3:19"
																		},
																		"nativeSrc": "11139:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11139:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11158:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11158:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11166:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11166:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11092:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "11092:46:19"
																},
																"nativeSrc": "11092:78:19",
																"nodeType": "YulFunctionCall",
																"src": "11092:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11083:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11083:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10838:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10877:6:19",
														"nodeType": "YulTypedName",
														"src": "10877:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10885:3:19",
														"nodeType": "YulTypedName",
														"src": "10885:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10893:5:19",
														"nodeType": "YulTypedName",
														"src": "10893:5:19",
														"type": ""
													}
												],
												"src": "10838:338:19"
											},
											{
												"body": {
													"nativeSrc": "11308:817:19",
													"nodeType": "YulBlock",
													"src": "11308:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11355:83:19",
																"nodeType": "YulBlock",
																"src": "11355:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11357:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11357:77:19"
																			},
																			"nativeSrc": "11357:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11357:79:19"
																		},
																		"nativeSrc": "11357:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11357:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11329:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11329:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11338:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11338:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11325:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11325:3:19"
																		},
																		"nativeSrc": "11325:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11325:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11350:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11350:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11321:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11321:3:19"
																},
																"nativeSrc": "11321:33:19",
																"nodeType": "YulFunctionCall",
																"src": "11321:33:19"
															},
															"nativeSrc": "11318:120:19",
															"nodeType": "YulIf",
															"src": "11318:120:19"
														},
														{
															"nativeSrc": "11448:117:19",
															"nodeType": "YulBlock",
															"src": "11448:117:19",
															"statements": [
																{
																	"nativeSrc": "11463:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11463:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11477:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11477:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11467:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11467:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11492:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11492:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11527:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11527:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11538:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11538:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11523:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11523:3:19"
																				},
																				"nativeSrc": "11523:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11523:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11547:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11547:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11502:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11502:20:19"
																		},
																		"nativeSrc": "11502:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11502:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11492:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11492:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11575:118:19",
															"nodeType": "YulBlock",
															"src": "11575:118:19",
															"statements": [
																{
																	"nativeSrc": "11590:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11590:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11604:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11604:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11594:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11594:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11620:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11620:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11655:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11655:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11666:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11666:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11651:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11651:3:19"
																				},
																				"nativeSrc": "11651:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11651:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11675:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11675:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11630:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11630:20:19"
																		},
																		"nativeSrc": "11630:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11630:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11620:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11620:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11703:118:19",
															"nodeType": "YulBlock",
															"src": "11703:118:19",
															"statements": [
																{
																	"nativeSrc": "11718:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11718:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11732:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11732:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11722:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11722:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11748:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11748:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11783:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11783:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11794:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11794:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11779:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11779:3:19"
																				},
																				"nativeSrc": "11779:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11779:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11803:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11803:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11758:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11758:20:19"
																		},
																		"nativeSrc": "11758:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11758:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11748:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11748:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11831:287:19",
															"nodeType": "YulBlock",
															"src": "11831:287:19",
															"statements": [
																{
																	"nativeSrc": "11846:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11846:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11877:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11877:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11888:2:19",
																						"nodeType": "YulLiteral",
																						"src": "11888:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11873:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11873:3:19"
																				},
																				"nativeSrc": "11873:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11873:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11860:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "11860:12:19"
																		},
																		"nativeSrc": "11860:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11860:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11850:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11850:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11939:83:19",
																		"nodeType": "YulBlock",
																		"src": "11939:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11941:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "11941:77:19"
																					},
																					"nativeSrc": "11941:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "11941:79:19"
																				},
																				"nativeSrc": "11941:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "11941:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11911:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11911:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11919:18:19",
																				"nodeType": "YulLiteral",
																				"src": "11919:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11908:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "11908:2:19"
																		},
																		"nativeSrc": "11908:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11908:30:19"
																	},
																	"nativeSrc": "11905:117:19",
																	"nodeType": "YulIf",
																	"src": "11905:117:19"
																},
																{
																	"nativeSrc": "12036:72:19",
																	"nodeType": "YulAssignment",
																	"src": "12036:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12080:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12080:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12091:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12091:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12076:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12076:3:19"
																				},
																				"nativeSrc": "12076:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12076:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12100:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12100:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12046:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "12046:29:19"
																		},
																		"nativeSrc": "12046:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12046:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12036:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12036:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11182:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11254:9:19",
														"nodeType": "YulTypedName",
														"src": "11254:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11265:7:19",
														"nodeType": "YulTypedName",
														"src": "11265:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11277:6:19",
														"nodeType": "YulTypedName",
														"src": "11277:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11285:6:19",
														"nodeType": "YulTypedName",
														"src": "11285:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11293:6:19",
														"nodeType": "YulTypedName",
														"src": "11293:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11301:6:19",
														"nodeType": "YulTypedName",
														"src": "11301:6:19",
														"type": ""
													}
												],
												"src": "11182:943:19"
											},
											{
												"body": {
													"nativeSrc": "12214:391:19",
													"nodeType": "YulBlock",
													"src": "12214:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12260:83:19",
																"nodeType": "YulBlock",
																"src": "12260:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12262:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12262:77:19"
																			},
																			"nativeSrc": "12262:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12262:79:19"
																		},
																		"nativeSrc": "12262:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12262:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12235:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12235:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12244:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12244:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12231:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12231:3:19"
																		},
																		"nativeSrc": "12231:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12231:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12256:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12256:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12227:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12227:3:19"
																},
																"nativeSrc": "12227:32:19",
																"nodeType": "YulFunctionCall",
																"src": "12227:32:19"
															},
															"nativeSrc": "12224:119:19",
															"nodeType": "YulIf",
															"src": "12224:119:19"
														},
														{
															"nativeSrc": "12353:117:19",
															"nodeType": "YulBlock",
															"src": "12353:117:19",
															"statements": [
																{
																	"nativeSrc": "12368:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12368:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12382:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12382:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12372:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12372:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12397:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12397:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12432:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12432:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12443:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12443:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12428:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12428:3:19"
																				},
																				"nativeSrc": "12428:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12428:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12452:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12452:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12407:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12407:20:19"
																		},
																		"nativeSrc": "12407:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12407:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12397:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12397:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12480:118:19",
															"nodeType": "YulBlock",
															"src": "12480:118:19",
															"statements": [
																{
																	"nativeSrc": "12495:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12495:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12509:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12509:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12499:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12499:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12525:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12525:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12560:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12560:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12571:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12571:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12556:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12556:3:19"
																				},
																				"nativeSrc": "12556:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12556:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12580:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12580:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12535:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12535:20:19"
																		},
																		"nativeSrc": "12535:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12535:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12525:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12525:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12131:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12176:9:19",
														"nodeType": "YulTypedName",
														"src": "12176:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12187:7:19",
														"nodeType": "YulTypedName",
														"src": "12187:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12199:6:19",
														"nodeType": "YulTypedName",
														"src": "12199:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12207:6:19",
														"nodeType": "YulTypedName",
														"src": "12207:6:19",
														"type": ""
													}
												],
												"src": "12131:474:19"
											},
											{
												"body": {
													"nativeSrc": "12639:152:19",
													"nodeType": "YulBlock",
													"src": "12639:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12656:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12656:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12659:77:19",
																		"nodeType": "YulLiteral",
																		"src": "12659:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12649:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:19"
																},
																"nativeSrc": "12649:88:19",
																"nodeType": "YulFunctionCall",
																"src": "12649:88:19"
															},
															"nativeSrc": "12649:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "12649:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12753:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12753:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12756:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12756:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12746:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12746:6:19"
																},
																"nativeSrc": "12746:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12746:15:19"
															},
															"nativeSrc": "12746:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12746:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12777:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12777:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12780:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12780:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12770:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12770:6:19"
																},
																"nativeSrc": "12770:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12770:15:19"
															},
															"nativeSrc": "12770:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12770:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12611:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "12611:180:19"
											},
											{
												"body": {
													"nativeSrc": "12848:269:19",
													"nodeType": "YulBlock",
													"src": "12848:269:19",
													"statements": [
														{
															"nativeSrc": "12858:22:19",
															"nodeType": "YulAssignment",
															"src": "12858:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12872:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12872:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12878:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12878:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12868:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12868:3:19"
																},
																"nativeSrc": "12868:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12868:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12858:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12858:6:19"
																}
															]
														},
														{
															"nativeSrc": "12889:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12889:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12919:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12919:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12925:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12925:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12915:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12915:3:19"
																},
																"nativeSrc": "12915:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12915:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12893:18:19",
																	"nodeType": "YulTypedName",
																	"src": "12893:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12966:51:19",
																"nodeType": "YulBlock",
																"src": "12966:51:19",
																"statements": [
																	{
																		"nativeSrc": "12980:27:19",
																		"nodeType": "YulAssignment",
																		"src": "12980:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12994:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "12994:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13002:4:19",
																					"nodeType": "YulLiteral",
																					"src": "13002:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12990:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12990:3:19"
																			},
																			"nativeSrc": "12990:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12990:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12980:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12980:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12946:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "12946:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12939:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12939:6:19"
																},
																"nativeSrc": "12939:26:19",
																"nodeType": "YulFunctionCall",
																"src": "12939:26:19"
															},
															"nativeSrc": "12936:81:19",
															"nodeType": "YulIf",
															"src": "12936:81:19"
														},
														{
															"body": {
																"nativeSrc": "13069:42:19",
																"nodeType": "YulBlock",
																"src": "13069:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13083:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "13083:16:19"
																			},
																			"nativeSrc": "13083:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13083:18:19"
																		},
																		"nativeSrc": "13083:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13083:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13033:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "13033:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13056:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13056:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13064:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13064:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13053:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "13053:2:19"
																		},
																		"nativeSrc": "13053:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13053:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13030:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13030:2:19"
																},
																"nativeSrc": "13030:38:19",
																"nodeType": "YulFunctionCall",
																"src": "13030:38:19"
															},
															"nativeSrc": "13027:84:19",
															"nodeType": "YulIf",
															"src": "13027:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12797:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12832:4:19",
														"nodeType": "YulTypedName",
														"src": "12832:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12841:6:19",
														"nodeType": "YulTypedName",
														"src": "12841:6:19",
														"type": ""
													}
												],
												"src": "12797:320:19"
											},
											{
												"body": {
													"nativeSrc": "13277:288:19",
													"nodeType": "YulBlock",
													"src": "13277:288:19",
													"statements": [
														{
															"nativeSrc": "13287:26:19",
															"nodeType": "YulAssignment",
															"src": "13287:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13299:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13299:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13310:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13310:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13295:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13295:3:19"
																},
																"nativeSrc": "13295:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13295:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13287:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13287:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13367:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13367:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13380:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13391:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13391:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13376:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:19"
																		},
																		"nativeSrc": "13376:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13323:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13323:43:19"
																},
																"nativeSrc": "13323:71:19",
																"nodeType": "YulFunctionCall",
																"src": "13323:71:19"
															},
															"nativeSrc": "13323:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "13323:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13448:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13448:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13461:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13461:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13472:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13472:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13457:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13457:3:19"
																		},
																		"nativeSrc": "13457:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13457:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13404:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13404:43:19"
																},
																"nativeSrc": "13404:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13404:72:19"
															},
															"nativeSrc": "13404:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13404:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13530:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13530:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13543:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13543:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13554:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13554:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13539:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13539:3:19"
																		},
																		"nativeSrc": "13539:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13539:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13486:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13486:43:19"
																},
																"nativeSrc": "13486:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13486:72:19"
															},
															"nativeSrc": "13486:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13486:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13123:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13233:9:19",
														"nodeType": "YulTypedName",
														"src": "13233:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13245:6:19",
														"nodeType": "YulTypedName",
														"src": "13245:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13253:6:19",
														"nodeType": "YulTypedName",
														"src": "13253:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13261:6:19",
														"nodeType": "YulTypedName",
														"src": "13261:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13272:4:19",
														"nodeType": "YulTypedName",
														"src": "13272:4:19",
														"type": ""
													}
												],
												"src": "13123:442:19"
											},
											{
												"body": {
													"nativeSrc": "13677:72:19",
													"nodeType": "YulBlock",
													"src": "13677:72:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13699:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13699:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13707:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13707:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13695:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13695:3:19"
																		},
																		"nativeSrc": "13695:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13695:14:19"
																	},
																	{
																		"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
																		"kind": "string",
																		"nativeSrc": "13711:30:19",
																		"nodeType": "YulLiteral",
																		"src": "13711:30:19",
																		"type": "",
																		"value": "Price must be at least 1 wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13688:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13688:6:19"
																},
																"nativeSrc": "13688:54:19",
																"nodeType": "YulFunctionCall",
																"src": "13688:54:19"
															},
															"nativeSrc": "13688:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "13688:54:19"
														}
													]
												},
												"name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
												"nativeSrc": "13571:178:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13669:6:19",
														"nodeType": "YulTypedName",
														"src": "13669:6:19",
														"type": ""
													}
												],
												"src": "13571:178:19"
											},
											{
												"body": {
													"nativeSrc": "13901:220:19",
													"nodeType": "YulBlock",
													"src": "13901:220:19",
													"statements": [
														{
															"nativeSrc": "13911:74:19",
															"nodeType": "YulAssignment",
															"src": "13911:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13977:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13977:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13982:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13982:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13918:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "13918:58:19"
																},
																"nativeSrc": "13918:67:19",
																"nodeType": "YulFunctionCall",
																"src": "13918:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13911:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13911:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14083:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14083:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																	"nativeSrc": "13994:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "13994:88:19"
																},
																"nativeSrc": "13994:93:19",
																"nodeType": "YulFunctionCall",
																"src": "13994:93:19"
															},
															"nativeSrc": "13994:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "13994:93:19"
														},
														{
															"nativeSrc": "14096:19:19",
															"nodeType": "YulAssignment",
															"src": "14096:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14107:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14107:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14112:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14112:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14103:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14103:3:19"
																},
																"nativeSrc": "14103:12:19",
																"nodeType": "YulFunctionCall",
																"src": "14103:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14096:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14096:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13755:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13889:3:19",
														"nodeType": "YulTypedName",
														"src": "13889:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13897:3:19",
														"nodeType": "YulTypedName",
														"src": "13897:3:19",
														"type": ""
													}
												],
												"src": "13755:366:19"
											},
											{
												"body": {
													"nativeSrc": "14298:248:19",
													"nodeType": "YulBlock",
													"src": "14298:248:19",
													"statements": [
														{
															"nativeSrc": "14308:26:19",
															"nodeType": "YulAssignment",
															"src": "14308:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14320:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14320:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14331:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14331:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14316:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14316:3:19"
																},
																"nativeSrc": "14316:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14316:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14308:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14308:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14355:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14355:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14366:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14366:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14351:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:19"
																		},
																		"nativeSrc": "14351:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14351:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14374:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "14374:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14380:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14380:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14370:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14370:3:19"
																		},
																		"nativeSrc": "14370:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14370:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14344:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14344:6:19"
																},
																"nativeSrc": "14344:47:19",
																"nodeType": "YulFunctionCall",
																"src": "14344:47:19"
															},
															"nativeSrc": "14344:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "14344:47:19"
														},
														{
															"nativeSrc": "14400:139:19",
															"nodeType": "YulAssignment",
															"src": "14400:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14534:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14534:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14408:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "14408:124:19"
																},
																"nativeSrc": "14408:131:19",
																"nodeType": "YulFunctionCall",
																"src": "14408:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14400:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14400:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14127:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14278:9:19",
														"nodeType": "YulTypedName",
														"src": "14278:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14293:4:19",
														"nodeType": "YulTypedName",
														"src": "14293:4:19",
														"type": ""
													}
												],
												"src": "14127:419:19"
											},
											{
												"body": {
													"nativeSrc": "14700:282:19",
													"nodeType": "YulBlock",
													"src": "14700:282:19",
													"statements": [
														{
															"nativeSrc": "14710:26:19",
															"nodeType": "YulAssignment",
															"src": "14710:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14722:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14722:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14733:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14733:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14718:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14718:3:19"
																},
																"nativeSrc": "14718:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14718:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14710:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14710:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14790:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14790:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14803:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14814:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14814:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14799:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14799:3:19"
																		},
																		"nativeSrc": "14799:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14799:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14746:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14746:43:19"
																},
																"nativeSrc": "14746:71:19",
																"nodeType": "YulFunctionCall",
																"src": "14746:71:19"
															},
															"nativeSrc": "14746:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "14746:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14871:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14871:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14884:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14884:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14895:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14895:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14880:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:19"
																		},
																		"nativeSrc": "14880:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14880:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14827:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14827:43:19"
																},
																"nativeSrc": "14827:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14827:72:19"
															},
															"nativeSrc": "14827:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14827:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14947:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14947:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14960:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14960:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14971:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14971:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14956:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14956:3:19"
																		},
																		"nativeSrc": "14956:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14956:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "14909:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "14909:37:19"
																},
																"nativeSrc": "14909:66:19",
																"nodeType": "YulFunctionCall",
																"src": "14909:66:19"
															},
															"nativeSrc": "14909:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "14909:66:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "14552:430:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14656:9:19",
														"nodeType": "YulTypedName",
														"src": "14656:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14668:6:19",
														"nodeType": "YulTypedName",
														"src": "14668:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14676:6:19",
														"nodeType": "YulTypedName",
														"src": "14676:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14684:6:19",
														"nodeType": "YulTypedName",
														"src": "14684:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14695:4:19",
														"nodeType": "YulTypedName",
														"src": "14695:4:19",
														"type": ""
													}
												],
												"src": "14552:430:19"
											},
											{
												"body": {
													"nativeSrc": "15094:74:19",
													"nodeType": "YulBlock",
													"src": "15094:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15116:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15116:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15124:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15124:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15112:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15112:3:19"
																		},
																		"nativeSrc": "15112:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15112:14:19"
																	},
																	{
																		"hexValue": "546869732073616c6520697320616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "15128:32:19",
																		"nodeType": "YulLiteral",
																		"src": "15128:32:19",
																		"type": "",
																		"value": "This sale is already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15105:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15105:6:19"
																},
																"nativeSrc": "15105:56:19",
																"nodeType": "YulFunctionCall",
																"src": "15105:56:19"
															},
															"nativeSrc": "15105:56:19",
															"nodeType": "YulExpressionStatement",
															"src": "15105:56:19"
														}
													]
												},
												"name": "store_literal_in_memory_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a",
												"nativeSrc": "14988:180:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15086:6:19",
														"nodeType": "YulTypedName",
														"src": "15086:6:19",
														"type": ""
													}
												],
												"src": "14988:180:19"
											},
											{
												"body": {
													"nativeSrc": "15320:220:19",
													"nodeType": "YulBlock",
													"src": "15320:220:19",
													"statements": [
														{
															"nativeSrc": "15330:74:19",
															"nodeType": "YulAssignment",
															"src": "15330:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15396:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15396:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15401:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15401:2:19",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15337:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "15337:58:19"
																},
																"nativeSrc": "15337:67:19",
																"nodeType": "YulFunctionCall",
																"src": "15337:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15330:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15330:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15502:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15502:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a",
																	"nativeSrc": "15413:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "15413:88:19"
																},
																"nativeSrc": "15413:93:19",
																"nodeType": "YulFunctionCall",
																"src": "15413:93:19"
															},
															"nativeSrc": "15413:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "15413:93:19"
														},
														{
															"nativeSrc": "15515:19:19",
															"nodeType": "YulAssignment",
															"src": "15515:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15526:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15526:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15531:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15531:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15522:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15522:3:19"
																},
																"nativeSrc": "15522:12:19",
																"nodeType": "YulFunctionCall",
																"src": "15522:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15515:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15515:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15174:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15308:3:19",
														"nodeType": "YulTypedName",
														"src": "15308:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15316:3:19",
														"nodeType": "YulTypedName",
														"src": "15316:3:19",
														"type": ""
													}
												],
												"src": "15174:366:19"
											},
											{
												"body": {
													"nativeSrc": "15717:248:19",
													"nodeType": "YulBlock",
													"src": "15717:248:19",
													"statements": [
														{
															"nativeSrc": "15727:26:19",
															"nodeType": "YulAssignment",
															"src": "15727:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15739:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15739:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15750:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15750:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15735:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15735:3:19"
																},
																"nativeSrc": "15735:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15735:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15727:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15727:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15774:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15774:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15785:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15785:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15770:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15770:3:19"
																		},
																		"nativeSrc": "15770:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15770:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15793:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "15793:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15799:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15799:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15789:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15789:3:19"
																		},
																		"nativeSrc": "15789:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15789:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15763:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15763:6:19"
																},
																"nativeSrc": "15763:47:19",
																"nodeType": "YulFunctionCall",
																"src": "15763:47:19"
															},
															"nativeSrc": "15763:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "15763:47:19"
														},
														{
															"nativeSrc": "15819:139:19",
															"nodeType": "YulAssignment",
															"src": "15819:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15953:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15953:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15827:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "15827:124:19"
																},
																"nativeSrc": "15827:131:19",
																"nodeType": "YulFunctionCall",
																"src": "15827:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15819:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15819:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15546:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15697:9:19",
														"nodeType": "YulTypedName",
														"src": "15697:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15712:4:19",
														"nodeType": "YulTypedName",
														"src": "15712:4:19",
														"type": ""
													}
												],
												"src": "15546:419:19"
											},
											{
												"body": {
													"nativeSrc": "16003:28:19",
													"nodeType": "YulBlock",
													"src": "16003:28:19",
													"statements": [
														{
															"nativeSrc": "16013:12:19",
															"nodeType": "YulAssignment",
															"src": "16013:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "16020:5:19",
																"nodeType": "YulIdentifier",
																"src": "16020:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16013:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16013:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15971:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15989:5:19",
														"nodeType": "YulTypedName",
														"src": "15989:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15999:3:19",
														"nodeType": "YulTypedName",
														"src": "15999:3:19",
														"type": ""
													}
												],
												"src": "15971:60:19"
											},
											{
												"body": {
													"nativeSrc": "16097:82:19",
													"nodeType": "YulBlock",
													"src": "16097:82:19",
													"statements": [
														{
															"nativeSrc": "16107:66:19",
															"nodeType": "YulAssignment",
															"src": "16107:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16165:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "16165:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "16147:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "16147:17:19"
																				},
																				"nativeSrc": "16147:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "16147:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16138:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "16138:8:19"
																		},
																		"nativeSrc": "16138:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16138:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "16120:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "16120:17:19"
																},
																"nativeSrc": "16120:53:19",
																"nodeType": "YulFunctionCall",
																"src": "16120:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16107:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "16107:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "16037:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16077:5:19",
														"nodeType": "YulTypedName",
														"src": "16077:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16087:9:19",
														"nodeType": "YulTypedName",
														"src": "16087:9:19",
														"type": ""
													}
												],
												"src": "16037:142:19"
											},
											{
												"body": {
													"nativeSrc": "16245:66:19",
													"nodeType": "YulBlock",
													"src": "16245:66:19",
													"statements": [
														{
															"nativeSrc": "16255:50:19",
															"nodeType": "YulAssignment",
															"src": "16255:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16299:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "16299:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "16268:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "16268:30:19"
																},
																"nativeSrc": "16268:37:19",
																"nodeType": "YulFunctionCall",
																"src": "16268:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16255:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "16255:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "16185:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16225:5:19",
														"nodeType": "YulTypedName",
														"src": "16225:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16235:9:19",
														"nodeType": "YulTypedName",
														"src": "16235:9:19",
														"type": ""
													}
												],
												"src": "16185:126:19"
											},
											{
												"body": {
													"nativeSrc": "16385:66:19",
													"nodeType": "YulBlock",
													"src": "16385:66:19",
													"statements": [
														{
															"nativeSrc": "16395:50:19",
															"nodeType": "YulAssignment",
															"src": "16395:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16439:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "16439:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "16408:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "16408:30:19"
																},
																"nativeSrc": "16408:37:19",
																"nodeType": "YulFunctionCall",
																"src": "16408:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16395:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "16395:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "16317:134:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16365:5:19",
														"nodeType": "YulTypedName",
														"src": "16365:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16375:9:19",
														"nodeType": "YulTypedName",
														"src": "16375:9:19",
														"type": ""
													}
												],
												"src": "16317:134:19"
											},
											{
												"body": {
													"nativeSrc": "16530:74:19",
													"nodeType": "YulBlock",
													"src": "16530:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16547:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16547:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16591:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "16591:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "16552:38:19",
																			"nodeType": "YulIdentifier",
																			"src": "16552:38:19"
																		},
																		"nativeSrc": "16552:45:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16552:45:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16540:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16540:6:19"
																},
																"nativeSrc": "16540:58:19",
																"nodeType": "YulFunctionCall",
																"src": "16540:58:19"
															},
															"nativeSrc": "16540:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "16540:58:19"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "16457:147:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16518:5:19",
														"nodeType": "YulTypedName",
														"src": "16518:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16525:3:19",
														"nodeType": "YulTypedName",
														"src": "16525:3:19",
														"type": ""
													}
												],
												"src": "16457:147:19"
											},
											{
												"body": {
													"nativeSrc": "16772:296:19",
													"nodeType": "YulBlock",
													"src": "16772:296:19",
													"statements": [
														{
															"nativeSrc": "16782:26:19",
															"nodeType": "YulAssignment",
															"src": "16782:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16794:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16794:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16805:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16805:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16790:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16790:3:19"
																},
																"nativeSrc": "16790:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16790:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16782:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16782:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16862:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16862:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16875:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16875:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16886:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16886:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16871:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16871:3:19"
																		},
																		"nativeSrc": "16871:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16871:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16818:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16818:43:19"
																},
																"nativeSrc": "16818:71:19",
																"nodeType": "YulFunctionCall",
																"src": "16818:71:19"
															},
															"nativeSrc": "16818:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "16818:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16951:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16951:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16964:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16964:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16975:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16975:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16960:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16960:3:19"
																		},
																		"nativeSrc": "16960:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16960:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "16899:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "16899:51:19"
																},
																"nativeSrc": "16899:80:19",
																"nodeType": "YulFunctionCall",
																"src": "16899:80:19"
															},
															"nativeSrc": "16899:80:19",
															"nodeType": "YulExpressionStatement",
															"src": "16899:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17033:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17033:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17046:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17046:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17057:2:19",
																				"nodeType": "YulLiteral",
																				"src": "17057:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17042:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17042:3:19"
																		},
																		"nativeSrc": "17042:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17042:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16989:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16989:43:19"
																},
																"nativeSrc": "16989:72:19",
																"nodeType": "YulFunctionCall",
																"src": "16989:72:19"
															},
															"nativeSrc": "16989:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "16989:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16610:458:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16728:9:19",
														"nodeType": "YulTypedName",
														"src": "16728:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16740:6:19",
														"nodeType": "YulTypedName",
														"src": "16740:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16748:6:19",
														"nodeType": "YulTypedName",
														"src": "16748:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16756:6:19",
														"nodeType": "YulTypedName",
														"src": "16756:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16767:4:19",
														"nodeType": "YulTypedName",
														"src": "16767:4:19",
														"type": ""
													}
												],
												"src": "16610:458:19"
											},
											{
												"body": {
													"nativeSrc": "17134:77:19",
													"nodeType": "YulBlock",
													"src": "17134:77:19",
													"statements": [
														{
															"nativeSrc": "17144:22:19",
															"nodeType": "YulAssignment",
															"src": "17144:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17159:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17159:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17153:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17153:5:19"
																},
																"nativeSrc": "17153:13:19",
																"nodeType": "YulFunctionCall",
																"src": "17153:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17144:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17144:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17199:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "17199:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17175:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "17175:23:19"
																},
																"nativeSrc": "17175:30:19",
																"nodeType": "YulFunctionCall",
																"src": "17175:30:19"
															},
															"nativeSrc": "17175:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "17175:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "17074:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17112:6:19",
														"nodeType": "YulTypedName",
														"src": "17112:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17120:3:19",
														"nodeType": "YulTypedName",
														"src": "17120:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17128:5:19",
														"nodeType": "YulTypedName",
														"src": "17128:5:19",
														"type": ""
													}
												],
												"src": "17074:137:19"
											},
											{
												"body": {
													"nativeSrc": "17291:271:19",
													"nodeType": "YulBlock",
													"src": "17291:271:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "17337:83:19",
																"nodeType": "YulBlock",
																"src": "17337:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17339:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "17339:77:19"
																			},
																			"nativeSrc": "17339:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "17339:79:19"
																		},
																		"nativeSrc": "17339:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "17339:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17312:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17312:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17321:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17321:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17308:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17308:3:19"
																		},
																		"nativeSrc": "17308:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17308:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17333:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17333:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17304:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17304:3:19"
																},
																"nativeSrc": "17304:32:19",
																"nodeType": "YulFunctionCall",
																"src": "17304:32:19"
															},
															"nativeSrc": "17301:119:19",
															"nodeType": "YulIf",
															"src": "17301:119:19"
														},
														{
															"nativeSrc": "17430:125:19",
															"nodeType": "YulBlock",
															"src": "17430:125:19",
															"statements": [
																{
																	"nativeSrc": "17445:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17445:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17459:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17459:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17449:6:19",
																			"nodeType": "YulTypedName",
																			"src": "17449:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17474:71:19",
																	"nodeType": "YulAssignment",
																	"src": "17474:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17517:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "17517:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17528:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17528:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17513:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "17513:3:19"
																				},
																				"nativeSrc": "17513:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "17513:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17537:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17537:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "17484:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "17484:28:19"
																		},
																		"nativeSrc": "17484:61:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17484:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17474:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "17474:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "17217:345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17261:9:19",
														"nodeType": "YulTypedName",
														"src": "17261:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17272:7:19",
														"nodeType": "YulTypedName",
														"src": "17272:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17284:6:19",
														"nodeType": "YulTypedName",
														"src": "17284:6:19",
														"type": ""
													}
												],
												"src": "17217:345:19"
											},
											{
												"body": {
													"nativeSrc": "17674:70:19",
													"nodeType": "YulBlock",
													"src": "17674:70:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17696:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17696:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17704:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17704:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17692:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17692:3:19"
																		},
																		"nativeSrc": "17692:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17692:14:19"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572207061796d656e74",
																		"kind": "string",
																		"nativeSrc": "17708:28:19",
																		"nodeType": "YulLiteral",
																		"src": "17708:28:19",
																		"type": "",
																		"value": "Failed to transfer payment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17685:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17685:6:19"
																},
																"nativeSrc": "17685:52:19",
																"nodeType": "YulFunctionCall",
																"src": "17685:52:19"
															},
															"nativeSrc": "17685:52:19",
															"nodeType": "YulExpressionStatement",
															"src": "17685:52:19"
														}
													]
												},
												"name": "store_literal_in_memory_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7",
												"nativeSrc": "17568:176:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17666:6:19",
														"nodeType": "YulTypedName",
														"src": "17666:6:19",
														"type": ""
													}
												],
												"src": "17568:176:19"
											},
											{
												"body": {
													"nativeSrc": "17896:220:19",
													"nodeType": "YulBlock",
													"src": "17896:220:19",
													"statements": [
														{
															"nativeSrc": "17906:74:19",
															"nodeType": "YulAssignment",
															"src": "17906:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17972:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17972:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17977:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17977:2:19",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17913:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "17913:58:19"
																},
																"nativeSrc": "17913:67:19",
																"nodeType": "YulFunctionCall",
																"src": "17913:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17906:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17906:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18078:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18078:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7",
																	"nativeSrc": "17989:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "17989:88:19"
																},
																"nativeSrc": "17989:93:19",
																"nodeType": "YulFunctionCall",
																"src": "17989:93:19"
															},
															"nativeSrc": "17989:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "17989:93:19"
														},
														{
															"nativeSrc": "18091:19:19",
															"nodeType": "YulAssignment",
															"src": "18091:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18102:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18102:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18107:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18107:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18098:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18098:3:19"
																},
																"nativeSrc": "18098:12:19",
																"nodeType": "YulFunctionCall",
																"src": "18098:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18091:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18091:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17750:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17884:3:19",
														"nodeType": "YulTypedName",
														"src": "17884:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17892:3:19",
														"nodeType": "YulTypedName",
														"src": "17892:3:19",
														"type": ""
													}
												],
												"src": "17750:366:19"
											},
											{
												"body": {
													"nativeSrc": "18293:248:19",
													"nodeType": "YulBlock",
													"src": "18293:248:19",
													"statements": [
														{
															"nativeSrc": "18303:26:19",
															"nodeType": "YulAssignment",
															"src": "18303:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18315:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18315:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18326:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18326:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18311:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18311:3:19"
																},
																"nativeSrc": "18311:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18311:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18303:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18303:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18350:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18350:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18361:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18361:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18346:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18346:3:19"
																		},
																		"nativeSrc": "18346:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18346:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18369:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "18369:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18375:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18375:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18365:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18365:3:19"
																		},
																		"nativeSrc": "18365:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18365:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18339:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18339:6:19"
																},
																"nativeSrc": "18339:47:19",
																"nodeType": "YulFunctionCall",
																"src": "18339:47:19"
															},
															"nativeSrc": "18339:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "18339:47:19"
														},
														{
															"nativeSrc": "18395:139:19",
															"nodeType": "YulAssignment",
															"src": "18395:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18529:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "18529:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18403:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "18403:124:19"
																},
																"nativeSrc": "18403:131:19",
																"nodeType": "YulFunctionCall",
																"src": "18403:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18395:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18395:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18122:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18273:9:19",
														"nodeType": "YulTypedName",
														"src": "18273:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18288:4:19",
														"nodeType": "YulTypedName",
														"src": "18288:4:19",
														"type": ""
													}
												],
												"src": "18122:419:19"
											},
											{
												"body": {
													"nativeSrc": "18703:290:19",
													"nodeType": "YulBlock",
													"src": "18703:290:19",
													"statements": [
														{
															"nativeSrc": "18713:26:19",
															"nodeType": "YulAssignment",
															"src": "18713:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18725:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18725:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18736:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18736:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18721:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18721:3:19"
																},
																"nativeSrc": "18721:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18721:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18713:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18713:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18801:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18801:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18814:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18814:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18825:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18825:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18810:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18810:3:19"
																		},
																		"nativeSrc": "18810:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18810:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "18749:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "18749:51:19"
																},
																"nativeSrc": "18749:79:19",
																"nodeType": "YulFunctionCall",
																"src": "18749:79:19"
															},
															"nativeSrc": "18749:79:19",
															"nodeType": "YulExpressionStatement",
															"src": "18749:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18882:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18882:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18895:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18895:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18906:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18906:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18891:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18891:3:19"
																		},
																		"nativeSrc": "18891:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18891:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18838:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18838:43:19"
																},
																"nativeSrc": "18838:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18838:72:19"
															},
															"nativeSrc": "18838:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18838:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18958:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18958:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18971:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18971:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18982:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18982:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18967:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18967:3:19"
																		},
																		"nativeSrc": "18967:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18967:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "18920:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "18920:37:19"
																},
																"nativeSrc": "18920:66:19",
																"nodeType": "YulFunctionCall",
																"src": "18920:66:19"
															},
															"nativeSrc": "18920:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "18920:66:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "18547:446:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18659:9:19",
														"nodeType": "YulTypedName",
														"src": "18659:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18671:6:19",
														"nodeType": "YulTypedName",
														"src": "18671:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18679:6:19",
														"nodeType": "YulTypedName",
														"src": "18679:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18687:6:19",
														"nodeType": "YulTypedName",
														"src": "18687:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18698:4:19",
														"nodeType": "YulTypedName",
														"src": "18698:4:19",
														"type": ""
													}
												],
												"src": "18547:446:19"
											},
											{
												"body": {
													"nativeSrc": "19113:34:19",
													"nodeType": "YulBlock",
													"src": "19113:34:19",
													"statements": [
														{
															"nativeSrc": "19123:18:19",
															"nodeType": "YulAssignment",
															"src": "19123:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "19138:3:19",
																"nodeType": "YulIdentifier",
																"src": "19138:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19123:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "19123:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18999:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19085:3:19",
														"nodeType": "YulTypedName",
														"src": "19085:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19090:6:19",
														"nodeType": "YulTypedName",
														"src": "19090:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19101:11:19",
														"nodeType": "YulTypedName",
														"src": "19101:11:19",
														"type": ""
													}
												],
												"src": "18999:148:19"
											},
											{
												"body": {
													"nativeSrc": "19263:280:19",
													"nodeType": "YulBlock",
													"src": "19263:280:19",
													"statements": [
														{
															"nativeSrc": "19273:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "19273:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19320:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19320:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19287:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "19287:32:19"
																},
																"nativeSrc": "19287:39:19",
																"nodeType": "YulFunctionCall",
																"src": "19287:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19277:6:19",
																	"nodeType": "YulTypedName",
																	"src": "19277:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19335:96:19",
															"nodeType": "YulAssignment",
															"src": "19335:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19419:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19419:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19424:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19424:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19342:76:19",
																	"nodeType": "YulIdentifier",
																	"src": "19342:76:19"
																},
																"nativeSrc": "19342:89:19",
																"nodeType": "YulFunctionCall",
																"src": "19342:89:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19335:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19335:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19479:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "19479:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19486:4:19",
																				"nodeType": "YulLiteral",
																				"src": "19486:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19475:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19475:3:19"
																		},
																		"nativeSrc": "19475:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19475:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19493:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19493:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19498:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19498:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19440:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "19440:34:19"
																},
																"nativeSrc": "19440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "19440:65:19"
															},
															"nativeSrc": "19440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "19440:65:19"
														},
														{
															"nativeSrc": "19514:23:19",
															"nodeType": "YulAssignment",
															"src": "19514:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19525:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19525:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19530:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19530:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19521:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19521:3:19"
																},
																"nativeSrc": "19521:16:19",
																"nodeType": "YulFunctionCall",
																"src": "19521:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19514:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19514:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19153:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19244:5:19",
														"nodeType": "YulTypedName",
														"src": "19244:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19251:3:19",
														"nodeType": "YulTypedName",
														"src": "19251:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19259:3:19",
														"nodeType": "YulTypedName",
														"src": "19259:3:19",
														"type": ""
													}
												],
												"src": "19153:390:19"
											},
											{
												"body": {
													"nativeSrc": "19733:251:19",
													"nodeType": "YulBlock",
													"src": "19733:251:19",
													"statements": [
														{
															"nativeSrc": "19744:102:19",
															"nodeType": "YulAssignment",
															"src": "19744:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19833:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19833:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19842:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19842:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19751:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "19751:81:19"
																},
																"nativeSrc": "19751:95:19",
																"nodeType": "YulFunctionCall",
																"src": "19751:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19744:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19744:3:19"
																}
															]
														},
														{
															"nativeSrc": "19856:102:19",
															"nodeType": "YulAssignment",
															"src": "19856:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19945:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19945:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19954:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19954:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19863:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "19863:81:19"
																},
																"nativeSrc": "19863:95:19",
																"nodeType": "YulFunctionCall",
																"src": "19863:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19856:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19856:3:19"
																}
															]
														},
														{
															"nativeSrc": "19968:10:19",
															"nodeType": "YulAssignment",
															"src": "19968:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "19975:3:19",
																"nodeType": "YulIdentifier",
																"src": "19975:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19968:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19968:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19549:435:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19704:3:19",
														"nodeType": "YulTypedName",
														"src": "19704:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19710:6:19",
														"nodeType": "YulTypedName",
														"src": "19710:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19718:6:19",
														"nodeType": "YulTypedName",
														"src": "19718:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19729:3:19",
														"nodeType": "YulTypedName",
														"src": "19729:3:19",
														"type": ""
													}
												],
												"src": "19549:435:19"
											},
											{
												"body": {
													"nativeSrc": "20044:87:19",
													"nodeType": "YulBlock",
													"src": "20044:87:19",
													"statements": [
														{
															"nativeSrc": "20054:11:19",
															"nodeType": "YulAssignment",
															"src": "20054:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "20062:3:19",
																"nodeType": "YulIdentifier",
																"src": "20062:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20054:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20054:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20082:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20082:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "20085:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20085:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20075:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20075:6:19"
																},
																"nativeSrc": "20075:14:19",
																"nodeType": "YulFunctionCall",
																"src": "20075:14:19"
															},
															"nativeSrc": "20075:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "20075:14:19"
														},
														{
															"nativeSrc": "20098:26:19",
															"nodeType": "YulAssignment",
															"src": "20098:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20116:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20116:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20119:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20119:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "20106:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "20106:9:19"
																},
																"nativeSrc": "20106:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20106:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20098:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20098:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "19990:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "20031:3:19",
														"nodeType": "YulTypedName",
														"src": "20031:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "20039:4:19",
														"nodeType": "YulTypedName",
														"src": "20039:4:19",
														"type": ""
													}
												],
												"src": "19990:141:19"
											},
											{
												"body": {
													"nativeSrc": "20181:49:19",
													"nodeType": "YulBlock",
													"src": "20181:49:19",
													"statements": [
														{
															"nativeSrc": "20191:33:19",
															"nodeType": "YulAssignment",
															"src": "20191:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20209:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "20209:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20216:2:19",
																				"nodeType": "YulLiteral",
																				"src": "20216:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20205:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20205:3:19"
																		},
																		"nativeSrc": "20205:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20205:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20221:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20221:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20201:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20201:3:19"
																},
																"nativeSrc": "20201:23:19",
																"nodeType": "YulFunctionCall",
																"src": "20201:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20191:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20191:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "20137:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20164:5:19",
														"nodeType": "YulTypedName",
														"src": "20164:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20174:6:19",
														"nodeType": "YulTypedName",
														"src": "20174:6:19",
														"type": ""
													}
												],
												"src": "20137:93:19"
											},
											{
												"body": {
													"nativeSrc": "20289:54:19",
													"nodeType": "YulBlock",
													"src": "20289:54:19",
													"statements": [
														{
															"nativeSrc": "20299:37:19",
															"nodeType": "YulAssignment",
															"src": "20299:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20324:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "20324:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20330:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20330:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "20320:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20320:3:19"
																},
																"nativeSrc": "20320:16:19",
																"nodeType": "YulFunctionCall",
																"src": "20320:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20299:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "20299:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "20236:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20264:4:19",
														"nodeType": "YulTypedName",
														"src": "20264:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20270:5:19",
														"nodeType": "YulTypedName",
														"src": "20270:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20280:8:19",
														"nodeType": "YulTypedName",
														"src": "20280:8:19",
														"type": ""
													}
												],
												"src": "20236:107:19"
											},
											{
												"body": {
													"nativeSrc": "20425:317:19",
													"nodeType": "YulBlock",
													"src": "20425:317:19",
													"statements": [
														{
															"nativeSrc": "20435:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20435:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "20456:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "20456:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20468:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20468:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20452:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20452:3:19"
																},
																"nativeSrc": "20452:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20452:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "20439:9:19",
																	"nodeType": "YulTypedName",
																	"src": "20439:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20479:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20479:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20510:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20510:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20521:66:19",
																		"nodeType": "YulLiteral",
																		"src": "20521:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20491:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "20491:18:19"
																},
																"nativeSrc": "20491:97:19",
																"nodeType": "YulFunctionCall",
																"src": "20491:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20483:4:19",
																	"nodeType": "YulTypedName",
																	"src": "20483:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20597:51:19",
															"nodeType": "YulAssignment",
															"src": "20597:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20628:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20628:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "20639:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "20639:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20609:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "20609:18:19"
																},
																"nativeSrc": "20609:39:19",
																"nodeType": "YulFunctionCall",
																"src": "20609:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "20597:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "20597:8:19"
																}
															]
														},
														{
															"nativeSrc": "20657:30:19",
															"nodeType": "YulAssignment",
															"src": "20657:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20670:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20670:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "20681:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "20681:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "20677:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20677:3:19"
																		},
																		"nativeSrc": "20677:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20677:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20666:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20666:3:19"
																},
																"nativeSrc": "20666:21:19",
																"nodeType": "YulFunctionCall",
																"src": "20666:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20657:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "20657:5:19"
																}
															]
														},
														{
															"nativeSrc": "20696:40:19",
															"nodeType": "YulAssignment",
															"src": "20696:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20709:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20709:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "20720:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "20720:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "20730:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "20730:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20716:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20716:3:19"
																		},
																		"nativeSrc": "20716:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20716:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20706:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "20706:2:19"
																},
																"nativeSrc": "20706:30:19",
																"nodeType": "YulFunctionCall",
																"src": "20706:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20696:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20696:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "20349:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20386:5:19",
														"nodeType": "YulTypedName",
														"src": "20386:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "20393:10:19",
														"nodeType": "YulTypedName",
														"src": "20393:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "20405:8:19",
														"nodeType": "YulTypedName",
														"src": "20405:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20418:6:19",
														"nodeType": "YulTypedName",
														"src": "20418:6:19",
														"type": ""
													}
												],
												"src": "20349:393:19"
											},
											{
												"body": {
													"nativeSrc": "20808:82:19",
													"nodeType": "YulBlock",
													"src": "20808:82:19",
													"statements": [
														{
															"nativeSrc": "20818:66:19",
															"nodeType": "YulAssignment",
															"src": "20818:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20876:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "20876:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "20858:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "20858:17:19"
																				},
																				"nativeSrc": "20858:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20858:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20849:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "20849:8:19"
																		},
																		"nativeSrc": "20849:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20849:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20831:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20831:17:19"
																},
																"nativeSrc": "20831:53:19",
																"nodeType": "YulFunctionCall",
																"src": "20831:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20818:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "20818:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "20748:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20788:5:19",
														"nodeType": "YulTypedName",
														"src": "20788:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20798:9:19",
														"nodeType": "YulTypedName",
														"src": "20798:9:19",
														"type": ""
													}
												],
												"src": "20748:142:19"
											},
											{
												"body": {
													"nativeSrc": "20943:28:19",
													"nodeType": "YulBlock",
													"src": "20943:28:19",
													"statements": [
														{
															"nativeSrc": "20953:12:19",
															"nodeType": "YulAssignment",
															"src": "20953:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "20960:5:19",
																"nodeType": "YulIdentifier",
																"src": "20960:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20953:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20953:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "20896:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20929:5:19",
														"nodeType": "YulTypedName",
														"src": "20929:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20939:3:19",
														"nodeType": "YulTypedName",
														"src": "20939:3:19",
														"type": ""
													}
												],
												"src": "20896:75:19"
											},
											{
												"body": {
													"nativeSrc": "21053:193:19",
													"nodeType": "YulBlock",
													"src": "21053:193:19",
													"statements": [
														{
															"nativeSrc": "21063:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21063:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "21118:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "21118:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "21087:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "21087:30:19"
																},
																"nativeSrc": "21087:39:19",
																"nodeType": "YulFunctionCall",
																"src": "21087:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "21067:16:19",
																	"nodeType": "YulTypedName",
																	"src": "21067:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21142:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21142:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "21182:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "21182:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "21176:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "21176:5:19"
																				},
																				"nativeSrc": "21176:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21176:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "21189:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "21189:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "21221:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "21221:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "21197:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "21197:23:19"
																				},
																				"nativeSrc": "21197:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21197:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "21148:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "21148:27:19"
																		},
																		"nativeSrc": "21148:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21148:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "21135:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21135:6:19"
																},
																"nativeSrc": "21135:105:19",
																"nodeType": "YulFunctionCall",
																"src": "21135:105:19"
															},
															"nativeSrc": "21135:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "21135:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "20977:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21030:4:19",
														"nodeType": "YulTypedName",
														"src": "21030:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21036:6:19",
														"nodeType": "YulTypedName",
														"src": "21036:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "21044:7:19",
														"nodeType": "YulTypedName",
														"src": "21044:7:19",
														"type": ""
													}
												],
												"src": "20977:269:19"
											},
											{
												"body": {
													"nativeSrc": "21301:24:19",
													"nodeType": "YulBlock",
													"src": "21301:24:19",
													"statements": [
														{
															"nativeSrc": "21311:8:19",
															"nodeType": "YulAssignment",
															"src": "21311:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "21318:1:19",
																"nodeType": "YulLiteral",
																"src": "21318:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21311:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21311:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "21252:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21297:3:19",
														"nodeType": "YulTypedName",
														"src": "21297:3:19",
														"type": ""
													}
												],
												"src": "21252:73:19"
											},
											{
												"body": {
													"nativeSrc": "21384:136:19",
													"nodeType": "YulBlock",
													"src": "21384:136:19",
													"statements": [
														{
															"nativeSrc": "21394:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21394:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "21408:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "21408:30:19"
																},
																"nativeSrc": "21408:32:19",
																"nodeType": "YulFunctionCall",
																"src": "21408:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "21398:6:19",
																	"nodeType": "YulTypedName",
																	"src": "21398:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21493:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21493:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "21499:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21499:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "21507:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21507:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "21449:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "21449:43:19"
																},
																"nativeSrc": "21449:65:19",
																"nodeType": "YulFunctionCall",
																"src": "21449:65:19"
															},
															"nativeSrc": "21449:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "21449:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "21331:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21370:4:19",
														"nodeType": "YulTypedName",
														"src": "21370:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21376:6:19",
														"nodeType": "YulTypedName",
														"src": "21376:6:19",
														"type": ""
													}
												],
												"src": "21331:189:19"
											},
											{
												"body": {
													"nativeSrc": "21576:136:19",
													"nodeType": "YulBlock",
													"src": "21576:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "21643:63:19",
																"nodeType": "YulBlock",
																"src": "21643:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21687:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "21687:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21694:1:19",
																					"nodeType": "YulLiteral",
																					"src": "21694:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "21657:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "21657:29:19"
																			},
																			"nativeSrc": "21657:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21657:39:19"
																		},
																		"nativeSrc": "21657:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "21657:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "21596:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "21596:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "21603:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21603:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "21593:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21593:2:19"
																},
																"nativeSrc": "21593:14:19",
																"nodeType": "YulFunctionCall",
																"src": "21593:14:19"
															},
															"nativeSrc": "21586:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "21608:26:19",
																"nodeType": "YulBlock",
																"src": "21608:26:19",
																"statements": [
																	{
																		"nativeSrc": "21610:22:19",
																		"nodeType": "YulAssignment",
																		"src": "21610:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21623:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "21623:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21630:1:19",
																					"nodeType": "YulLiteral",
																					"src": "21630:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21619:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "21619:3:19"
																			},
																			"nativeSrc": "21619:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21619:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "21610:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "21610:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "21590:2:19",
																"nodeType": "YulBlock",
																"src": "21590:2:19",
																"statements": []
															},
															"src": "21586:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "21526:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "21564:5:19",
														"nodeType": "YulTypedName",
														"src": "21564:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21571:3:19",
														"nodeType": "YulTypedName",
														"src": "21571:3:19",
														"type": ""
													}
												],
												"src": "21526:186:19"
											},
											{
												"body": {
													"nativeSrc": "21797:464:19",
													"nodeType": "YulBlock",
													"src": "21797:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "21823:431:19",
																"nodeType": "YulBlock",
																"src": "21823:431:19",
																"statements": [
																	{
																		"nativeSrc": "21837:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21837:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "21885:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "21885:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "21853:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "21853:31:19"
																			},
																			"nativeSrc": "21853:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21853:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "21841:8:19",
																				"nodeType": "YulTypedName",
																				"src": "21841:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "21904:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21904:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "21927:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "21927:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "21955:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "21955:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "21937:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "21937:17:19"
																					},
																					"nativeSrc": "21937:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "21937:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21923:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "21923:3:19"
																			},
																			"nativeSrc": "21923:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21923:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "21908:11:19",
																				"nodeType": "YulTypedName",
																				"src": "21908:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "22124:27:19",
																			"nodeType": "YulBlock",
																			"src": "22124:27:19",
																			"statements": [
																				{
																					"nativeSrc": "22126:23:19",
																					"nodeType": "YulAssignment",
																					"src": "22126:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "22141:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "22141:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "22126:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "22126:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "22108:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "22108:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22120:2:19",
																					"nodeType": "YulLiteral",
																					"src": "22120:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "22105:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "22105:2:19"
																			},
																			"nativeSrc": "22105:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22105:18:19"
																		},
																		"nativeSrc": "22102:49:19",
																		"nodeType": "YulIf",
																		"src": "22102:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "22193:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "22193:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "22210:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "22210:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "22238:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "22238:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "22220:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "22220:17:19"
																							},
																							"nativeSrc": "22220:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "22220:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "22206:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "22206:3:19"
																					},
																					"nativeSrc": "22206:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22206:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "22164:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "22164:28:19"
																			},
																			"nativeSrc": "22164:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22164:80:19"
																		},
																		"nativeSrc": "22164:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "22164:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "21814:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21814:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21819:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21819:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21811:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21811:2:19"
																},
																"nativeSrc": "21811:11:19",
																"nodeType": "YulFunctionCall",
																"src": "21811:11:19"
															},
															"nativeSrc": "21808:446:19",
															"nodeType": "YulIf",
															"src": "21808:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "21718:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "21773:5:19",
														"nodeType": "YulTypedName",
														"src": "21773:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21780:3:19",
														"nodeType": "YulTypedName",
														"src": "21780:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "21785:10:19",
														"nodeType": "YulTypedName",
														"src": "21785:10:19",
														"type": ""
													}
												],
												"src": "21718:543:19"
											},
											{
												"body": {
													"nativeSrc": "22330:54:19",
													"nodeType": "YulBlock",
													"src": "22330:54:19",
													"statements": [
														{
															"nativeSrc": "22340:37:19",
															"nodeType": "YulAssignment",
															"src": "22340:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22365:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22365:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22371:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22371:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "22361:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22361:3:19"
																},
																"nativeSrc": "22361:16:19",
																"nodeType": "YulFunctionCall",
																"src": "22361:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22340:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "22340:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "22267:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22305:4:19",
														"nodeType": "YulTypedName",
														"src": "22305:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22311:5:19",
														"nodeType": "YulTypedName",
														"src": "22311:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22321:8:19",
														"nodeType": "YulTypedName",
														"src": "22321:8:19",
														"type": ""
													}
												],
												"src": "22267:117:19"
											},
											{
												"body": {
													"nativeSrc": "22441:118:19",
													"nodeType": "YulBlock",
													"src": "22441:118:19",
													"statements": [
														{
															"nativeSrc": "22451:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22451:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22500:1:19",
																						"nodeType": "YulLiteral",
																						"src": "22500:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "22503:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "22503:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "22496:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "22496:3:19"
																				},
																				"nativeSrc": "22496:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22496:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22515:1:19",
																						"nodeType": "YulLiteral",
																						"src": "22515:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "22511:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "22511:3:19"
																				},
																				"nativeSrc": "22511:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22511:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "22467:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "22467:28:19"
																		},
																		"nativeSrc": "22467:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22467:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "22463:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22463:3:19"
																},
																"nativeSrc": "22463:56:19",
																"nodeType": "YulFunctionCall",
																"src": "22463:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22455:4:19",
																	"nodeType": "YulTypedName",
																	"src": "22455:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22528:25:19",
															"nodeType": "YulAssignment",
															"src": "22528:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22542:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22542:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "22548:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22548:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22538:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22538:3:19"
																},
																"nativeSrc": "22538:15:19",
																"nodeType": "YulFunctionCall",
																"src": "22538:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22528:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22528:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "22390:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22418:4:19",
														"nodeType": "YulTypedName",
														"src": "22418:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "22424:5:19",
														"nodeType": "YulTypedName",
														"src": "22424:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22434:6:19",
														"nodeType": "YulTypedName",
														"src": "22434:6:19",
														"type": ""
													}
												],
												"src": "22390:169:19"
											},
											{
												"body": {
													"nativeSrc": "22645:214:19",
													"nodeType": "YulBlock",
													"src": "22645:214:19",
													"statements": [
														{
															"nativeSrc": "22778:37:19",
															"nodeType": "YulAssignment",
															"src": "22778:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22805:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22805:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "22811:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22811:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "22786:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "22786:18:19"
																},
																"nativeSrc": "22786:29:19",
																"nodeType": "YulFunctionCall",
																"src": "22786:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22778:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22778:4:19"
																}
															]
														},
														{
															"nativeSrc": "22824:29:19",
															"nodeType": "YulAssignment",
															"src": "22824:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22835:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22835:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "22845:1:19",
																				"nodeType": "YulLiteral",
																				"src": "22845:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "22848:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "22848:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "22841:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22841:3:19"
																		},
																		"nativeSrc": "22841:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22841:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22832:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "22832:2:19"
																},
																"nativeSrc": "22832:21:19",
																"nodeType": "YulFunctionCall",
																"src": "22832:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "22824:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22824:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "22564:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22626:4:19",
														"nodeType": "YulTypedName",
														"src": "22626:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22632:3:19",
														"nodeType": "YulTypedName",
														"src": "22632:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "22640:4:19",
														"nodeType": "YulTypedName",
														"src": "22640:4:19",
														"type": ""
													}
												],
												"src": "22564:295:19"
											},
											{
												"body": {
													"nativeSrc": "22956:1303:19",
													"nodeType": "YulBlock",
													"src": "22956:1303:19",
													"statements": [
														{
															"nativeSrc": "22967:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22967:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23014:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "23014:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "22981:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "22981:32:19"
																},
																"nativeSrc": "22981:37:19",
																"nodeType": "YulFunctionCall",
																"src": "22981:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "22971:6:19",
																	"nodeType": "YulTypedName",
																	"src": "22971:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23103:22:19",
																"nodeType": "YulBlock",
																"src": "23103:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "23105:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "23105:16:19"
																			},
																			"nativeSrc": "23105:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23105:18:19"
																		},
																		"nativeSrc": "23105:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "23105:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23075:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23075:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23083:18:19",
																		"nodeType": "YulLiteral",
																		"src": "23083:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23072:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23072:2:19"
																},
																"nativeSrc": "23072:30:19",
																"nodeType": "YulFunctionCall",
																"src": "23072:30:19"
															},
															"nativeSrc": "23069:56:19",
															"nodeType": "YulIf",
															"src": "23069:56:19"
														},
														{
															"nativeSrc": "23135:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23135:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "23181:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "23181:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "23175:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "23175:5:19"
																		},
																		"nativeSrc": "23175:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23175:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23149:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "23149:25:19"
																},
																"nativeSrc": "23149:38:19",
																"nodeType": "YulFunctionCall",
																"src": "23149:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "23139:6:19",
																	"nodeType": "YulTypedName",
																	"src": "23139:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23280:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23280:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "23286:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23286:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "23294:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23294:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "23234:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "23234:45:19"
																},
																"nativeSrc": "23234:67:19",
																"nodeType": "YulFunctionCall",
																"src": "23234:67:19"
															},
															"nativeSrc": "23234:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "23234:67:19"
														},
														{
															"nativeSrc": "23311:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23311:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "23328:1:19",
																"nodeType": "YulLiteral",
																"src": "23328:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23315:9:19",
																	"nodeType": "YulTypedName",
																	"src": "23315:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23339:17:19",
															"nodeType": "YulAssignment",
															"src": "23339:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "23352:4:19",
																"nodeType": "YulLiteral",
																"src": "23352:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23339:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "23339:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "23403:611:19",
																		"nodeType": "YulBlock",
																		"src": "23403:611:19",
																		"statements": [
																			{
																				"nativeSrc": "23417:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23417:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "23436:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "23436:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "23448:4:19",
																									"nodeType": "YulLiteral",
																									"src": "23448:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "23444:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "23444:3:19"
																							},
																							"nativeSrc": "23444:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "23444:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "23432:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "23432:3:19"
																					},
																					"nativeSrc": "23432:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23432:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "23421:7:19",
																						"nodeType": "YulTypedName",
																						"src": "23421:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23468:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23468:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23514:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "23514:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23482:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "23482:31:19"
																					},
																					"nativeSrc": "23482:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23482:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "23472:6:19",
																						"nodeType": "YulTypedName",
																						"src": "23472:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23532:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23532:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23541:1:19",
																					"nodeType": "YulLiteral",
																					"src": "23541:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "23536:1:19",
																						"nodeType": "YulTypedName",
																						"src": "23536:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23600:163:19",
																					"nodeType": "YulBlock",
																					"src": "23600:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23625:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "23625:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "23643:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "23643:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "23648:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "23648:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "23639:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "23639:3:19"
																												},
																												"nativeSrc": "23639:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "23639:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "23633:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "23633:5:19"
																										},
																										"nativeSrc": "23633:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "23633:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23618:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "23618:6:19"
																								},
																								"nativeSrc": "23618:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23618:42:19"
																							},
																							"nativeSrc": "23618:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "23618:42:19"
																						},
																						{
																							"nativeSrc": "23677:24:19",
																							"nodeType": "YulAssignment",
																							"src": "23677:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23691:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "23691:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23699:1:19",
																										"nodeType": "YulLiteral",
																										"src": "23699:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23687:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "23687:3:19"
																								},
																								"nativeSrc": "23687:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23687:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "23677:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "23677:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "23718:31:19",
																							"nodeType": "YulAssignment",
																							"src": "23718:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "23735:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "23735:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23746:2:19",
																										"nodeType": "YulLiteral",
																										"src": "23746:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23731:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "23731:3:19"
																								},
																								"nativeSrc": "23731:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23731:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "23718:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "23718:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "23566:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "23566:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23569:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "23569:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23563:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "23563:2:19"
																					},
																					"nativeSrc": "23563:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23563:14:19"
																				},
																				"nativeSrc": "23555:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "23578:21:19",
																					"nodeType": "YulBlock",
																					"src": "23578:21:19",
																					"statements": [
																						{
																							"nativeSrc": "23580:17:19",
																							"nodeType": "YulAssignment",
																							"src": "23580:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "23589:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "23589:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23592:4:19",
																										"nodeType": "YulLiteral",
																										"src": "23592:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23585:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "23585:3:19"
																								},
																								"nativeSrc": "23585:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23585:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "23580:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "23580:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "23559:3:19",
																					"nodeType": "YulBlock",
																					"src": "23559:3:19",
																					"statements": []
																				},
																				"src": "23555:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "23799:156:19",
																					"nodeType": "YulBlock",
																					"src": "23799:156:19",
																					"statements": [
																						{
																							"nativeSrc": "23817:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "23817:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23844:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "23844:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23849:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "23849:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23840:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "23840:3:19"
																										},
																										"nativeSrc": "23840:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "23840:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23834:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "23834:5:19"
																								},
																								"nativeSrc": "23834:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23834:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "23821:9:19",
																									"nodeType": "YulTypedName",
																									"src": "23821:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23884:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "23884:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "23911:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "23911:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "23926:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "23926:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "23934:4:19",
																														"nodeType": "YulLiteral",
																														"src": "23934:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "23922:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "23922:3:19"
																												},
																												"nativeSrc": "23922:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "23922:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "23892:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "23892:18:19"
																										},
																										"nativeSrc": "23892:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "23892:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23877:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "23877:6:19"
																								},
																								"nativeSrc": "23877:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23877:64:19"
																							},
																							"nativeSrc": "23877:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "23877:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23782:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "23782:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "23791:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "23791:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23779:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "23779:2:19"
																					},
																					"nativeSrc": "23779:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23779:19:19"
																				},
																				"nativeSrc": "23776:179:19",
																				"nodeType": "YulIf",
																				"src": "23776:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23975:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "23975:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "23989:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "23989:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "23997:1:19",
																											"nodeType": "YulLiteral",
																											"src": "23997:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "23985:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "23985:3:19"
																									},
																									"nativeSrc": "23985:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "23985:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24001:1:19",
																									"nodeType": "YulLiteral",
																									"src": "24001:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23981:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "23981:3:19"
																							},
																							"nativeSrc": "23981:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "23981:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23968:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "23968:6:19"
																					},
																					"nativeSrc": "23968:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23968:36:19"
																				},
																				"nativeSrc": "23968:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "23968:36:19"
																			}
																		]
																	},
																	"nativeSrc": "23396:618:19",
																	"nodeType": "YulCase",
																	"src": "23396:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23401:1:19",
																		"nodeType": "YulLiteral",
																		"src": "23401:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24031:222:19",
																		"nodeType": "YulBlock",
																		"src": "24031:222:19",
																		"statements": [
																			{
																				"nativeSrc": "24045:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24045:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24058:1:19",
																					"nodeType": "YulLiteral",
																					"src": "24058:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "24049:5:19",
																						"nodeType": "YulTypedName",
																						"src": "24049:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24082:67:19",
																					"nodeType": "YulBlock",
																					"src": "24082:67:19",
																					"statements": [
																						{
																							"nativeSrc": "24100:35:19",
																							"nodeType": "YulAssignment",
																							"src": "24100:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24119:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "24119:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24124:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "24124:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24115:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "24115:3:19"
																										},
																										"nativeSrc": "24115:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "24115:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24109:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24109:5:19"
																								},
																								"nativeSrc": "24109:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24109:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24100:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24100:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "24075:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "24075:6:19"
																				},
																				"nativeSrc": "24072:77:19",
																				"nodeType": "YulIf",
																				"src": "24072:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24169:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "24169:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "24228:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24228:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "24235:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "24235:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "24175:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "24175:52:19"
																							},
																							"nativeSrc": "24175:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "24175:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24162:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "24162:6:19"
																					},
																					"nativeSrc": "24162:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24162:81:19"
																				},
																				"nativeSrc": "24162:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "24162:81:19"
																			}
																		]
																	},
																	"nativeSrc": "24023:230:19",
																	"nodeType": "YulCase",
																	"src": "24023:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23376:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23376:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23384:2:19",
																		"nodeType": "YulLiteral",
																		"src": "23384:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23373:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23373:2:19"
																},
																"nativeSrc": "23373:14:19",
																"nodeType": "YulFunctionCall",
																"src": "23373:14:19"
															},
															"nativeSrc": "23366:887:19",
															"nodeType": "YulSwitch",
															"src": "23366:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "22864:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22945:4:19",
														"nodeType": "YulTypedName",
														"src": "22945:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "22951:3:19",
														"nodeType": "YulTypedName",
														"src": "22951:3:19",
														"type": ""
													}
												],
												"src": "22864:1395:19"
											},
											{
												"body": {
													"nativeSrc": "24323:40:19",
													"nodeType": "YulBlock",
													"src": "24323:40:19",
													"statements": [
														{
															"nativeSrc": "24334:22:19",
															"nodeType": "YulAssignment",
															"src": "24334:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24350:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "24350:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24344:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "24344:5:19"
																},
																"nativeSrc": "24344:12:19",
																"nodeType": "YulFunctionCall",
																"src": "24344:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "24334:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24334:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24265:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24306:5:19",
														"nodeType": "YulTypedName",
														"src": "24306:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24316:6:19",
														"nodeType": "YulTypedName",
														"src": "24316:6:19",
														"type": ""
													}
												],
												"src": "24265:98:19"
											},
											{
												"body": {
													"nativeSrc": "24464:73:19",
													"nodeType": "YulBlock",
													"src": "24464:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24481:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24481:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24486:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24486:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24474:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24474:6:19"
																},
																"nativeSrc": "24474:19:19",
																"nodeType": "YulFunctionCall",
																"src": "24474:19:19"
															},
															"nativeSrc": "24474:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "24474:19:19"
														},
														{
															"nativeSrc": "24502:29:19",
															"nodeType": "YulAssignment",
															"src": "24502:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24521:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24521:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24526:4:19",
																		"nodeType": "YulLiteral",
																		"src": "24526:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24517:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24517:3:19"
																},
																"nativeSrc": "24517:14:19",
																"nodeType": "YulFunctionCall",
																"src": "24517:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24502:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "24502:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24369:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24436:3:19",
														"nodeType": "YulTypedName",
														"src": "24436:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24441:6:19",
														"nodeType": "YulTypedName",
														"src": "24441:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24452:11:19",
														"nodeType": "YulTypedName",
														"src": "24452:11:19",
														"type": ""
													}
												],
												"src": "24369:168:19"
											},
											{
												"body": {
													"nativeSrc": "24633:283:19",
													"nodeType": "YulBlock",
													"src": "24633:283:19",
													"statements": [
														{
															"nativeSrc": "24643:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24643:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24689:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "24689:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24657:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "24657:31:19"
																},
																"nativeSrc": "24657:38:19",
																"nodeType": "YulFunctionCall",
																"src": "24657:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24647:6:19",
																	"nodeType": "YulTypedName",
																	"src": "24647:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24704:77:19",
															"nodeType": "YulAssignment",
															"src": "24704:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24769:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24769:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24774:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24774:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24711:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "24711:57:19"
																},
																"nativeSrc": "24711:70:19",
																"nodeType": "YulFunctionCall",
																"src": "24711:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24704:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24704:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24829:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "24829:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24836:4:19",
																				"nodeType": "YulLiteral",
																				"src": "24836:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24825:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "24825:3:19"
																		},
																		"nativeSrc": "24825:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24825:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24843:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24843:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24848:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24848:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24790:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "24790:34:19"
																},
																"nativeSrc": "24790:65:19",
																"nodeType": "YulFunctionCall",
																"src": "24790:65:19"
															},
															"nativeSrc": "24790:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "24790:65:19"
														},
														{
															"nativeSrc": "24864:46:19",
															"nodeType": "YulAssignment",
															"src": "24864:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24875:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24875:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "24902:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "24902:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "24880:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "24880:21:19"
																		},
																		"nativeSrc": "24880:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24880:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24871:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24871:3:19"
																},
																"nativeSrc": "24871:39:19",
																"nodeType": "YulFunctionCall",
																"src": "24871:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24864:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24864:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24543:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24614:5:19",
														"nodeType": "YulTypedName",
														"src": "24614:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24621:3:19",
														"nodeType": "YulTypedName",
														"src": "24621:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24629:3:19",
														"nodeType": "YulTypedName",
														"src": "24629:3:19",
														"type": ""
													}
												],
												"src": "24543:373:19"
											},
											{
												"body": {
													"nativeSrc": "25122:440:19",
													"nodeType": "YulBlock",
													"src": "25122:440:19",
													"statements": [
														{
															"nativeSrc": "25132:27:19",
															"nodeType": "YulAssignment",
															"src": "25132:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25144:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "25144:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25155:3:19",
																		"nodeType": "YulLiteral",
																		"src": "25155:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25140:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25140:3:19"
																},
																"nativeSrc": "25140:19:19",
																"nodeType": "YulFunctionCall",
																"src": "25140:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25132:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25132:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25213:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25213:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25226:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25226:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25237:1:19",
																				"nodeType": "YulLiteral",
																				"src": "25237:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25222:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25222:3:19"
																		},
																		"nativeSrc": "25222:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25222:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25169:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25169:43:19"
																},
																"nativeSrc": "25169:71:19",
																"nodeType": "YulFunctionCall",
																"src": "25169:71:19"
															},
															"nativeSrc": "25169:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "25169:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25294:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25294:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25307:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25307:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25318:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25318:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25303:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25303:3:19"
																		},
																		"nativeSrc": "25303:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25303:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25250:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25250:43:19"
																},
																"nativeSrc": "25250:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25250:72:19"
															},
															"nativeSrc": "25250:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25250:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25376:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25376:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25389:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25389:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25400:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25400:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25385:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25385:3:19"
																		},
																		"nativeSrc": "25385:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25385:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25332:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25332:43:19"
																},
																"nativeSrc": "25332:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25332:72:19"
															},
															"nativeSrc": "25332:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25332:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25425:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25425:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25436:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25436:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25421:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25421:3:19"
																		},
																		"nativeSrc": "25421:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25421:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25445:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "25445:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25451:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25451:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25441:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25441:3:19"
																		},
																		"nativeSrc": "25441:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25441:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25414:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "25414:6:19"
																},
																"nativeSrc": "25414:48:19",
																"nodeType": "YulFunctionCall",
																"src": "25414:48:19"
															},
															"nativeSrc": "25414:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "25414:48:19"
														},
														{
															"nativeSrc": "25471:84:19",
															"nodeType": "YulAssignment",
															"src": "25471:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25541:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25541:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25550:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "25550:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25479:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "25479:61:19"
																},
																"nativeSrc": "25479:76:19",
																"nodeType": "YulFunctionCall",
																"src": "25479:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25471:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25471:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24922:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25070:9:19",
														"nodeType": "YulTypedName",
														"src": "25070:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25082:6:19",
														"nodeType": "YulTypedName",
														"src": "25082:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25090:6:19",
														"nodeType": "YulTypedName",
														"src": "25090:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25098:6:19",
														"nodeType": "YulTypedName",
														"src": "25098:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25106:6:19",
														"nodeType": "YulTypedName",
														"src": "25106:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25117:4:19",
														"nodeType": "YulTypedName",
														"src": "25117:4:19",
														"type": ""
													}
												],
												"src": "24922:640:19"
											},
											{
												"body": {
													"nativeSrc": "25630:79:19",
													"nodeType": "YulBlock",
													"src": "25630:79:19",
													"statements": [
														{
															"nativeSrc": "25640:22:19",
															"nodeType": "YulAssignment",
															"src": "25640:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "25655:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25655:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25649:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "25649:5:19"
																},
																"nativeSrc": "25649:13:19",
																"nodeType": "YulFunctionCall",
																"src": "25649:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25640:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "25640:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25697:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "25697:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "25671:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "25671:25:19"
																},
																"nativeSrc": "25671:32:19",
																"nodeType": "YulFunctionCall",
																"src": "25671:32:19"
															},
															"nativeSrc": "25671:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "25671:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "25568:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "25608:6:19",
														"nodeType": "YulTypedName",
														"src": "25608:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25616:3:19",
														"nodeType": "YulTypedName",
														"src": "25616:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "25624:5:19",
														"nodeType": "YulTypedName",
														"src": "25624:5:19",
														"type": ""
													}
												],
												"src": "25568:141:19"
											},
											{
												"body": {
													"nativeSrc": "25791:273:19",
													"nodeType": "YulBlock",
													"src": "25791:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "25837:83:19",
																"nodeType": "YulBlock",
																"src": "25837:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "25839:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "25839:77:19"
																			},
																			"nativeSrc": "25839:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "25839:79:19"
																		},
																		"nativeSrc": "25839:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "25839:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25812:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "25812:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25821:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25821:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25808:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25808:3:19"
																		},
																		"nativeSrc": "25808:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25808:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25833:2:19",
																		"nodeType": "YulLiteral",
																		"src": "25833:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "25804:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25804:3:19"
																},
																"nativeSrc": "25804:32:19",
																"nodeType": "YulFunctionCall",
																"src": "25804:32:19"
															},
															"nativeSrc": "25801:119:19",
															"nodeType": "YulIf",
															"src": "25801:119:19"
														},
														{
															"nativeSrc": "25930:127:19",
															"nodeType": "YulBlock",
															"src": "25930:127:19",
															"statements": [
																{
																	"nativeSrc": "25945:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25945:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25959:1:19",
																		"nodeType": "YulLiteral",
																		"src": "25959:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25949:6:19",
																			"nodeType": "YulTypedName",
																			"src": "25949:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25974:73:19",
																	"nodeType": "YulAssignment",
																	"src": "25974:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26019:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "26019:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26030:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "26030:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26015:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "26015:3:19"
																				},
																				"nativeSrc": "26015:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "26015:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26039:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "26039:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "25984:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "25984:30:19"
																		},
																		"nativeSrc": "25984:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25984:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "25974:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "25974:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "25715:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25761:9:19",
														"nodeType": "YulTypedName",
														"src": "25761:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "25772:7:19",
														"nodeType": "YulTypedName",
														"src": "25772:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "25784:6:19",
														"nodeType": "YulTypedName",
														"src": "25784:6:19",
														"type": ""
													}
												],
												"src": "25715:349:19"
											},
											{
												"body": {
													"nativeSrc": "26196:206:19",
													"nodeType": "YulBlock",
													"src": "26196:206:19",
													"statements": [
														{
															"nativeSrc": "26206:26:19",
															"nodeType": "YulAssignment",
															"src": "26206:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26218:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "26218:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26229:2:19",
																		"nodeType": "YulLiteral",
																		"src": "26229:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26214:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26214:3:19"
																},
																"nativeSrc": "26214:18:19",
																"nodeType": "YulFunctionCall",
																"src": "26214:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26206:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "26206:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26286:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "26286:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26299:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "26299:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26310:1:19",
																				"nodeType": "YulLiteral",
																				"src": "26310:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26295:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "26295:3:19"
																		},
																		"nativeSrc": "26295:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "26295:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26242:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "26242:43:19"
																},
																"nativeSrc": "26242:71:19",
																"nodeType": "YulFunctionCall",
																"src": "26242:71:19"
															},
															"nativeSrc": "26242:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "26242:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26367:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "26367:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26380:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "26380:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26391:2:19",
																				"nodeType": "YulLiteral",
																				"src": "26391:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26376:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "26376:3:19"
																		},
																		"nativeSrc": "26376:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "26376:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26323:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "26323:43:19"
																},
																"nativeSrc": "26323:72:19",
																"nodeType": "YulFunctionCall",
																"src": "26323:72:19"
															},
															"nativeSrc": "26323:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "26323:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "26070:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26160:9:19",
														"nodeType": "YulTypedName",
														"src": "26160:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26172:6:19",
														"nodeType": "YulTypedName",
														"src": "26172:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26180:6:19",
														"nodeType": "YulTypedName",
														"src": "26180:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26191:4:19",
														"nodeType": "YulTypedName",
														"src": "26191:4:19",
														"type": ""
													}
												],
												"src": "26070:332:19"
											},
											{
												"body": {
													"nativeSrc": "26436:152:19",
													"nodeType": "YulBlock",
													"src": "26436:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26453:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26453:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26456:77:19",
																		"nodeType": "YulLiteral",
																		"src": "26456:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26446:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26446:6:19"
																},
																"nativeSrc": "26446:88:19",
																"nodeType": "YulFunctionCall",
																"src": "26446:88:19"
															},
															"nativeSrc": "26446:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "26446:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26550:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26550:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26553:4:19",
																		"nodeType": "YulLiteral",
																		"src": "26553:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26543:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26543:6:19"
																},
																"nativeSrc": "26543:15:19",
																"nodeType": "YulFunctionCall",
																"src": "26543:15:19"
															},
															"nativeSrc": "26543:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "26543:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26574:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26574:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26577:4:19",
																		"nodeType": "YulLiteral",
																		"src": "26577:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "26567:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26567:6:19"
																},
																"nativeSrc": "26567:15:19",
																"nodeType": "YulFunctionCall",
																"src": "26567:15:19"
															},
															"nativeSrc": "26567:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "26567:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "26408:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "26408:180:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be at least 1 wei\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a(memPtr) {\n\n        mstore(add(memPtr, 0), \"This sale is already finalized\")\n\n    }\n\n    function abi_encode_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer payment\")\n\n    }\n\n    function abi_encode_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c80636352211e11610089578063a22cb46511610058578063a22cb46514610312578063b88d4fde1461033a578063c87b56dd14610362578063e985e9c51461039e576100f2565b80636352211e1461025457806370a082311461029057806395d89b41146102cc5780639da1b02a146102f6576100f2565b806323b872dd116100c557806323b872dd146101c05780632cb2f52e146101e8578063361c19951461021057806342842e0e1461022c576100f2565b806301ffc9a7146100f657806306fdde0314610132578063081812fc1461015c578063095ea7b314610198575b5f80fd5b348015610101575f80fd5b5061011c60048036038101906101179190611cb3565b6103da565b6040516101299190611cf8565b60405180910390f35b34801561013d575f80fd5b5061014661043a565b6040516101539190611d81565b60405180910390f35b348015610167575f80fd5b50610182600480360381019061017d9190611dd4565b6104c9565b60405161018f9190611e3e565b60405180910390f35b3480156101a3575f80fd5b506101be60048036038101906101b99190611e81565b6104e4565b005b3480156101cb575f80fd5b506101e660048036038101906101e19190611ebf565b6104fa565b005b3480156101f3575f80fd5b5061020e6004803603810190610209919061203b565b6105f9565b005b61022a60048036038101906102259190612095565b610607565b005b348015610237575f80fd5b50610252600480360381019061024d9190611ebf565b610781565b005b34801561025f575f80fd5b5061027a60048036038101906102759190611dd4565b6107a0565b6040516102879190611e3e565b60405180910390f35b34801561029b575f80fd5b506102b660048036038101906102b191906120d3565b6107b1565b6040516102c3919061210d565b60405180910390f35b3480156102d7575f80fd5b506102e0610867565b6040516102ed9190611d81565b60405180910390f35b610310600480360381019061030b9190611dd4565b6108f7565b005b34801561031d575f80fd5b5061033860048036038101906103339190612150565b610b45565b005b348015610345575f80fd5b50610360600480360381019061035b919061222c565b610b5b565b005b34801561036d575f80fd5b5061038860048036038101906103839190611dd4565b610b78565b6040516103959190611d81565b60405180910390f35b3480156103a9575f80fd5b506103c460048036038101906103bf91906122ac565b610c83565b6040516103d19190611cf8565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610433575061043282610d11565b5b9050919050565b60605f805461044890612317565b80601f016020809104026020016040519081016040528092919081815260200182805461047490612317565b80156104bf5780601f10610496576101008083540402835291602001916104bf565b820191905f5260205f20905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b5f6104d382610df2565b506104dd82610e78565b9050919050565b6104f682826104f1610eb1565b610eb8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361056a575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105619190611e3e565b60405180910390fd5b5f61057d8383610578610eb1565b610eca565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105f3578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105ea93929190612347565b60405180910390fd5b50505050565b61060382826110d5565b5050565b5f8111610649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610640906123c6565b60405180910390fd5b610653600761112f565b5f61065e6007611143565b90506040518060a001604052808281526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f151581525060095f8381526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555090505061073f33308561114f565b82817ff050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c33855f604051610774939291906123e4565b60405180910390a3505050565b61079b83838360405180602001604052805f815250610b5b565b505050565b5f6107aa82610df2565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610822575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108199190611e3e565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461087690612317565b80601f01602080910402602001604051908101604052809291908181526020018280546108a290612317565b80156108ed5780601f106108c4576101008083540402835291602001916108ed565b820191905f5260205f20905b8154815290600101906020018083116108d057829003601f168201915b5050505050905090565b5f60095f8381526020019081526020015f206003015490505f60095f8481526020019081526020015f2060010154905060095f8481526020019081526020015f206004015f9054906101000a900460ff1615610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90612463565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3360095f8781526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401610a19939291906124dc565b6020604051808303815f875af1158015610a35573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a599190612525565b610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f9061259a565b60405180910390fd5b600160095f8581526020019081526020015f206004015f6101000a81548160ff021916908315150217905550610acf30338361114f565b80837ff050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c60095f8781526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856001604051610b38939291906125b8565b60405180910390a3505050565b610b57610b50610eb1565b83836112b7565b5050565b610b668484846104fa565b610b7284848484611420565b50505050565b6060610b8382610df2565b505f60065f8481526020019081526020015f208054610ba190612317565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90612317565b8015610c185780601f10610bef57610100808354040283529160200191610c18565b820191905f5260205f20905b815481529060010190602001808311610bfb57829003601f168201915b505050505090505f610c286115d2565b90505f815103610c3c578192505050610c7e565b5f82511115610c70578082604051602001610c58929190612627565b60405160208183030381529060405292505050610c7e565b610c79846115e8565b925050505b919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ddb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610deb5750610dea8261164e565b5b9050919050565b5f80610dfd836116b7565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e6f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e66919061210d565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ec583838360016116f0565b505050565b5f80610ed5846116b7565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f1657610f158184866118af565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fa157610f555f855f806116f0565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461102057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b8060065f8481526020019081526020015f2090816110f391906127de565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051611123919061210d565b60405180910390a15050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111bf575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111b69190611e3e565b60405180910390fd5b5f6111cb83835f610eca565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361123d57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611234919061210d565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112b1578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016112a893929190612347565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361132757816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161131e9190611e3e565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114139190611cf8565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156115cc578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611463610eb1565b8685856040518563ffffffff1660e01b815260040161148594939291906128ff565b6020604051808303815f875af19250505080156114c057506040513d601f19601f820116820180604052508101906114bd919061295d565b60015b611541573d805f81146114ee576040519150601f19603f3d011682016040523d82523d5f602084013e6114f3565b606091505b505f81510361153957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115309190611e3e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115ca57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115c19190611e3e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606115f382610df2565b505f6115fd6115d2565b90505f81511161161b5760405180602001604052805f815250611646565b8061162584611972565b604051602001611636929190612627565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061172857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561185a575f61173784610df2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117a157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117b457506117b28184610c83565b155b156117f657826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117ed9190611e3e565b60405180910390fd5b811561185857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118ba838383611a3c565b61196d575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361192e57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611925919061210d565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611964929190612988565b60405180910390fd5b505050565b60605f600161198084611afc565b0190505f8167ffffffffffffffff81111561199e5761199d611f17565b5b6040519080825280601f01601f1916602001820160405280156119d05781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a31578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a2657611a256129af565b5b0494505f85036119dd575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611af357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ab45750611ab38484610c83565b5b80611af257508273ffffffffffffffffffffffffffffffffffffffff16611ada83610e78565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b58577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b4e57611b4d6129af565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b95576d04ee2d6d415b85acef81000000008381611b8b57611b8a6129af565b5b0492506020810190505b662386f26fc100008310611bc457662386f26fc100008381611bba57611bb96129af565b5b0492506010810190505b6305f5e1008310611bed576305f5e1008381611be357611be26129af565b5b0492506008810190505b6127108310611c12576127108381611c0857611c076129af565b5b0492506004810190505b60648310611c355760648381611c2b57611c2a6129af565b5b0492506002810190505b600a8310611c44576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c9281611c5e565b8114611c9c575f80fd5b50565b5f81359050611cad81611c89565b92915050565b5f60208284031215611cc857611cc7611c56565b5b5f611cd584828501611c9f565b91505092915050565b5f8115159050919050565b611cf281611cde565b82525050565b5f602082019050611d0b5f830184611ce9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d5382611d11565b611d5d8185611d1b565b9350611d6d818560208601611d2b565b611d7681611d39565b840191505092915050565b5f6020820190508181035f830152611d998184611d49565b905092915050565b5f819050919050565b611db381611da1565b8114611dbd575f80fd5b50565b5f81359050611dce81611daa565b92915050565b5f60208284031215611de957611de8611c56565b5b5f611df684828501611dc0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e2882611dff565b9050919050565b611e3881611e1e565b82525050565b5f602082019050611e515f830184611e2f565b92915050565b611e6081611e1e565b8114611e6a575f80fd5b50565b5f81359050611e7b81611e57565b92915050565b5f8060408385031215611e9757611e96611c56565b5b5f611ea485828601611e6d565b9250506020611eb585828601611dc0565b9150509250929050565b5f805f60608486031215611ed657611ed5611c56565b5b5f611ee386828701611e6d565b9350506020611ef486828701611e6d565b9250506040611f0586828701611dc0565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f4d82611d39565b810181811067ffffffffffffffff82111715611f6c57611f6b611f17565b5b80604052505050565b5f611f7e611c4d565b9050611f8a8282611f44565b919050565b5f67ffffffffffffffff821115611fa957611fa8611f17565b5b611fb282611d39565b9050602081019050919050565b828183375f83830152505050565b5f611fdf611fda84611f8f565b611f75565b905082815260208101848484011115611ffb57611ffa611f13565b5b612006848285611fbf565b509392505050565b5f82601f83011261202257612021611f0f565b5b8135612032848260208601611fcd565b91505092915050565b5f806040838503121561205157612050611c56565b5b5f61205e85828601611dc0565b925050602083013567ffffffffffffffff81111561207f5761207e611c5a565b5b61208b8582860161200e565b9150509250929050565b5f80604083850312156120ab576120aa611c56565b5b5f6120b885828601611dc0565b92505060206120c985828601611dc0565b9150509250929050565b5f602082840312156120e8576120e7611c56565b5b5f6120f584828501611e6d565b91505092915050565b61210781611da1565b82525050565b5f6020820190506121205f8301846120fe565b92915050565b61212f81611cde565b8114612139575f80fd5b50565b5f8135905061214a81612126565b92915050565b5f806040838503121561216657612165611c56565b5b5f61217385828601611e6d565b92505060206121848582860161213c565b9150509250929050565b5f67ffffffffffffffff8211156121a8576121a7611f17565b5b6121b182611d39565b9050602081019050919050565b5f6121d06121cb8461218e565b611f75565b9050828152602081018484840111156121ec576121eb611f13565b5b6121f7848285611fbf565b509392505050565b5f82601f83011261221357612212611f0f565b5b81356122238482602086016121be565b91505092915050565b5f805f806080858703121561224457612243611c56565b5b5f61225187828801611e6d565b945050602061226287828801611e6d565b935050604061227387828801611dc0565b925050606085013567ffffffffffffffff81111561229457612293611c5a565b5b6122a0878288016121ff565b91505092959194509250565b5f80604083850312156122c2576122c1611c56565b5b5f6122cf85828601611e6d565b92505060206122e085828601611e6d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061232e57607f821691505b602082108103612341576123406122ea565b5b50919050565b5f60608201905061235a5f830186611e2f565b61236760208301856120fe565b6123746040830184611e2f565b949350505050565b7f5072696365206d757374206265206174206c65617374203120776569000000005f82015250565b5f6123b0601c83611d1b565b91506123bb8261237c565b602082019050919050565b5f6020820190508181035f8301526123dd816123a4565b9050919050565b5f6060820190506123f75f830186611e2f565b61240460208301856120fe565b6124116040830184611ce9565b949350505050565b7f546869732073616c6520697320616c72656164792066696e616c697a656400005f82015250565b5f61244d601e83611d1b565b915061245882612419565b602082019050919050565b5f6020820190508181035f83015261247a81612441565b9050919050565b5f819050919050565b5f6124a461249f61249a84611dff565b612481565b611dff565b9050919050565b5f6124b58261248a565b9050919050565b5f6124c6826124ab565b9050919050565b6124d6816124bc565b82525050565b5f6060820190506124ef5f830186611e2f565b6124fc60208301856124cd565b61250960408301846120fe565b949350505050565b5f8151905061251f81612126565b92915050565b5f6020828403121561253a57612539611c56565b5b5f61254784828501612511565b91505092915050565b7f4661696c656420746f207472616e73666572207061796d656e740000000000005f82015250565b5f612584601a83611d1b565b915061258f82612550565b602082019050919050565b5f6020820190508181035f8301526125b181612578565b9050919050565b5f6060820190506125cb5f8301866124cd565b6125d860208301856120fe565b6125e56040830184611ce9565b949350505050565b5f81905092915050565b5f61260182611d11565b61260b81856125ed565b935061261b818560208601611d2b565b80840191505092915050565b5f61263282856125f7565b915061263e82846125f7565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261266b565b6126b0868361266b565b95508019841693508086168417925050509392505050565b5f6126e26126dd6126d884611da1565b612481565b611da1565b9050919050565b5f819050919050565b6126fb836126c8565b61270f612707826126e9565b848454612677565b825550505050565b5f90565b612723612717565b61272e8184846126f2565b505050565b5b81811015612751576127465f8261271b565b600181019050612734565b5050565b601f821115612796576127678161264a565b6127708461265c565b8101602085101561277f578190505b61279361278b8561265c565b830182612733565b50505b505050565b5f82821c905092915050565b5f6127b65f198460080261279b565b1980831691505092915050565b5f6127ce83836127a7565b9150826002028217905092915050565b6127e782611d11565b67ffffffffffffffff811115612800576127ff611f17565b5b61280a8254612317565b612815828285612755565b5f60209050601f831160018114612846575f8415612834578287015190505b61283e85826127c3565b8655506128a5565b601f1984166128548661264a565b5f5b8281101561287b57848901518255600182019150602085019450602081019050612856565b868310156128985784890151612894601f8916826127a7565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128d1826128ad565b6128db81856128b7565b93506128eb818560208601611d2b565b6128f481611d39565b840191505092915050565b5f6080820190506129125f830187611e2f565b61291f6020830186611e2f565b61292c60408301856120fe565b818103606083015261293e81846128c7565b905095945050505050565b5f8151905061295781611c89565b92915050565b5f6020828403121561297257612971611c56565b5b5f61297f84828501612949565b91505092915050565b5f60408201905061299b5f830185611e2f565b6129a860208301846120fe565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212205416000879852e3e00367ab6a1ac1788db4dd36dcff4692d25d1ae06ed34614164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39E JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x9DA1B02A EQ PUSH2 0x2F6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x2CB2F52E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x361C1995 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x433 JUMPI POP PUSH2 0x432 DUP3 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4D3 DUP3 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH2 0x4DD DUP3 PUSH2 0xE78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F6 DUP3 DUP3 PUSH2 0x4F1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x57D DUP4 DUP4 PUSH2 0x578 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F3 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x603 DUP3 DUP3 PUSH2 0x10D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x653 PUSH1 0x7 PUSH2 0x112F JUMP JUMPDEST PUSH0 PUSH2 0x65E PUSH1 0x7 PUSH2 0x1143 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x73F CALLER ADDRESS DUP6 PUSH2 0x114F JUMP JUMPDEST DUP3 DUP2 PUSH32 0xF050D1D203B1CFD01278E7A30D56F8A7D85CE6EC3A5F320E7FCB5F06E40E866C CALLER DUP6 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x774 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x79B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AA DUP3 PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x822 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x876 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x9 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xACF ADDRESS CALLER DUP4 PUSH2 0x114F JUMP JUMPDEST DUP1 DUP4 PUSH32 0xF050D1D203B1CFD01278E7A30D56F8A7D85CE6EC3A5F320E7FCB5F06E40E866C PUSH1 0x9 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB57 PUSH2 0xB50 PUSH2 0xEB1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB66 DUP5 DUP5 DUP5 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xB72 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1420 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB83 DUP3 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBA1 SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBCD SWAP1 PUSH2 0x2317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xC28 PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xC3C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xC7E JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xC70 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC58 SWAP3 SWAP2 SWAP1 PUSH2 0x2627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xC79 DUP5 PUSH2 0x15E8 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDDB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xDEB JUMPI POP PUSH2 0xDEA DUP3 PUSH2 0x164E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDFD DUP4 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEC5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xED5 DUP5 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF16 JUMPI PUSH2 0xF15 DUP2 DUP5 DUP7 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFA1 JUMPI PUSH2 0xF55 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1020 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x10F3 SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1123 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11CB DUP4 DUP4 PUSH0 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B1 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1413 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15CC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1463 PUSH2 0xEB1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1485 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14C0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BD SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1541 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1539 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1530 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15CA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15F3 DUP3 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH0 PUSH2 0x15FD PUSH2 0x15D2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x161B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1646 JUMP JUMPDEST DUP1 PUSH2 0x1625 DUP5 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1636 SWAP3 SWAP2 SWAP1 PUSH2 0x2627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1728 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x185A JUMPI PUSH0 PUSH2 0x1737 DUP5 PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17A1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17B4 JUMPI POP PUSH2 0x17B2 DUP2 DUP5 PUSH2 0xC83 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x17F6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17ED SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1858 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18BA DUP4 DUP4 DUP4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x196D JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1925 SWAP2 SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1964 SWAP3 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1980 DUP5 PUSH2 0x1AFC JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199E JUMPI PUSH2 0x199D PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A31 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A26 JUMPI PUSH2 0x1A25 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x19DD JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1AF3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AB4 JUMPI POP PUSH2 0x1AB3 DUP5 DUP5 PUSH2 0xC83 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1AF2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ADA DUP4 PUSH2 0xE78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B58 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B4E JUMPI PUSH2 0x1B4D PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B95 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B8B JUMPI PUSH2 0x1B8A PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BC4 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1BED JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1BE3 JUMPI PUSH2 0x1BE2 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C12 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C35 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C2B JUMPI PUSH2 0x1C2A PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C44 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C92 DUP2 PUSH2 0x1C5E JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAD DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC7 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF2 DUP2 PUSH2 0x1CDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D53 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1D5D DUP2 DUP6 PUSH2 0x1D1B JUMP JUMPDEST SWAP4 POP PUSH2 0x1D6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D76 DUP2 PUSH2 0x1D39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D99 DUP2 DUP5 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB3 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DCE DUP2 PUSH2 0x1DAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF6 DUP5 DUP3 DUP6 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 DUP3 PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E38 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E60 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E6A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E7B DUP2 PUSH2 0x1E57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH2 0x1E96 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED6 JUMPI PUSH2 0x1ED5 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EF4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F05 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F4D DUP3 PUSH2 0x1D39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7E PUSH2 0x1C4D JUMP JUMPDEST SWAP1 POP PUSH2 0x1F8A DUP3 DUP3 PUSH2 0x1F44 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FA9 JUMPI PUSH2 0x1FA8 PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB2 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF PUSH2 0x1FDA DUP5 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x1F75 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x1F13 JUMP JUMPDEST JUMPDEST PUSH2 0x2006 DUP5 DUP3 DUP6 PUSH2 0x1FBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1F0F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2032 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2051 JUMPI PUSH2 0x2050 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205E DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1C5A JUMP JUMPDEST JUMPDEST PUSH2 0x208B DUP6 DUP3 DUP7 ADD PUSH2 0x200E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E8 JUMPI PUSH2 0x20E7 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F5 DUP5 DUP3 DUP6 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2107 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2120 PUSH0 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x212F DUP2 PUSH2 0x1CDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2139 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x214A DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2166 JUMPI PUSH2 0x2165 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2173 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2184 DUP6 DUP3 DUP7 ADD PUSH2 0x213C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH2 0x21B1 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D0 PUSH2 0x21CB DUP5 PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1F75 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21EC JUMPI PUSH2 0x21EB PUSH2 0x1F13 JUMP JUMPDEST JUMPDEST PUSH2 0x21F7 DUP5 DUP3 DUP6 PUSH2 0x1FBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2213 JUMPI PUSH2 0x2212 PUSH2 0x1F0F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2223 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2244 JUMPI PUSH2 0x2243 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2251 DUP8 DUP3 DUP9 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2262 DUP8 DUP3 DUP9 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2273 DUP8 DUP3 DUP9 ADD PUSH2 0x1DC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x1C5A JUMP JUMPDEST JUMPDEST PUSH2 0x22A0 DUP8 DUP3 DUP9 ADD PUSH2 0x21FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C2 JUMPI PUSH2 0x22C1 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22CF DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E0 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x232E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2341 JUMPI PUSH2 0x2340 PUSH2 0x22EA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x235A PUSH0 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x2367 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2374 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23B0 PUSH1 0x1C DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x23BB DUP3 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23DD DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23F7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x2404 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2411 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546869732073616C6520697320616C72656164792066696E616C697A65640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x244D PUSH1 0x1E DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP3 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x247A DUP2 PUSH2 0x2441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24A4 PUSH2 0x249F PUSH2 0x249A DUP5 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24B5 DUP3 PUSH2 0x248A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24C6 DUP3 PUSH2 0x24AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24D6 DUP2 PUSH2 0x24BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24EF PUSH0 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x24FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24CD JUMP JUMPDEST PUSH2 0x2509 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x251F DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253A JUMPI PUSH2 0x2539 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2547 DUP5 DUP3 DUP6 ADD PUSH2 0x2511 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E73666572207061796D656E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2584 PUSH1 0x1A DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x258F DUP3 PUSH2 0x2550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B1 DUP2 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25CB PUSH0 DUP4 ADD DUP7 PUSH2 0x24CD JUMP JUMPDEST PUSH2 0x25D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x25E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2601 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x260B DUP2 DUP6 PUSH2 0x25ED JUMP JUMPDEST SWAP4 POP PUSH2 0x261B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2632 DUP3 DUP6 PUSH2 0x25F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x263E DUP3 DUP5 PUSH2 0x25F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26A6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x266B JUMP JUMPDEST PUSH2 0x26B0 DUP7 DUP4 PUSH2 0x266B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x26D8 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26FB DUP4 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x270F PUSH2 0x2707 DUP3 PUSH2 0x26E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2677 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2723 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x272E DUP2 DUP5 DUP5 PUSH2 0x26F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2751 JUMPI PUSH2 0x2746 PUSH0 DUP3 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2734 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2796 JUMPI PUSH2 0x2767 DUP2 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x2770 DUP5 PUSH2 0x265C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2793 PUSH2 0x278B DUP6 PUSH2 0x265C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2733 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x279B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE DUP4 DUP4 PUSH2 0x27A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E7 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2800 JUMPI PUSH2 0x27FF PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST PUSH2 0x280A DUP3 SLOAD PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x2815 DUP3 DUP3 DUP6 PUSH2 0x2755 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2846 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2834 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283E DUP6 DUP3 PUSH2 0x27C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2854 DUP7 PUSH2 0x264A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x287B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2856 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2898 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2894 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28D1 DUP3 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0x28DB DUP2 DUP6 PUSH2 0x28B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x28EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x1D39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2912 PUSH0 DUP4 ADD DUP8 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x291F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x292C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x293E DUP2 DUP5 PUSH2 0x28C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2957 DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2972 JUMPI PUSH2 0x2971 PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x297F DUP5 DUP3 DUP6 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x299B PUSH0 DUP4 ADD DUP6 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x29A8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD AND STOP ADDMOD PUSH26 0x852E3E00367AB6A1AC1788DB4DD36DCFF4692D25D1AE06ED3461 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "308:2148:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:128:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1000:531;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1539:571:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:9;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:6:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;2154:128:18:-;2243:31;2256:7;2265:8;2243:12;:31::i;:::-;2154:128;;:::o;1000:531::-;1100:1;1092:5;:9;1084:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1147:20;:8;:18;:20::i;:::-;1178:14;1195:18;:8;:16;:18::i;:::-;1178:35;;1251:138;;;;;;;;1276:6;1251:138;;;;1297:7;1251:138;;;;1327:10;1251:138;;;;;;1353:5;1251:138;;;;1373:5;1251:138;;;;;1226:14;:22;1241:6;1226:22;;;;;;;;;;;:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:45;1412:10;1432:4;1439:7;1402:9;:45::i;:::-;1489:7;1481:6;1463:60;1498:10;1510:5;1517;1463:60;;;;;;;;:::i;:::-;;;;;;;;1073:458;1000:531;;:::o;4787:132:6:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;1539:571:18:-;1601:10;1614:14;:22;1629:6;1614:22;;;;;;;;;;;:28;;;1601:41;;1653:12;1668:14;:22;1683:6;1668:22;;;;;;;;;;;:30;;;1653:45;;1718:14;:22;1733:6;1718:22;;;;;;;;;;;:27;;;;;;;;;;;;1717:28;1709:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1799:12;;;;;;;;;;;:25;;;1825:10;1837:14;:22;1852:6;1837:22;;;;;;;;;;;:29;;;;;;;;;;;;1868:5;1799:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1791:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1948:4;1918:14;:22;1933:6;1918:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;1963:45;1981:4;1988:10;2000:7;1963:9;:45::i;:::-;2050:7;2042:6;2024:78;2059:14;:22;2074:6;2059:22;;;;;;;;;;;:29;;;;;;;;;;;;2090:5;2097:4;2024:78;;;;;;;;:::i;:::-;;;;;;;;1590:520;;1539:571;:::o;3718:144:6:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;3928:153:6:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14418:120:6:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1922:167:9:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;945:123:12:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;12013:460:6:-;12112:1;12098:16;;:2;:16;;;12094:87;;12167:1;12137:33;;;;;;;;;;;:::i;:::-;;;;;;;;12094:87;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;;12285:1;12260:27;;:13;:27;;;12256:211;;12333:7;12310:31;;;;;;;;;;;:::i;:::-;;;;;;;;12256:211;12379:4;12362:21;;:13;:21;;;12358:109;;12427:4;12433:7;12442:13;12406:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12358:109;12084:389;12013:460;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:14:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:6:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:13:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:6:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:16:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:117;5640:1;5637;5630:12;5654:180;5702:77;5699:1;5692:88;5799:4;5796:1;5789:15;5823:4;5820:1;5813:15;5840:281;5923:27;5945:4;5923:27;:::i;:::-;5915:6;5911:40;6053:6;6041:10;6038:22;6017:18;6005:10;6002:34;5999:62;5996:88;;;6064:18;;:::i;:::-;5996:88;6104:10;6100:2;6093:22;5883:238;5840:281;;:::o;6127:129::-;6161:6;6188:20;;:::i;:::-;6178:30;;6217:33;6245:4;6237:6;6217:33;:::i;:::-;6127:129;;;:::o;6262:308::-;6324:4;6414:18;6406:6;6403:30;6400:56;;;6436:18;;:::i;:::-;6400:56;6474:29;6496:6;6474:29;:::i;:::-;6466:37;;6558:4;6552;6548:15;6540:23;;6262:308;;;:::o;6576:148::-;6674:6;6669:3;6664;6651:30;6715:1;6706:6;6701:3;6697:16;6690:27;6576:148;;;:::o;6730:425::-;6808:5;6833:66;6849:49;6891:6;6849:49;:::i;:::-;6833:66;:::i;:::-;6824:75;;6922:6;6915:5;6908:21;6960:4;6953:5;6949:16;6998:3;6989:6;6984:3;6980:16;6977:25;6974:112;;;7005:79;;:::i;:::-;6974:112;7095:54;7142:6;7137:3;7132;7095:54;:::i;:::-;6814:341;6730:425;;;;;:::o;7175:340::-;7231:5;7280:3;7273:4;7265:6;7261:17;7257:27;7247:122;;7288:79;;:::i;:::-;7247:122;7405:6;7392:20;7430:79;7505:3;7497:6;7490:4;7482:6;7478:17;7430:79;:::i;:::-;7421:88;;7237:278;7175:340;;;;:::o;7521:654::-;7599:6;7607;7656:2;7644:9;7635:7;7631:23;7627:32;7624:119;;;7662:79;;:::i;:::-;7624:119;7782:1;7807:53;7852:7;7843:6;7832:9;7828:22;7807:53;:::i;:::-;7797:63;;7753:117;7937:2;7926:9;7922:18;7909:32;7968:18;7960:6;7957:30;7954:117;;;7990:79;;:::i;:::-;7954:117;8095:63;8150:7;8141:6;8130:9;8126:22;8095:63;:::i;:::-;8085:73;;7880:288;7521:654;;;;;:::o;8181:474::-;8249:6;8257;8306:2;8294:9;8285:7;8281:23;8277:32;8274:119;;;8312:79;;:::i;:::-;8274:119;8432:1;8457:53;8502:7;8493:6;8482:9;8478:22;8457:53;:::i;:::-;8447:63;;8403:117;8559:2;8585:53;8630:7;8621:6;8610:9;8606:22;8585:53;:::i;:::-;8575:63;;8530:118;8181:474;;;;;:::o;8661:329::-;8720:6;8769:2;8757:9;8748:7;8744:23;8740:32;8737:119;;;8775:79;;:::i;:::-;8737:119;8895:1;8920:53;8965:7;8956:6;8945:9;8941:22;8920:53;:::i;:::-;8910:63;;8866:117;8661:329;;;;:::o;8996:118::-;9083:24;9101:5;9083:24;:::i;:::-;9078:3;9071:37;8996:118;;:::o;9120:222::-;9213:4;9251:2;9240:9;9236:18;9228:26;;9264:71;9332:1;9321:9;9317:17;9308:6;9264:71;:::i;:::-;9120:222;;;;:::o;9348:116::-;9418:21;9433:5;9418:21;:::i;:::-;9411:5;9408:32;9398:60;;9454:1;9451;9444:12;9398:60;9348:116;:::o;9470:133::-;9513:5;9551:6;9538:20;9529:29;;9567:30;9591:5;9567:30;:::i;:::-;9470:133;;;;:::o;9609:468::-;9674:6;9682;9731:2;9719:9;9710:7;9706:23;9702:32;9699:119;;;9737:79;;:::i;:::-;9699:119;9857:1;9882:53;9927:7;9918:6;9907:9;9903:22;9882:53;:::i;:::-;9872:63;;9828:117;9984:2;10010:50;10052:7;10043:6;10032:9;10028:22;10010:50;:::i;:::-;10000:60;;9955:115;9609:468;;;;;:::o;10083:307::-;10144:4;10234:18;10226:6;10223:30;10220:56;;;10256:18;;:::i;:::-;10220:56;10294:29;10316:6;10294:29;:::i;:::-;10286:37;;10378:4;10372;10368:15;10360:23;;10083:307;;;:::o;10396:423::-;10473:5;10498:65;10514:48;10555:6;10514:48;:::i;:::-;10498:65;:::i;:::-;10489:74;;10586:6;10579:5;10572:21;10624:4;10617:5;10613:16;10662:3;10653:6;10648:3;10644:16;10641:25;10638:112;;;10669:79;;:::i;:::-;10638:112;10759:54;10806:6;10801:3;10796;10759:54;:::i;:::-;10479:340;10396:423;;;;;:::o;10838:338::-;10893:5;10942:3;10935:4;10927:6;10923:17;10919:27;10909:122;;10950:79;;:::i;:::-;10909:122;11067:6;11054:20;11092:78;11166:3;11158:6;11151:4;11143:6;11139:17;11092:78;:::i;:::-;11083:87;;10899:277;10838:338;;;;:::o;11182:943::-;11277:6;11285;11293;11301;11350:3;11338:9;11329:7;11325:23;11321:33;11318:120;;;11357:79;;:::i;:::-;11318:120;11477:1;11502:53;11547:7;11538:6;11527:9;11523:22;11502:53;:::i;:::-;11492:63;;11448:117;11604:2;11630:53;11675:7;11666:6;11655:9;11651:22;11630:53;:::i;:::-;11620:63;;11575:118;11732:2;11758:53;11803:7;11794:6;11783:9;11779:22;11758:53;:::i;:::-;11748:63;;11703:118;11888:2;11877:9;11873:18;11860:32;11919:18;11911:6;11908:30;11905:117;;;11941:79;;:::i;:::-;11905:117;12046:62;12100:7;12091:6;12080:9;12076:22;12046:62;:::i;:::-;12036:72;;11831:287;11182:943;;;;;;;:::o;12131:474::-;12199:6;12207;12256:2;12244:9;12235:7;12231:23;12227:32;12224:119;;;12262:79;;:::i;:::-;12224:119;12382:1;12407:53;12452:7;12443:6;12432:9;12428:22;12407:53;:::i;:::-;12397:63;;12353:117;12509:2;12535:53;12580:7;12571:6;12560:9;12556:22;12535:53;:::i;:::-;12525:63;;12480:118;12131:474;;;;;:::o;12611:180::-;12659:77;12656:1;12649:88;12756:4;12753:1;12746:15;12780:4;12777:1;12770:15;12797:320;12841:6;12878:1;12872:4;12868:12;12858:22;;12925:1;12919:4;12915:12;12946:18;12936:81;;13002:4;12994:6;12990:17;12980:27;;12936:81;13064:2;13056:6;13053:14;13033:18;13030:38;13027:84;;13083:18;;:::i;:::-;13027:84;12848:269;12797:320;;;:::o;13123:442::-;13272:4;13310:2;13299:9;13295:18;13287:26;;13323:71;13391:1;13380:9;13376:17;13367:6;13323:71;:::i;:::-;13404:72;13472:2;13461:9;13457:18;13448:6;13404:72;:::i;:::-;13486;13554:2;13543:9;13539:18;13530:6;13486:72;:::i;:::-;13123:442;;;;;;:::o;13571:178::-;13711:30;13707:1;13699:6;13695:14;13688:54;13571:178;:::o;13755:366::-;13897:3;13918:67;13982:2;13977:3;13918:67;:::i;:::-;13911:74;;13994:93;14083:3;13994:93;:::i;:::-;14112:2;14107:3;14103:12;14096:19;;13755:366;;;:::o;14127:419::-;14293:4;14331:2;14320:9;14316:18;14308:26;;14380:9;14374:4;14370:20;14366:1;14355:9;14351:17;14344:47;14408:131;14534:4;14408:131;:::i;:::-;14400:139;;14127:419;;;:::o;14552:430::-;14695:4;14733:2;14722:9;14718:18;14710:26;;14746:71;14814:1;14803:9;14799:17;14790:6;14746:71;:::i;:::-;14827:72;14895:2;14884:9;14880:18;14871:6;14827:72;:::i;:::-;14909:66;14971:2;14960:9;14956:18;14947:6;14909:66;:::i;:::-;14552:430;;;;;;:::o;14988:180::-;15128:32;15124:1;15116:6;15112:14;15105:56;14988:180;:::o;15174:366::-;15316:3;15337:67;15401:2;15396:3;15337:67;:::i;:::-;15330:74;;15413:93;15502:3;15413:93;:::i;:::-;15531:2;15526:3;15522:12;15515:19;;15174:366;;;:::o;15546:419::-;15712:4;15750:2;15739:9;15735:18;15727:26;;15799:9;15793:4;15789:20;15785:1;15774:9;15770:17;15763:47;15827:131;15953:4;15827:131;:::i;:::-;15819:139;;15546:419;;;:::o;15971:60::-;15999:3;16020:5;16013:12;;15971:60;;;:::o;16037:142::-;16087:9;16120:53;16138:34;16147:24;16165:5;16147:24;:::i;:::-;16138:34;:::i;:::-;16120:53;:::i;:::-;16107:66;;16037:142;;;:::o;16185:126::-;16235:9;16268:37;16299:5;16268:37;:::i;:::-;16255:50;;16185:126;;;:::o;16317:134::-;16375:9;16408:37;16439:5;16408:37;:::i;:::-;16395:50;;16317:134;;;:::o;16457:147::-;16552:45;16591:5;16552:45;:::i;:::-;16547:3;16540:58;16457:147;;:::o;16610:458::-;16767:4;16805:2;16794:9;16790:18;16782:26;;16818:71;16886:1;16875:9;16871:17;16862:6;16818:71;:::i;:::-;16899:80;16975:2;16964:9;16960:18;16951:6;16899:80;:::i;:::-;16989:72;17057:2;17046:9;17042:18;17033:6;16989:72;:::i;:::-;16610:458;;;;;;:::o;17074:137::-;17128:5;17159:6;17153:13;17144:22;;17175:30;17199:5;17175:30;:::i;:::-;17074:137;;;;:::o;17217:345::-;17284:6;17333:2;17321:9;17312:7;17308:23;17304:32;17301:119;;;17339:79;;:::i;:::-;17301:119;17459:1;17484:61;17537:7;17528:6;17517:9;17513:22;17484:61;:::i;:::-;17474:71;;17430:125;17217:345;;;;:::o;17568:176::-;17708:28;17704:1;17696:6;17692:14;17685:52;17568:176;:::o;17750:366::-;17892:3;17913:67;17977:2;17972:3;17913:67;:::i;:::-;17906:74;;17989:93;18078:3;17989:93;:::i;:::-;18107:2;18102:3;18098:12;18091:19;;17750:366;;;:::o;18122:419::-;18288:4;18326:2;18315:9;18311:18;18303:26;;18375:9;18369:4;18365:20;18361:1;18350:9;18346:17;18339:47;18403:131;18529:4;18403:131;:::i;:::-;18395:139;;18122:419;;;:::o;18547:446::-;18698:4;18736:2;18725:9;18721:18;18713:26;;18749:79;18825:1;18814:9;18810:17;18801:6;18749:79;:::i;:::-;18838:72;18906:2;18895:9;18891:18;18882:6;18838:72;:::i;:::-;18920:66;18982:2;18971:9;18967:18;18958:6;18920:66;:::i;:::-;18547:446;;;;;;:::o;18999:148::-;19101:11;19138:3;19123:18;;18999:148;;;;:::o;19153:390::-;19259:3;19287:39;19320:5;19287:39;:::i;:::-;19342:89;19424:6;19419:3;19342:89;:::i;:::-;19335:96;;19440:65;19498:6;19493:3;19486:4;19479:5;19475:16;19440:65;:::i;:::-;19530:6;19525:3;19521:16;19514:23;;19263:280;19153:390;;;;:::o;19549:435::-;19729:3;19751:95;19842:3;19833:6;19751:95;:::i;:::-;19744:102;;19863:95;19954:3;19945:6;19863:95;:::i;:::-;19856:102;;19975:3;19968:10;;19549:435;;;;;:::o;19990:141::-;20039:4;20062:3;20054:11;;20085:3;20082:1;20075:14;20119:4;20116:1;20106:18;20098:26;;19990:141;;;:::o;20137:93::-;20174:6;20221:2;20216;20209:5;20205:14;20201:23;20191:33;;20137:93;;;:::o;20236:107::-;20280:8;20330:5;20324:4;20320:16;20299:37;;20236:107;;;;:::o;20349:393::-;20418:6;20468:1;20456:10;20452:18;20491:97;20521:66;20510:9;20491:97;:::i;:::-;20609:39;20639:8;20628:9;20609:39;:::i;:::-;20597:51;;20681:4;20677:9;20670:5;20666:21;20657:30;;20730:4;20720:8;20716:19;20709:5;20706:30;20696:40;;20425:317;;20349:393;;;;;:::o;20748:142::-;20798:9;20831:53;20849:34;20858:24;20876:5;20858:24;:::i;:::-;20849:34;:::i;:::-;20831:53;:::i;:::-;20818:66;;20748:142;;;:::o;20896:75::-;20939:3;20960:5;20953:12;;20896:75;;;:::o;20977:269::-;21087:39;21118:7;21087:39;:::i;:::-;21148:91;21197:41;21221:16;21197:41;:::i;:::-;21189:6;21182:4;21176:11;21148:91;:::i;:::-;21142:4;21135:105;21053:193;20977:269;;;:::o;21252:73::-;21297:3;21252:73;:::o;21331:189::-;21408:32;;:::i;:::-;21449:65;21507:6;21499;21493:4;21449:65;:::i;:::-;21384:136;21331:189;;:::o;21526:186::-;21586:120;21603:3;21596:5;21593:14;21586:120;;;21657:39;21694:1;21687:5;21657:39;:::i;:::-;21630:1;21623:5;21619:13;21610:22;;21586:120;;;21526:186;;:::o;21718:543::-;21819:2;21814:3;21811:11;21808:446;;;21853:38;21885:5;21853:38;:::i;:::-;21937:29;21955:10;21937:29;:::i;:::-;21927:8;21923:44;22120:2;22108:10;22105:18;22102:49;;;22141:8;22126:23;;22102:49;22164:80;22220:22;22238:3;22220:22;:::i;:::-;22210:8;22206:37;22193:11;22164:80;:::i;:::-;21823:431;;21808:446;21718:543;;;:::o;22267:117::-;22321:8;22371:5;22365:4;22361:16;22340:37;;22267:117;;;;:::o;22390:169::-;22434:6;22467:51;22515:1;22511:6;22503:5;22500:1;22496:13;22467:51;:::i;:::-;22463:56;22548:4;22542;22538:15;22528:25;;22441:118;22390:169;;;;:::o;22564:295::-;22640:4;22786:29;22811:3;22805:4;22786:29;:::i;:::-;22778:37;;22848:3;22845:1;22841:11;22835:4;22832:21;22824:29;;22564:295;;;;:::o;22864:1395::-;22981:37;23014:3;22981:37;:::i;:::-;23083:18;23075:6;23072:30;23069:56;;;23105:18;;:::i;:::-;23069:56;23149:38;23181:4;23175:11;23149:38;:::i;:::-;23234:67;23294:6;23286;23280:4;23234:67;:::i;:::-;23328:1;23352:4;23339:17;;23384:2;23376:6;23373:14;23401:1;23396:618;;;;24058:1;24075:6;24072:77;;;24124:9;24119:3;24115:19;24109:26;24100:35;;24072:77;24175:67;24235:6;24228:5;24175:67;:::i;:::-;24169:4;24162:81;24031:222;23366:887;;23396:618;23448:4;23444:9;23436:6;23432:22;23482:37;23514:4;23482:37;:::i;:::-;23541:1;23555:208;23569:7;23566:1;23563:14;23555:208;;;23648:9;23643:3;23639:19;23633:26;23625:6;23618:42;23699:1;23691:6;23687:14;23677:24;;23746:2;23735:9;23731:18;23718:31;;23592:4;23589:1;23585:12;23580:17;;23555:208;;;23791:6;23782:7;23779:19;23776:179;;;23849:9;23844:3;23840:19;23834:26;23892:48;23934:4;23926:6;23922:17;23911:9;23892:48;:::i;:::-;23884:6;23877:64;23799:156;23776:179;24001:1;23997;23989:6;23985:14;23981:22;23975:4;23968:36;23403:611;;;23366:887;;22956:1303;;;22864:1395;;:::o;24265:98::-;24316:6;24350:5;24344:12;24334:22;;24265:98;;;:::o;24369:168::-;24452:11;24486:6;24481:3;24474:19;24526:4;24521:3;24517:14;24502:29;;24369:168;;;;:::o;24543:373::-;24629:3;24657:38;24689:5;24657:38;:::i;:::-;24711:70;24774:6;24769:3;24711:70;:::i;:::-;24704:77;;24790:65;24848:6;24843:3;24836:4;24829:5;24825:16;24790:65;:::i;:::-;24880:29;24902:6;24880:29;:::i;:::-;24875:3;24871:39;24864:46;;24633:283;24543:373;;;;:::o;24922:640::-;25117:4;25155:3;25144:9;25140:19;25132:27;;25169:71;25237:1;25226:9;25222:17;25213:6;25169:71;:::i;:::-;25250:72;25318:2;25307:9;25303:18;25294:6;25250:72;:::i;:::-;25332;25400:2;25389:9;25385:18;25376:6;25332:72;:::i;:::-;25451:9;25445:4;25441:20;25436:2;25425:9;25421:18;25414:48;25479:76;25550:4;25541:6;25479:76;:::i;:::-;25471:84;;24922:640;;;;;;;:::o;25568:141::-;25624:5;25655:6;25649:13;25640:22;;25671:32;25697:5;25671:32;:::i;:::-;25568:141;;;;:::o;25715:349::-;25784:6;25833:2;25821:9;25812:7;25808:23;25804:32;25801:119;;;25839:79;;:::i;:::-;25801:119;25959:1;25984:63;26039:7;26030:6;26019:9;26015:22;25984:63;:::i;:::-;25974:73;;25930:127;25715:349;;;;:::o;26070:332::-;26191:4;26229:2;26218:9;26214:18;26206:26;;26242:71;26310:1;26299:9;26295:17;26286:6;26242:71;:::i;:::-;26323:72;26391:2;26380:9;26376:18;26367:6;26323:72;:::i;:::-;26070:332;;;;;:::o;26408:180::-;26456:77;26453:1;26446:88;26553:4;26550:1;26543:15;26577:4;26574:1;26567:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2154000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"createMarketItem(uint256,uint256)": "infinite",
								"createSale(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"updateTokenMetadata(uint256,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 871,
									"end": 992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 871,
									"end": 992,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "4D69417274654469676974616C00000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "4D41440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 983,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 948,
									"end": 960,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 948,
									"end": 960,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 948,
									"end": 984,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 871,
									"end": 992,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 19,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "13"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "71"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 19,
									"value": "71"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "tag",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 2456,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205416000879852e3e00367ab6a1ac1788db4dd36dcff4692d25d1ae06ed34614164736f6c63430008190033",
									".code": [
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "9DA1B02A"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "2CB2F52E"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "361C1995"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 308,
											"end": 2456,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 2154,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2154,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1000,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1000,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1539,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 1539,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 2243,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 2243,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1092,
											"end": 1101,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1084,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 1084,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1147,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1147,
											"end": 1155,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 1147,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1147,
											"end": 1167,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1147,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1192,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 1195,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 1195,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1213,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1213,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1276,
											"end": 1282,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1327,
											"end": 1337,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1353,
											"end": 1358,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1389,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1240,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1248,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1389,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1412,
											"end": 1422,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 1402,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 1447,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1402,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "PUSH",
											"source": 18,
											"value": "F050D1D203B1CFD01278E7A30D56F8A7D85CE6EC3A5F320E7FCB5F06E40E866C"
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1510,
											"end": 1515,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1517,
											"end": 1522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 1463,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1523,
											"name": "LOG3",
											"source": 18
										},
										{
											"begin": 1073,
											"end": 1531,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1000,
											"end": 1531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1628,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1636,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1642,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1614,
											"end": 1642,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1614,
											"end": 1642,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1698,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1668,
											"end": 1698,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1698,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1653,
											"end": 1698,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1653,
											"end": 1698,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1717,
											"end": 1745,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 1709,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1709,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1824,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 1825,
											"end": 1835,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1851,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1858,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1868,
											"end": 1873,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 1799,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "tag",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "tag",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1799,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 1799,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1791,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1791,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1918,
											"end": 1932,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1963,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1981,
											"end": 1985,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2007,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 1963,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1963,
											"end": 2008,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1963,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "PUSH",
											"source": 18,
											"value": "F050D1D203B1CFD01278E7A30D56F8A7D85CE6EC3A5F320E7FCB5F06E40E866C"
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2097,
											"end": 2101,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 2024,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2102,
											"name": "LOG3",
											"source": 18
										},
										{
											"begin": 1590,
											"end": 2110,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1590,
											"end": 2110,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 12137,
											"end": 12170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 12214,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12260,
											"end": 12273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12333,
											"end": 12340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 12310,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12427,
											"end": 12431,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12442,
											"end": 12455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12406,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12084,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5702,
											"end": 5779,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5780,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5804,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 5923,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5911,
											"end": 5951,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6017,
											"end": 6035,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6005,
											"end": 6015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 6064,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5883,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 6217,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 6436,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "tag",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 6474,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6651,
											"end": 6681,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6717,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 6849,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 6833,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6908,
											"end": 6929,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6977,
											"end": 7002,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "tag",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 7095,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7257,
											"end": 7284,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 7430,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7237,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "tag",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7635,
											"end": 7642,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7631,
											"end": 7654,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7627,
											"end": 7659,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 7662,
											"end": 7741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 7852,
											"end": 7859,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7832,
											"end": 7841,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7828,
											"end": 7850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 7807,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7797,
											"end": 7860,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7797,
											"end": 7860,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7753,
											"end": 7870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7957,
											"end": 7987,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 7990,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "tag",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8141,
											"end": 8147,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8126,
											"end": 8148,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 8095,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8085,
											"end": 8158,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8085,
											"end": 8158,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7880,
											"end": 8168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8249,
											"end": 8255,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8294,
											"end": 8303,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8285,
											"end": 8292,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8281,
											"end": 8304,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8277,
											"end": 8309,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8274,
											"end": 8393,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8274,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 8274,
											"end": 8393,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 8312,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8274,
											"end": 8393,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 8274,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8433,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 8502,
											"end": 8509,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8493,
											"end": 8499,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8482,
											"end": 8491,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8478,
											"end": 8500,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 8457,
											"end": 8510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8447,
											"end": 8510,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8447,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8403,
											"end": 8520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8559,
											"end": 8561,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 8630,
											"end": 8637,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8621,
											"end": 8627,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8610,
											"end": 8619,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8606,
											"end": 8628,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 8585,
											"end": 8638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 8638,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 8638,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8530,
											"end": 8648,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8990,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 8661,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8720,
											"end": 8726,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8757,
											"end": 8766,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8748,
											"end": 8755,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8744,
											"end": 8767,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8740,
											"end": 8772,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8737,
											"end": 8856,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8737,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 8737,
											"end": 8856,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8775,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 8775,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 8775,
											"end": 8854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8775,
											"end": 8854,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 8775,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8737,
											"end": 8856,
											"name": "tag",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 8737,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8896,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8945,
											"end": 8954,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8941,
											"end": 8963,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8920,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 8920,
											"end": 8973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8920,
											"end": 8973,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 8920,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8910,
											"end": 8973,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8910,
											"end": 8973,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8866,
											"end": 8983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8990,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8990,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8990,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8990,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8996,
											"end": 9114,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 8996,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9083,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 9101,
											"end": 9106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9083,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 9083,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9083,
											"end": 9107,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 9083,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9078,
											"end": 9081,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9071,
											"end": 9108,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8996,
											"end": 9114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8996,
											"end": 9114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8996,
											"end": 9114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9120,
											"end": 9342,
											"name": "tag",
											"source": 19,
											"value": "74"
										},
										{
											"begin": 9120,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9213,
											"end": 9217,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9253,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9240,
											"end": 9249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9236,
											"end": 9254,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9228,
											"end": 9254,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9228,
											"end": 9254,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9264,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 9332,
											"end": 9333,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9317,
											"end": 9334,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9308,
											"end": 9314,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9264,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 9264,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9264,
											"end": 9335,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 9264,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9120,
											"end": 9342,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9120,
											"end": 9342,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9120,
											"end": 9342,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9120,
											"end": 9342,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9120,
											"end": 9342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9348,
											"end": 9464,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 9348,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 9433,
											"end": 9438,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 9418,
											"end": 9439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9408,
											"end": 9440,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9444,
											"end": 9456,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9348,
											"end": 9464,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9348,
											"end": 9464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9513,
											"end": 9518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9538,
											"end": 9558,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9558,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 9591,
											"end": 9596,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 9567,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "tag",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9688,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9728,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9702,
											"end": 9734,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 9737,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 9927,
											"end": 9934,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9907,
											"end": 9916,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9903,
											"end": 9925,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 9882,
											"end": 9935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 9935,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 9935,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9828,
											"end": 9945,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9984,
											"end": 9986,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 10052,
											"end": 10059,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10043,
											"end": 10049,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 10010,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10000,
											"end": 10060,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10000,
											"end": 10060,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9955,
											"end": 10070,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10390,
											"name": "tag",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 10083,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10144,
											"end": 10148,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10226,
											"end": 10232,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10220,
											"end": 10276,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10220,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 10220,
											"end": 10276,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 10256,
											"end": 10274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10220,
											"end": 10276,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 10220,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 10294,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10286,
											"end": 10323,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10286,
											"end": 10323,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10378,
											"end": 10382,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10372,
											"end": 10376,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10368,
											"end": 10383,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10360,
											"end": 10383,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10360,
											"end": 10383,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10390,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10473,
											"end": 10478,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 10514,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 10555,
											"end": 10561,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10514,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 10514,
											"end": 10562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10514,
											"end": 10562,
											"name": "tag",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 10514,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10498,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 10498,
											"end": 10563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10498,
											"end": 10563,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 10498,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10489,
											"end": 10563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10489,
											"end": 10563,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10586,
											"end": 10592,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10579,
											"end": 10584,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10572,
											"end": 10593,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10624,
											"end": 10628,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10617,
											"end": 10622,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10613,
											"end": 10629,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10662,
											"end": 10665,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10653,
											"end": 10659,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10648,
											"end": 10651,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10644,
											"end": 10660,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10666,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10638,
											"end": 10750,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10638,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 10638,
											"end": 10750,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10669,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 10669,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 10669,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10669,
											"end": 10748,
											"name": "tag",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 10669,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10638,
											"end": 10750,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 10638,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10801,
											"end": 10804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10796,
											"end": 10799,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 10759,
											"end": 10813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10813,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 10759,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10479,
											"end": 10819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 11176,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 10838,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10893,
											"end": 10898,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 10945,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10935,
											"end": 10939,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 10927,
											"end": 10933,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10923,
											"end": 10940,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10919,
											"end": 10946,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 10909,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 10909,
											"end": 11031,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 10950,
											"end": 11029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10909,
											"end": 11031,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 10909,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11067,
											"end": 11073,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11054,
											"end": 11074,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11092,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 11166,
											"end": 11169,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11149,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11139,
											"end": 11156,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11092,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 11092,
											"end": 11170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11092,
											"end": 11170,
											"name": "tag",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 11092,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11083,
											"end": 11170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11083,
											"end": 11170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10899,
											"end": 11176,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 11176,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 11176,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 11176,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 11176,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 11176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "tag",
											"source": 19,
											"value": "90"
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11277,
											"end": 11283,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11293,
											"end": 11299,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11301,
											"end": 11307,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 11338,
											"end": 11347,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11325,
											"end": 11348,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11321,
											"end": 11354,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11318,
											"end": 11438,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11318,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 11318,
											"end": 11438,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 11357,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 11357,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11436,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 11357,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11318,
											"end": 11438,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 11318,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11477,
											"end": 11478,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 11547,
											"end": 11554,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11538,
											"end": 11544,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11527,
											"end": 11536,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11502,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 11502,
											"end": 11555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11502,
											"end": 11555,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 11502,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11492,
											"end": 11555,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11492,
											"end": 11555,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11448,
											"end": 11565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11604,
											"end": 11606,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11630,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 11675,
											"end": 11682,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11666,
											"end": 11672,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11655,
											"end": 11664,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 11651,
											"end": 11673,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11630,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 11630,
											"end": 11683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11630,
											"end": 11683,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 11630,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11620,
											"end": 11683,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11620,
											"end": 11683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11575,
											"end": 11693,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11732,
											"end": 11734,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11758,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 11803,
											"end": 11810,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11794,
											"end": 11800,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11783,
											"end": 11792,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 11779,
											"end": 11801,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11758,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 11758,
											"end": 11811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11758,
											"end": 11811,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 11758,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11748,
											"end": 11811,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11748,
											"end": 11811,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11703,
											"end": 11821,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11888,
											"end": 11890,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11877,
											"end": 11886,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11860,
											"end": 11892,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11911,
											"end": 11917,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11908,
											"end": 11938,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11941,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 11941,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 11941,
											"end": 12020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11941,
											"end": 12020,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 11941,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12046,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 12100,
											"end": 12107,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12091,
											"end": 12097,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12080,
											"end": 12089,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12076,
											"end": 12098,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12046,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 12046,
											"end": 12108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12046,
											"end": 12108,
											"name": "tag",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 12046,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12036,
											"end": 12108,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12036,
											"end": 12108,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11831,
											"end": 12118,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11182,
											"end": 12125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12205,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12207,
											"end": 12213,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12256,
											"end": 12258,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12244,
											"end": 12253,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12235,
											"end": 12242,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12231,
											"end": 12254,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12227,
											"end": 12259,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12224,
											"end": 12343,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12224,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 12224,
											"end": 12343,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12262,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 12262,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 12262,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12262,
											"end": 12341,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 12262,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12224,
											"end": 12343,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 12224,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12382,
											"end": 12383,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12407,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 12452,
											"end": 12459,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12443,
											"end": 12449,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12432,
											"end": 12441,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12428,
											"end": 12450,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12407,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 12407,
											"end": 12460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12407,
											"end": 12460,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 12407,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12397,
											"end": 12460,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12397,
											"end": 12460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12353,
											"end": 12470,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12509,
											"end": 12511,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12535,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 12580,
											"end": 12587,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 12569,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12556,
											"end": 12578,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12535,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 12535,
											"end": 12588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12535,
											"end": 12588,
											"name": "tag",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 12535,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12525,
											"end": 12588,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12525,
											"end": 12588,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12480,
											"end": 12598,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12611,
											"end": 12791,
											"name": "tag",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 12611,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12659,
											"end": 12736,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12656,
											"end": 12657,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12649,
											"end": 12737,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12756,
											"end": 12760,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 12753,
											"end": 12754,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 12746,
											"end": 12761,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12780,
											"end": 12784,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12770,
											"end": 12785,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 12797,
											"end": 13117,
											"name": "tag",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 12797,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12841,
											"end": 12847,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12878,
											"end": 12879,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 12872,
											"end": 12876,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12868,
											"end": 12880,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 12858,
											"end": 12880,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12858,
											"end": 12880,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 12919,
											"end": 12923,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12915,
											"end": 12927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12946,
											"end": 12964,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13002,
											"end": 13006,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 12994,
											"end": 13000,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12980,
											"end": 13007,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12980,
											"end": 13007,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13064,
											"end": 13066,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13053,
											"end": 13067,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13030,
											"end": 13068,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13027,
											"end": 13111,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 13027,
											"end": 13111,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13083,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 13083,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 13083,
											"end": 13101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13083,
											"end": 13101,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 13083,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13027,
											"end": 13111,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 13027,
											"end": 13111,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12848,
											"end": 13117,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12797,
											"end": 13117,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12797,
											"end": 13117,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12797,
											"end": 13117,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12797,
											"end": 13117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "tag",
											"source": 19,
											"value": "132"
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13272,
											"end": 13276,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13312,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13299,
											"end": 13308,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13295,
											"end": 13313,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13287,
											"end": 13313,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13287,
											"end": 13313,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13323,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 13391,
											"end": 13392,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13380,
											"end": 13389,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13376,
											"end": 13393,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13367,
											"end": 13373,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13323,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 13323,
											"end": 13394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13323,
											"end": 13394,
											"name": "tag",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 13323,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 13472,
											"end": 13474,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13461,
											"end": 13470,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13457,
											"end": 13475,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13448,
											"end": 13454,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 13404,
											"end": 13476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 13554,
											"end": 13556,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13543,
											"end": 13552,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13539,
											"end": 13557,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13530,
											"end": 13536,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 13486,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13123,
											"end": 13565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13571,
											"end": 13749,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 13571,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13711,
											"end": 13741,
											"name": "PUSH",
											"source": 19,
											"value": "5072696365206D757374206265206174206C6561737420312077656900000000"
										},
										{
											"begin": 13707,
											"end": 13708,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13705,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13695,
											"end": 13709,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13688,
											"end": 13742,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13571,
											"end": 13749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13571,
											"end": 13749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13755,
											"end": 14121,
											"name": "tag",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 13755,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13897,
											"end": 13900,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13918,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 13982,
											"end": 13984,
											"name": "PUSH",
											"source": 19,
											"value": "1C"
										},
										{
											"begin": 13977,
											"end": 13980,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13918,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 13918,
											"end": 13985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13918,
											"end": 13985,
											"name": "tag",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 13918,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13911,
											"end": 13985,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13911,
											"end": 13985,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13994,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 14083,
											"end": 14086,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13994,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 13994,
											"end": 14087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13994,
											"end": 14087,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 13994,
											"end": 14087,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14112,
											"end": 14114,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14110,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14103,
											"end": 14115,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14096,
											"end": 14115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13755,
											"end": 14121,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13755,
											"end": 14121,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13755,
											"end": 14121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13755,
											"end": 14121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14127,
											"end": 14546,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 14127,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14293,
											"end": 14297,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14331,
											"end": 14333,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14320,
											"end": 14329,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14316,
											"end": 14334,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14308,
											"end": 14334,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14308,
											"end": 14334,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14380,
											"end": 14389,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14374,
											"end": 14378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14370,
											"end": 14390,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14366,
											"end": 14367,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14364,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14344,
											"end": 14391,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14408,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 14534,
											"end": 14538,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14408,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 14408,
											"end": 14539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14408,
											"end": 14539,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 14408,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14400,
											"end": 14539,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14400,
											"end": 14539,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14127,
											"end": 14546,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14127,
											"end": 14546,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14127,
											"end": 14546,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14127,
											"end": 14546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14695,
											"end": 14699,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14733,
											"end": 14735,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14722,
											"end": 14731,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14710,
											"end": 14736,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14710,
											"end": 14736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 14814,
											"end": 14815,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14799,
											"end": 14816,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14790,
											"end": 14796,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 14746,
											"end": 14817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 14895,
											"end": 14897,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14884,
											"end": 14893,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14880,
											"end": 14898,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14871,
											"end": 14877,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 14827,
											"end": 14899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14909,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 14971,
											"end": 14973,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14960,
											"end": 14969,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14947,
											"end": 14953,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14909,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 14909,
											"end": 14975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14909,
											"end": 14975,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 14909,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14988,
											"end": 15168,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 14988,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15128,
											"end": 15160,
											"name": "PUSH",
											"source": 19,
											"value": "546869732073616C6520697320616C72656164792066696E616C697A65640000"
										},
										{
											"begin": 15124,
											"end": 15125,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15116,
											"end": 15122,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15112,
											"end": 15126,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15105,
											"end": 15161,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14988,
											"end": 15168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14988,
											"end": 15168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15174,
											"end": 15540,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 15174,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15316,
											"end": 15319,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15337,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 15401,
											"end": 15403,
											"name": "PUSH",
											"source": 19,
											"value": "1E"
										},
										{
											"begin": 15396,
											"end": 15399,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15337,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 15337,
											"end": 15404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15337,
											"end": 15404,
											"name": "tag",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 15337,
											"end": 15404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15404,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15404,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15413,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 15502,
											"end": 15505,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15413,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 15413,
											"end": 15506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15413,
											"end": 15506,
											"name": "tag",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 15413,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15531,
											"end": 15533,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15529,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15522,
											"end": 15534,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15515,
											"end": 15534,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15515,
											"end": 15534,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15174,
											"end": 15540,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15174,
											"end": 15540,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15174,
											"end": 15540,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15174,
											"end": 15540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15546,
											"end": 15965,
											"name": "tag",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 15546,
											"end": 15965,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15739,
											"end": 15748,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15735,
											"end": 15753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15727,
											"end": 15753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15727,
											"end": 15753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15799,
											"end": 15808,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15793,
											"end": 15797,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15789,
											"end": 15809,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15785,
											"end": 15786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15774,
											"end": 15783,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15770,
											"end": 15787,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15763,
											"end": 15810,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15827,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 15953,
											"end": 15957,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15827,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 15827,
											"end": 15958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15827,
											"end": 15958,
											"name": "tag",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 15827,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15819,
											"end": 15958,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15819,
											"end": 15958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15546,
											"end": 15965,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15546,
											"end": 15965,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15546,
											"end": 15965,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15546,
											"end": 15965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15971,
											"end": 16031,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 15971,
											"end": 16031,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15999,
											"end": 16002,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16020,
											"end": 16025,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15971,
											"end": 16031,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15971,
											"end": 16031,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15971,
											"end": 16031,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15971,
											"end": 16031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16037,
											"end": 16179,
											"name": "tag",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 16037,
											"end": 16179,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16087,
											"end": 16096,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16120,
											"end": 16173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 16147,
											"end": 16171,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 16165,
											"end": 16170,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16171,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 16147,
											"end": 16171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16171,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 16147,
											"end": 16171,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 16138,
											"end": 16172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "tag",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16120,
											"end": 16173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 16120,
											"end": 16173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16120,
											"end": 16173,
											"name": "tag",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 16120,
											"end": 16173,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16107,
											"end": 16173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16107,
											"end": 16173,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16037,
											"end": 16179,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16037,
											"end": 16179,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16037,
											"end": 16179,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16037,
											"end": 16179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16185,
											"end": 16311,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 16185,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16235,
											"end": 16244,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16268,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 16299,
											"end": 16304,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16268,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 16268,
											"end": 16305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16268,
											"end": 16305,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 16268,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16255,
											"end": 16305,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16255,
											"end": 16305,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16185,
											"end": 16311,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16185,
											"end": 16311,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16185,
											"end": 16311,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16185,
											"end": 16311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16317,
											"end": 16451,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 16317,
											"end": 16451,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16375,
											"end": 16384,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 16439,
											"end": 16444,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 16408,
											"end": 16445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "tag",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16395,
											"end": 16445,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16395,
											"end": 16445,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16317,
											"end": 16451,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16317,
											"end": 16451,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16317,
											"end": 16451,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16317,
											"end": 16451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16457,
											"end": 16604,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 16457,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 16591,
											"end": 16596,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 16552,
											"end": 16597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "tag",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16547,
											"end": 16550,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16540,
											"end": 16598,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16457,
											"end": 16604,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16457,
											"end": 16604,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16457,
											"end": 16604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "tag",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16767,
											"end": 16771,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16805,
											"end": 16807,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 16794,
											"end": 16803,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16790,
											"end": 16808,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16782,
											"end": 16808,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16782,
											"end": 16808,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16818,
											"end": 16889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 16886,
											"end": 16887,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16875,
											"end": 16884,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16871,
											"end": 16888,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16862,
											"end": 16868,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16818,
											"end": 16889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 16818,
											"end": 16889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16818,
											"end": 16889,
											"name": "tag",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 16818,
											"end": 16889,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16899,
											"end": 16979,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 16975,
											"end": 16977,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16964,
											"end": 16973,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16951,
											"end": 16957,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16899,
											"end": 16979,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 16899,
											"end": 16979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16899,
											"end": 16979,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 16899,
											"end": 16979,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16989,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 17057,
											"end": 17059,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 17046,
											"end": 17055,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17042,
											"end": 17060,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17033,
											"end": 17039,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16989,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 16989,
											"end": 17061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16989,
											"end": 17061,
											"name": "tag",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 16989,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16610,
											"end": 17068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17074,
											"end": 17211,
											"name": "tag",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 17074,
											"end": 17211,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17128,
											"end": 17133,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17159,
											"end": 17165,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17153,
											"end": 17166,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17144,
											"end": 17166,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17144,
											"end": 17166,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17175,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 17199,
											"end": 17204,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17175,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 17175,
											"end": 17205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17175,
											"end": 17205,
											"name": "tag",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 17175,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17074,
											"end": 17211,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17074,
											"end": 17211,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17074,
											"end": 17211,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17074,
											"end": 17211,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17074,
											"end": 17211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17217,
											"end": 17562,
											"name": "tag",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 17217,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17284,
											"end": 17290,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17333,
											"end": 17335,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17321,
											"end": 17330,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17312,
											"end": 17319,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17308,
											"end": 17331,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17304,
											"end": 17336,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 17301,
											"end": 17420,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17301,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 17301,
											"end": 17420,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17339,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 17339,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 17339,
											"end": 17418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17339,
											"end": 17418,
											"name": "tag",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 17339,
											"end": 17418,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17301,
											"end": 17420,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 17301,
											"end": 17420,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17459,
											"end": 17460,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 17537,
											"end": 17544,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17528,
											"end": 17534,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17517,
											"end": 17526,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17513,
											"end": 17535,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17484,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 17484,
											"end": 17545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17484,
											"end": 17545,
											"name": "tag",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 17484,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17474,
											"end": 17545,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17474,
											"end": 17545,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17430,
											"end": 17555,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17217,
											"end": 17562,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17217,
											"end": 17562,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17217,
											"end": 17562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17217,
											"end": 17562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17217,
											"end": 17562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17568,
											"end": 17744,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 17568,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17708,
											"end": 17736,
											"name": "PUSH",
											"source": 19,
											"value": "4661696C656420746F207472616E73666572207061796D656E74000000000000"
										},
										{
											"begin": 17704,
											"end": 17705,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17696,
											"end": 17702,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17692,
											"end": 17706,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17685,
											"end": 17737,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17568,
											"end": 17744,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17568,
											"end": 17744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17750,
											"end": 18116,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 17750,
											"end": 18116,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17892,
											"end": 17895,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17913,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 17977,
											"end": 17979,
											"name": "PUSH",
											"source": 19,
											"value": "1A"
										},
										{
											"begin": 17972,
											"end": 17975,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17913,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 17913,
											"end": 17980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17913,
											"end": 17980,
											"name": "tag",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 17913,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17906,
											"end": 17980,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17906,
											"end": 17980,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 18078,
											"end": 18081,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 17989,
											"end": 18082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18082,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 17989,
											"end": 18082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18107,
											"end": 18109,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18102,
											"end": 18105,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18098,
											"end": 18110,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18091,
											"end": 18110,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18091,
											"end": 18110,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17750,
											"end": 18116,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17750,
											"end": 18116,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17750,
											"end": 18116,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17750,
											"end": 18116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18122,
											"end": 18541,
											"name": "tag",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 18122,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18288,
											"end": 18292,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18326,
											"end": 18328,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18315,
											"end": 18324,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18311,
											"end": 18329,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18303,
											"end": 18329,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18303,
											"end": 18329,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18375,
											"end": 18384,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18369,
											"end": 18373,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18365,
											"end": 18385,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18361,
											"end": 18362,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18350,
											"end": 18359,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18346,
											"end": 18363,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18339,
											"end": 18386,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18403,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 18529,
											"end": 18533,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18403,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 18403,
											"end": 18534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18403,
											"end": 18534,
											"name": "tag",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 18403,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18395,
											"end": 18534,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18395,
											"end": 18534,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18122,
											"end": 18541,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18122,
											"end": 18541,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18122,
											"end": 18541,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18122,
											"end": 18541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "tag",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18698,
											"end": 18702,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18738,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 18725,
											"end": 18734,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18713,
											"end": 18739,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18713,
											"end": 18739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18749,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 18825,
											"end": 18826,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18814,
											"end": 18823,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18810,
											"end": 18827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18801,
											"end": 18807,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 18749,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 18749,
											"end": 18828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18749,
											"end": 18828,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 18749,
											"end": 18828,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18838,
											"end": 18910,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 18906,
											"end": 18908,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18895,
											"end": 18904,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18891,
											"end": 18909,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18882,
											"end": 18888,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18838,
											"end": 18910,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 18838,
											"end": 18910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18838,
											"end": 18910,
											"name": "tag",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 18838,
											"end": 18910,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 18982,
											"end": 18984,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 18971,
											"end": 18980,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18967,
											"end": 18985,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18958,
											"end": 18964,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 18920,
											"end": 18986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 18986,
											"name": "tag",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 18920,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19147,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 18999,
											"end": 19147,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19101,
											"end": 19112,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19141,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19147,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19147,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19147,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19147,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19153,
											"end": 19543,
											"name": "tag",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 19153,
											"end": 19543,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19259,
											"end": 19262,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19287,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 19320,
											"end": 19325,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19287,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 19287,
											"end": 19326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19287,
											"end": 19326,
											"name": "tag",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 19287,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19342,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 19424,
											"end": 19430,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19419,
											"end": 19422,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19342,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 19342,
											"end": 19431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19342,
											"end": 19431,
											"name": "tag",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 19342,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19335,
											"end": 19431,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 19335,
											"end": 19431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19440,
											"end": 19505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 19498,
											"end": 19504,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19493,
											"end": 19496,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19486,
											"end": 19490,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19479,
											"end": 19484,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19475,
											"end": 19491,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19440,
											"end": 19505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 19440,
											"end": 19505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19440,
											"end": 19505,
											"name": "tag",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 19440,
											"end": 19505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19530,
											"end": 19536,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19525,
											"end": 19528,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19521,
											"end": 19537,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19514,
											"end": 19537,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19514,
											"end": 19537,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19263,
											"end": 19543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19153,
											"end": 19543,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19153,
											"end": 19543,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19153,
											"end": 19543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19153,
											"end": 19543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19153,
											"end": 19543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19729,
											"end": 19732,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19751,
											"end": 19846,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 19842,
											"end": 19845,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19833,
											"end": 19839,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19751,
											"end": 19846,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 19751,
											"end": 19846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19751,
											"end": 19846,
											"name": "tag",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 19751,
											"end": 19846,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19744,
											"end": 19846,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19744,
											"end": 19846,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19863,
											"end": 19958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 19954,
											"end": 19957,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19945,
											"end": 19951,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19863,
											"end": 19958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 19863,
											"end": 19958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19863,
											"end": 19958,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 19863,
											"end": 19958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19856,
											"end": 19958,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19856,
											"end": 19958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19975,
											"end": 19978,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19968,
											"end": 19978,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19968,
											"end": 19978,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19990,
											"end": 20131,
											"name": "tag",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 19990,
											"end": 20131,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20039,
											"end": 20043,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20062,
											"end": 20065,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20054,
											"end": 20065,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20054,
											"end": 20065,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20085,
											"end": 20088,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20082,
											"end": 20083,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20075,
											"end": 20089,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20119,
											"end": 20123,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20116,
											"end": 20117,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20106,
											"end": 20124,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 20098,
											"end": 20124,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20098,
											"end": 20124,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19990,
											"end": 20131,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19990,
											"end": 20131,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19990,
											"end": 20131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19990,
											"end": 20131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20137,
											"end": 20230,
											"name": "tag",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 20137,
											"end": 20230,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20174,
											"end": 20180,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20221,
											"end": 20223,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20216,
											"end": 20218,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 20209,
											"end": 20214,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20205,
											"end": 20219,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20201,
											"end": 20224,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 20191,
											"end": 20224,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20191,
											"end": 20224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20137,
											"end": 20230,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20137,
											"end": 20230,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20137,
											"end": 20230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20137,
											"end": 20230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20236,
											"end": 20343,
											"name": "tag",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 20236,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20280,
											"end": 20288,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20330,
											"end": 20335,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20324,
											"end": 20328,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20320,
											"end": 20336,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 20299,
											"end": 20336,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20299,
											"end": 20336,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20236,
											"end": 20343,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20236,
											"end": 20343,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20236,
											"end": 20343,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20236,
											"end": 20343,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20236,
											"end": 20343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20418,
											"end": 20424,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20468,
											"end": 20469,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 20456,
											"end": 20466,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20452,
											"end": 20470,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 20491,
											"end": 20588,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 20521,
											"end": 20587,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20510,
											"end": 20519,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20491,
											"end": 20588,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 20491,
											"end": 20588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20491,
											"end": 20588,
											"name": "tag",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 20491,
											"end": 20588,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20609,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 20639,
											"end": 20647,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 20628,
											"end": 20637,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20609,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 20609,
											"end": 20648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20609,
											"end": 20648,
											"name": "tag",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 20609,
											"end": 20648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20597,
											"end": 20648,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 20597,
											"end": 20648,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20685,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 20677,
											"end": 20686,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 20670,
											"end": 20675,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20666,
											"end": 20687,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20657,
											"end": 20687,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 20657,
											"end": 20687,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20730,
											"end": 20734,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 20720,
											"end": 20728,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 20716,
											"end": 20735,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20709,
											"end": 20714,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20706,
											"end": 20736,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 20696,
											"end": 20736,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20696,
											"end": 20736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20425,
											"end": 20742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20425,
											"end": 20742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20349,
											"end": 20742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20748,
											"end": 20890,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 20748,
											"end": 20890,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20798,
											"end": 20807,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20831,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 20849,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 20858,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 20876,
											"end": 20881,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20858,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 20858,
											"end": 20882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20858,
											"end": 20882,
											"name": "tag",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 20858,
											"end": 20882,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20849,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 20849,
											"end": 20883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20849,
											"end": 20883,
											"name": "tag",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 20849,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20831,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 20831,
											"end": 20884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20831,
											"end": 20884,
											"name": "tag",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 20831,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20818,
											"end": 20884,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20818,
											"end": 20884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20748,
											"end": 20890,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20748,
											"end": 20890,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20748,
											"end": 20890,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20748,
											"end": 20890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 20971,
											"name": "tag",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 20896,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20939,
											"end": 20942,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20960,
											"end": 20965,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20953,
											"end": 20965,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20953,
											"end": 20965,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 20971,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 20971,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 20971,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 20971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20977,
											"end": 21246,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 20977,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21087,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 21118,
											"end": 21125,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21087,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 21087,
											"end": 21126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21087,
											"end": 21126,
											"name": "tag",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 21087,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21148,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 21197,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 21221,
											"end": 21237,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21197,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 21197,
											"end": 21238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21197,
											"end": 21238,
											"name": "tag",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 21197,
											"end": 21238,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21189,
											"end": 21195,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21182,
											"end": 21186,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21176,
											"end": 21187,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 21148,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 21148,
											"end": 21239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21148,
											"end": 21239,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 21148,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21142,
											"end": 21146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21135,
											"end": 21240,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 21053,
											"end": 21246,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20977,
											"end": 21246,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20977,
											"end": 21246,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20977,
											"end": 21246,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20977,
											"end": 21246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21252,
											"end": 21325,
											"name": "tag",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 21252,
											"end": 21325,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21297,
											"end": 21300,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21252,
											"end": 21325,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21252,
											"end": 21325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21331,
											"end": 21520,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 21331,
											"end": 21520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21408,
											"end": 21440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 21408,
											"end": 21440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 21408,
											"end": 21440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21408,
											"end": 21440,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 21408,
											"end": 21440,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21449,
											"end": 21514,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 21507,
											"end": 21513,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21499,
											"end": 21505,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21493,
											"end": 21497,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21449,
											"end": 21514,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 21449,
											"end": 21514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21449,
											"end": 21514,
											"name": "tag",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 21449,
											"end": 21514,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21384,
											"end": 21520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21331,
											"end": 21520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21331,
											"end": 21520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21331,
											"end": 21520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21526,
											"end": 21712,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 21526,
											"end": 21712,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "tag",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21603,
											"end": 21606,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21596,
											"end": 21601,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21593,
											"end": 21607,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21657,
											"end": 21696,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 21694,
											"end": 21695,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21687,
											"end": 21692,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21657,
											"end": 21696,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 21657,
											"end": 21696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21657,
											"end": 21696,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 21657,
											"end": 21696,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21630,
											"end": 21631,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 21623,
											"end": 21628,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21619,
											"end": 21632,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21610,
											"end": 21632,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21610,
											"end": 21632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "tag",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 21586,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21526,
											"end": 21712,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21526,
											"end": 21712,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21526,
											"end": 21712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21718,
											"end": 22261,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 21718,
											"end": 22261,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21819,
											"end": 21821,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 21814,
											"end": 21817,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21811,
											"end": 21822,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 21808,
											"end": 22254,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21808,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 21808,
											"end": 22254,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21853,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "636"
										},
										{
											"begin": 21885,
											"end": 21890,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21853,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 21853,
											"end": 21891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21853,
											"end": 21891,
											"name": "tag",
											"source": 19,
											"value": "636"
										},
										{
											"begin": 21853,
											"end": 21891,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21937,
											"end": 21966,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 21955,
											"end": 21965,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21937,
											"end": 21966,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 21937,
											"end": 21966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21937,
											"end": 21966,
											"name": "tag",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 21937,
											"end": 21966,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21927,
											"end": 21935,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21923,
											"end": 21967,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22120,
											"end": 22122,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22118,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22105,
											"end": 22123,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 22102,
											"end": 22151,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22102,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 22102,
											"end": 22151,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22141,
											"end": 22149,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22126,
											"end": 22149,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22126,
											"end": 22149,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22102,
											"end": 22151,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 22102,
											"end": 22151,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22164,
											"end": 22244,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 22220,
											"end": 22242,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "640"
										},
										{
											"begin": 22238,
											"end": 22241,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22220,
											"end": 22242,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 22220,
											"end": 22242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22220,
											"end": 22242,
											"name": "tag",
											"source": 19,
											"value": "640"
										},
										{
											"begin": 22220,
											"end": 22242,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22210,
											"end": 22218,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22206,
											"end": 22243,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22193,
											"end": 22204,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22164,
											"end": 22244,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 22164,
											"end": 22244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22164,
											"end": 22244,
											"name": "tag",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 22164,
											"end": 22244,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21823,
											"end": 22254,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21823,
											"end": 22254,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21808,
											"end": 22254,
											"name": "tag",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 21808,
											"end": 22254,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21718,
											"end": 22261,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21718,
											"end": 22261,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21718,
											"end": 22261,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21718,
											"end": 22261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22267,
											"end": 22384,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 22267,
											"end": 22384,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22321,
											"end": 22329,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22376,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22365,
											"end": 22369,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22361,
											"end": 22377,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 22340,
											"end": 22377,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22340,
											"end": 22377,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22267,
											"end": 22384,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22267,
											"end": 22384,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22267,
											"end": 22384,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22267,
											"end": 22384,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22267,
											"end": 22384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22559,
											"name": "tag",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 22390,
											"end": 22559,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22434,
											"end": 22440,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22467,
											"end": 22518,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 22515,
											"end": 22516,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22511,
											"end": 22517,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 22503,
											"end": 22508,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22500,
											"end": 22501,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 22496,
											"end": 22509,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 22467,
											"end": 22518,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 22467,
											"end": 22518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22467,
											"end": 22518,
											"name": "tag",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 22467,
											"end": 22518,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22463,
											"end": 22519,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 22548,
											"end": 22552,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22542,
											"end": 22546,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22553,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 22528,
											"end": 22553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22528,
											"end": 22553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22441,
											"end": 22559,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22559,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22559,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22559,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22559,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22859,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 22564,
											"end": 22859,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22640,
											"end": 22644,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22786,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 22811,
											"end": 22814,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22805,
											"end": 22809,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22786,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 22786,
											"end": 22815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22786,
											"end": 22815,
											"name": "tag",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 22786,
											"end": 22815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22778,
											"end": 22815,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22778,
											"end": 22815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22848,
											"end": 22851,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22845,
											"end": 22846,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 22841,
											"end": 22852,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 22835,
											"end": 22839,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22832,
											"end": 22853,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 22824,
											"end": 22853,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22824,
											"end": 22853,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22859,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22859,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22859,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22859,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 24259,
											"name": "tag",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 22864,
											"end": 24259,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22981,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 23014,
											"end": 23017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22981,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 22981,
											"end": 23018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22981,
											"end": 23018,
											"name": "tag",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 22981,
											"end": 23018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23083,
											"end": 23101,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23075,
											"end": 23081,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23072,
											"end": 23102,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 23069,
											"end": 23125,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23069,
											"end": 23125,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 23069,
											"end": 23125,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 23105,
											"end": 23123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "tag",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23069,
											"end": 23125,
											"name": "tag",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 23069,
											"end": 23125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23149,
											"end": 23187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "650"
										},
										{
											"begin": 23181,
											"end": 23185,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23175,
											"end": 23186,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 23149,
											"end": 23187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 23149,
											"end": 23187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23149,
											"end": 23187,
											"name": "tag",
											"source": 19,
											"value": "650"
										},
										{
											"begin": 23149,
											"end": 23187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23234,
											"end": 23301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 23294,
											"end": 23300,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23286,
											"end": 23292,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23280,
											"end": 23284,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23234,
											"end": 23301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 23234,
											"end": 23301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23234,
											"end": 23301,
											"name": "tag",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 23234,
											"end": 23301,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23328,
											"end": 23329,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23352,
											"end": 23356,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23339,
											"end": 23356,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23339,
											"end": 23356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23384,
											"end": 23386,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23376,
											"end": 23382,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23373,
											"end": 23387,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 23401,
											"end": 23402,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 23396,
											"end": 24014,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23396,
											"end": 24014,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 23396,
											"end": 24014,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 23396,
											"end": 24014,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24058,
											"end": 24059,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24081,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24072,
											"end": 24149,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24072,
											"end": 24149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 24072,
											"end": 24149,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24124,
											"end": 24133,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24119,
											"end": 24122,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 24115,
											"end": 24134,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24109,
											"end": 24135,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24100,
											"end": 24135,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24100,
											"end": 24135,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24072,
											"end": 24149,
											"name": "tag",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 24072,
											"end": 24149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24175,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "655"
										},
										{
											"begin": 24235,
											"end": 24241,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24228,
											"end": 24233,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24175,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 24175,
											"end": 24242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24175,
											"end": 24242,
											"name": "tag",
											"source": 19,
											"value": "655"
										},
										{
											"begin": 24175,
											"end": 24242,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24169,
											"end": 24173,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24162,
											"end": 24243,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24031,
											"end": 24253,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23366,
											"end": 24253,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "652"
										},
										{
											"begin": 23366,
											"end": 24253,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23396,
											"end": 24014,
											"name": "tag",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 23396,
											"end": 24014,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23448,
											"end": 23452,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23444,
											"end": 23453,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 23436,
											"end": 23442,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23432,
											"end": 23454,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23482,
											"end": 23519,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 23514,
											"end": 23518,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 23482,
											"end": 23519,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 23482,
											"end": 23519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23482,
											"end": 23519,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 23482,
											"end": 23519,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23541,
											"end": 23542,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "tag",
											"source": 19,
											"value": "657"
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23569,
											"end": 23576,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23566,
											"end": 23567,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23563,
											"end": 23577,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23648,
											"end": 23657,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23643,
											"end": 23646,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 23639,
											"end": 23658,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23633,
											"end": 23659,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 23625,
											"end": 23631,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23618,
											"end": 23660,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 23699,
											"end": 23700,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23687,
											"end": 23701,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23677,
											"end": 23701,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23677,
											"end": 23701,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23746,
											"end": 23748,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23735,
											"end": 23744,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23731,
											"end": 23749,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23718,
											"end": 23749,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 23718,
											"end": 23749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23592,
											"end": 23596,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23589,
											"end": 23590,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23585,
											"end": 23597,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23580,
											"end": 23597,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23580,
											"end": 23597,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "657"
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "tag",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 23555,
											"end": 23763,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23791,
											"end": 23797,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 23782,
											"end": 23789,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23779,
											"end": 23798,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 23776,
											"end": 23955,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23776,
											"end": 23955,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 23776,
											"end": 23955,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23849,
											"end": 23858,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23844,
											"end": 23847,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 23840,
											"end": 23859,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23834,
											"end": 23860,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 23892,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "661"
										},
										{
											"begin": 23934,
											"end": 23938,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23926,
											"end": 23932,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 23922,
											"end": 23939,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23911,
											"end": 23920,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23892,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 23892,
											"end": 23940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23892,
											"end": 23940,
											"name": "tag",
											"source": 19,
											"value": "661"
										},
										{
											"begin": 23892,
											"end": 23940,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23884,
											"end": 23890,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23877,
											"end": 23941,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 23799,
											"end": 23955,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23776,
											"end": 23955,
											"name": "tag",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 23776,
											"end": 23955,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24001,
											"end": 24002,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 23997,
											"end": 23998,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 23989,
											"end": 23995,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 23985,
											"end": 23999,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 23981,
											"end": 24003,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23975,
											"end": 23979,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 23968,
											"end": 24004,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 23403,
											"end": 24014,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23403,
											"end": 24014,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23403,
											"end": 24014,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23366,
											"end": 24253,
											"name": "tag",
											"source": 19,
											"value": "652"
										},
										{
											"begin": 23366,
											"end": 24253,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23366,
											"end": 24253,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 24259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 24259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22956,
											"end": 24259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 24259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 24259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 24259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24363,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 24265,
											"end": 24363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24316,
											"end": 24322,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24350,
											"end": 24355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24344,
											"end": 24356,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24334,
											"end": 24356,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24334,
											"end": 24356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24363,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24363,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24537,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 24369,
											"end": 24537,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24452,
											"end": 24463,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24486,
											"end": 24492,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24481,
											"end": 24484,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24474,
											"end": 24493,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24526,
											"end": 24530,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24521,
											"end": 24524,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24517,
											"end": 24531,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24502,
											"end": 24531,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24502,
											"end": 24531,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24537,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24537,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24537,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24537,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24369,
											"end": 24537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24916,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 24543,
											"end": 24916,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24629,
											"end": 24632,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24657,
											"end": 24695,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 24689,
											"end": 24694,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24657,
											"end": 24695,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 24657,
											"end": 24695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24657,
											"end": 24695,
											"name": "tag",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 24657,
											"end": 24695,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24711,
											"end": 24781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "666"
										},
										{
											"begin": 24774,
											"end": 24780,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24769,
											"end": 24772,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24711,
											"end": 24781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 24711,
											"end": 24781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24711,
											"end": 24781,
											"name": "tag",
											"source": 19,
											"value": "666"
										},
										{
											"begin": 24711,
											"end": 24781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24704,
											"end": 24781,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 24704,
											"end": 24781,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 24855,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "667"
										},
										{
											"begin": 24848,
											"end": 24854,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24843,
											"end": 24846,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24836,
											"end": 24840,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24829,
											"end": 24834,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24825,
											"end": 24841,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 24855,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 24790,
											"end": 24855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 24855,
											"name": "tag",
											"source": 19,
											"value": "667"
										},
										{
											"begin": 24790,
											"end": 24855,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24880,
											"end": 24909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "668"
										},
										{
											"begin": 24902,
											"end": 24908,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24880,
											"end": 24909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 24880,
											"end": 24909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24880,
											"end": 24909,
											"name": "tag",
											"source": 19,
											"value": "668"
										},
										{
											"begin": 24880,
											"end": 24909,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24875,
											"end": 24878,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24871,
											"end": 24910,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24864,
											"end": 24910,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24864,
											"end": 24910,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24633,
											"end": 24916,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24916,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24916,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24916,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24916,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24543,
											"end": 24916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "tag",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25117,
											"end": 25121,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25155,
											"end": 25158,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 25144,
											"end": 25153,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25140,
											"end": 25159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25132,
											"end": 25159,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25132,
											"end": 25159,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25169,
											"end": 25240,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 25237,
											"end": 25238,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25226,
											"end": 25235,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25222,
											"end": 25239,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25213,
											"end": 25219,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25169,
											"end": 25240,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 25169,
											"end": 25240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25169,
											"end": 25240,
											"name": "tag",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 25169,
											"end": 25240,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25250,
											"end": 25322,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 25318,
											"end": 25320,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25307,
											"end": 25316,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25303,
											"end": 25321,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25294,
											"end": 25300,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25250,
											"end": 25322,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 25250,
											"end": 25322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25250,
											"end": 25322,
											"name": "tag",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 25250,
											"end": 25322,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25332,
											"end": 25404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 25400,
											"end": 25402,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 25389,
											"end": 25398,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25376,
											"end": 25382,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25332,
											"end": 25404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 25332,
											"end": 25404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25332,
											"end": 25404,
											"name": "tag",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 25332,
											"end": 25404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25451,
											"end": 25460,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25445,
											"end": 25449,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25441,
											"end": 25461,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 25436,
											"end": 25438,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 25425,
											"end": 25434,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25421,
											"end": 25439,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25414,
											"end": 25462,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25479,
											"end": 25555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "673"
										},
										{
											"begin": 25550,
											"end": 25554,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25541,
											"end": 25547,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25479,
											"end": 25555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 25479,
											"end": 25555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25479,
											"end": 25555,
											"name": "tag",
											"source": 19,
											"value": "673"
										},
										{
											"begin": 25479,
											"end": 25555,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25471,
											"end": 25555,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25471,
											"end": 25555,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 25562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25568,
											"end": 25709,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 25568,
											"end": 25709,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25624,
											"end": 25629,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25661,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25649,
											"end": 25662,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 25640,
											"end": 25662,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25640,
											"end": 25662,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25671,
											"end": 25703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "675"
										},
										{
											"begin": 25697,
											"end": 25702,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25671,
											"end": 25703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 25671,
											"end": 25703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25671,
											"end": 25703,
											"name": "tag",
											"source": 19,
											"value": "675"
										},
										{
											"begin": 25671,
											"end": 25703,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25568,
											"end": 25709,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 25568,
											"end": 25709,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25568,
											"end": 25709,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25568,
											"end": 25709,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25568,
											"end": 25709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25715,
											"end": 26064,
											"name": "tag",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 25715,
											"end": 26064,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25784,
											"end": 25790,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25833,
											"end": 25835,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25821,
											"end": 25830,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25812,
											"end": 25819,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25808,
											"end": 25831,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 25804,
											"end": 25836,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 25801,
											"end": 25920,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25801,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 25801,
											"end": 25920,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25839,
											"end": 25918,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "678"
										},
										{
											"begin": 25839,
											"end": 25918,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 25839,
											"end": 25918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25839,
											"end": 25918,
											"name": "tag",
											"source": 19,
											"value": "678"
										},
										{
											"begin": 25839,
											"end": 25918,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25801,
											"end": 25920,
											"name": "tag",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 25801,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25959,
											"end": 25960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25984,
											"end": 26047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "679"
										},
										{
											"begin": 26039,
											"end": 26046,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26030,
											"end": 26036,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26019,
											"end": 26028,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26015,
											"end": 26037,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25984,
											"end": 26047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 25984,
											"end": 26047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25984,
											"end": 26047,
											"name": "tag",
											"source": 19,
											"value": "679"
										},
										{
											"begin": 25984,
											"end": 26047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25974,
											"end": 26047,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25974,
											"end": 26047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25930,
											"end": 26057,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25715,
											"end": 26064,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 25715,
											"end": 26064,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25715,
											"end": 26064,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25715,
											"end": 26064,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25715,
											"end": 26064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26191,
											"end": 26195,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26229,
											"end": 26231,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 26218,
											"end": 26227,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26214,
											"end": 26232,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26206,
											"end": 26232,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26206,
											"end": 26232,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26242,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 26310,
											"end": 26311,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26299,
											"end": 26308,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26295,
											"end": 26312,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26286,
											"end": 26292,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26242,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 26242,
											"end": 26313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26242,
											"end": 26313,
											"name": "tag",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 26242,
											"end": 26313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26323,
											"end": 26395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 26391,
											"end": 26393,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26380,
											"end": 26389,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26376,
											"end": 26394,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26367,
											"end": 26373,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26323,
											"end": 26395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 26323,
											"end": 26395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26323,
											"end": 26395,
											"name": "tag",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 26323,
											"end": 26395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26408,
											"end": 26588,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 26408,
											"end": 26588,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26456,
											"end": 26533,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26453,
											"end": 26454,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26446,
											"end": 26534,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26553,
											"end": 26557,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 26550,
											"end": 26551,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 26543,
											"end": 26558,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26577,
											"end": 26581,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 26574,
											"end": 26575,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26567,
											"end": 26582,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"createMarketItem(uint256,uint256)": "361c1995",
							"createSale(uint256)": "9da1b02a",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateTokenMetadata(uint256,string)": "2cb2f52e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"name\":\"MarketItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createMarketItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"createSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"updateTokenMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"NFTMarketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xe5b9b4cdadd666fc1c01b3a2664bb30226f9ac3f29ec85daeecc0c325490799d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6586ff79cc54d9a2d77b5572400ceae69cf53b4aca4f311029828e9bfdd949e\",\"dweb:/ipfs/QmRcQg7G8eb3io97GaAvmNNgzB3HNrwRgbHQBW8a7H1PSv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1566,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3261,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "_itemIds",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1728_storage"
							},
							{
								"astId": 3264,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "paymentToken",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IERC20)394"
							},
							{
								"astId": 3280,
								"contract": "contracts/MyToken.sol:NFTMarketplace",
								"label": "idToMarketItem",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(MarketItem)3275_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)394": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(MarketItem)3275_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.MarketItem)",
								"numberOfBytes": "32",
								"value": "t_struct(MarketItem)3275_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1728_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1727,
										"contract": "contracts/MyToken.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(MarketItem)3275_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.MarketItem",
								"members": [
									{
										"astId": 3266,
										"contract": "contracts/MyToken.sol:NFTMarketplace",
										"label": "itemId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3268,
										"contract": "contracts/MyToken.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3270,
										"contract": "contracts/MyToken.sol:NFTMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 3272,
										"contract": "contracts/MyToken.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3274,
										"contract": "contracts/MyToken.sol:NFTMarketplace",
										"label": "sold",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1723,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1722,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1722
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2088,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1520
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1520,
								2087
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1520
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1521,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 328,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 337,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 394,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 394,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 394,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 394,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 394,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 394,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 395,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								328,
								337
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"ERC165": [
							2075
						],
						"ERC721": [
							1403
						],
						"IERC165": [
							2087
						],
						"IERC721": [
							1520
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1692
						],
						"IERC721Receiver": [
							1538
						],
						"Strings": [
							2051
						]
					},
					"id": 1404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1521,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1539,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1538,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1693,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1692,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1723,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 403,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1722,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 2052,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 405,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 2076,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 407,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 408,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2075,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 317,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 410,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "804:7:6"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 415,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "813:6:6"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 417,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "821:7:6"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1692,
										"src": "830:15:6"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 421,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:6"
									},
									"id": 422,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403,
								269,
								1692,
								1520,
								2075,
								2087,
								1722
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 425,
									"libraryName": {
										"id": 423,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 432,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 431,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 436,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 434,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 441,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 440,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 439,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 446,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 445,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 443,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 444,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 464,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1403,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2074,
										2086
									],
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 475,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 477,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 476,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1520",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 483,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1692_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1692_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 482,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1692",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 490,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 488,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1403_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2074,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 474,
												"id": 493,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 471,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 469,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2075,
												"src": "1637:6:6"
											},
											{
												"id": 470,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2087,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 466,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1403,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1445
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 503,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 504,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 510,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 509,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 502,
												"id": 521,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1403,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 530,
												"id": 534,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1403,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1677
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1403,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1683
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 551,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 550,
												"id": 552,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1403,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1691
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 566,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 568,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 573,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 571,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 581,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 582,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1864,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 578,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 561,
												"id": 588,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1403,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1403,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1493
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 610,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 607,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1206,
															1272
														],
														"referencedDeclaration": 1206,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1403,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 622,
												"id": 630,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1403,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1501
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 641,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 640,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1403,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1519
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 658,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 659,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 662,
													"indexExpression": {
														"id": 661,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 657,
												"id": 663,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1403,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 676,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 682,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 681,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 687,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 690,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 700,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 703,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 704,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 705,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 702,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 707,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1403,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1475
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 721,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															729,
															755
														],
														"referencedDeclaration": 755,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1403,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1403,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 763,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 765,
													"indexExpression": {
														"id": 764,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 766,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1403,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 776,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 778,
													"indexExpression": {
														"id": 777,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 775,
												"id": 779,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1403,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 793,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 799,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 800,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 803,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 804,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 786,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 802,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 808,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 807,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 810,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 792,
												"id": 815,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1403,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 828,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 829,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 830,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 827,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 849,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 845,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 846,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 844,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 848,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 850,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 843,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 840,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 839,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 842,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1403,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 868,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 862,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 864,
																"indexExpression": {
																	"id": 863,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 867,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 858,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1403,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 882,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 888,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 889,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 895,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 896,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 897,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 894,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 903,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 909,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 913,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 914,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 908,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1206,
																		1272
																	],
																	"referencedDeclaration": 1272,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 927,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 921,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 923,
																			"indexExpression": {
																				"id": 922,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 931,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 942,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 936,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 938,
																			"indexExpression": {
																				"id": 937,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 941,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 945,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 947,
														"indexExpression": {
															"id": 946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 948,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 952,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 951,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 957,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 881,
												"id": 958,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1403,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10008:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "10022:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 969,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "10018:87:6",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "10040:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 974,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "10054:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10114:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 983,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"id": 986,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "10146:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "10150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 985,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "10138:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "10184:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "10180:96:6",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "10213:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1001,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "10227:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9982:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:6"
									},
									"scope": 1403,
									"src": "9955:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "10690:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "10710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1018,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1025,
															1051
														],
														"referencedDeclaration": 1051,
														"src": "10700:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:6"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "10652:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "10664:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:6"
									},
									"scope": 1403,
									"src": "10633:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11038:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "11054:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "11058:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "11048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "11111:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "11115:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "11124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "11076:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:6"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10973:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:6"
									},
									"scope": 1403,
									"src": "10954:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "11503:186:6",
										"statements": [
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "11513:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1057,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "11557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1059,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "11537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "11591:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1072,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "11587:96:6",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "11620:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "11664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1077,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "11634:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "11477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:6"
									},
									"scope": 1403,
									"src": "11462:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "12084:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "12098:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "12094:87:6",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "12116:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1101,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1100,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "12130:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "12190:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "12222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "12226:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1111,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "12260:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1121,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1131,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "12362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1132,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "12379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1141,
													"nodeType": "IfStatement",
													"src": "12358:109:6",
													"trueBody": {
														"id": 1140,
														"nodeType": "Block",
														"src": "12385:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1135,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "12427:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1136,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "12433:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1137,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "12442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1134,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1139,
																"nodeType": "RevertStatement",
																"src": "12399:57:6"
															}
														]
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "12256:211:6",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "12289:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "12333:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1126,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "12303:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12046:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:6"
									},
									"scope": 1403,
									"src": "12013:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "13481:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1155,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "13511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "13515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1154,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1188
														],
														"referencedDeclaration": 1188,
														"src": "13491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:6"
									},
									"scope": 1403,
									"src": "13406:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "13873:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "13899:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "13903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "13950:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "13954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1184,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "13963:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1180,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "13921:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:6"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13808:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13820:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13837:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:6"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:6"
									},
									"scope": 1403,
									"src": "13771:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "14488:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "14507:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "14511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "14520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1198,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1206,
															1272
														],
														"referencedDeclaration": 1272,
														"src": "14498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:6"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14436:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:6"
									},
									"scope": 1403,
									"src": "14418:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "14814:568:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "14880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "14893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "14876:460:6",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "14913:423:6",
													"statements": [
														{
															"assignments": [
																1227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1227,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1263,
																	"src": "14927:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1226,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1231,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1229,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "14957:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1228,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "14943:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1232,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "15093:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1238,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "15115:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1239,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "15124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1243,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1227,
																				"src": "15150:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1244,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "15157:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1242,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "15133:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1253,
															"nodeType": "IfStatement",
															"src": "15089:142:6",
															"trueBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "15164:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1249,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "15211:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1248,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1251,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1254,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "15249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1262,
															"nodeType": "IfStatement",
															"src": "15245:81:6",
															"trueBody": {
																"id": 1261,
																"nodeType": "Block",
																"src": "15260:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1227,
																					"src": "15292:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1257,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "15299:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1258,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "15303:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1255,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "15283:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1260,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1265,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "15346:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "15362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1268,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "15373:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:6"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14738:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14750:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:6"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:6"
									},
									"scope": 1403,
									"src": "14720:662:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "15684:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "15698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1283,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "15694:91:6",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "15722:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1289,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "15765:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1288,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1291,
															"nodeType": "RevertStatement",
															"src": "15736:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1294,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "15794:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1297,
															"indexExpression": {
																"id": 1295,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "15813:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1298,
														"indexExpression": {
															"id": 1296,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "15832:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "15870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15877:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "15887:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1302,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "15855:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "EmitStatement",
												"src": "15850:46:6"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15634:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:6"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:6"
									},
									"scope": 1403,
									"src": "15591:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "16210:169:6",
										"statements": [
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "16220:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [
														{
															"id": 1320,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "16245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1319,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "16236:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "16267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "16263:88:6",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "16288:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1330,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "16332:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1329,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1332,
															"nodeType": "RevertStatement",
															"src": "16302:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1335,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1318,
													"src": "16367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1316,
												"id": 1336,
												"nodeType": "Return",
												"src": "16360:12:6"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "16161:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "16201:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:6"
									},
									"scope": 1403,
									"src": "16138:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "17020:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1350,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "17034:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "17030:664:6",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "17054:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1379,
																		"nodeType": "Block",
																		"src": "17168:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1368,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1366,
																						"src": "17190:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1369,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1538,
																								"src": "17200:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1538_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1537,
																							"src": "17200:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1378,
																				"nodeType": "IfStatement",
																				"src": "17186:130:6",
																				"trueBody": {
																					"id": 1377,
																					"nodeType": "Block",
																					"src": "17243:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1374,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1343,
																										"src": "17294:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1373,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1375,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1376,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1380,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1367,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1366,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1380,
																				"src": "17153:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1365,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:6"
																	},
																	"src": "17144:186:6"
																},
																{
																	"block": {
																		"id": 1396,
																		"nodeType": "Block",
																		"src": "17359:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1384,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1382,
																							"src": "17381:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1386,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1394,
																					"nodeType": "Block",
																					"src": "17480:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:6",
																								"nodeType": "YulBlock",
																								"src": "17566:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:6"
																													},
																													"nativeSrc": "17599:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:6"
																													},
																													"nativeSrc": "17616:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:6"
																											},
																											"nativeSrc": "17592:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:6"
																										},
																										"nativeSrc": "17592:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1382,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1382,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1393,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:6"
																						}
																					]
																				},
																				"id": 1395,
																				"nodeType": "IfStatement",
																				"src": "17377:293:6",
																				"trueBody": {
																					"id": 1392,
																					"nodeType": "Block",
																					"src": "17401:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1389,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1343,
																										"src": "17452:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1388,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1390,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1391,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1397,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1383,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1382,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1397,
																				"src": "17338:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1381,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:6"
																	},
																	"src": "17331:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1359,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "17109:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1361,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "17123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "17129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1363,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "17138:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1356,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "17088:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1355,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "17072:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1538_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1538",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "17072:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1398,
															"nodeType": "TryStatement",
															"src": "17068:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16950:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16976:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16993:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:6"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:6"
									},
									"scope": 1403,
									"src": "16918:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1404,
							"src": "776:16926:6",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "107:17596:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						],
						"IERC721": [
							1520
						]
					},
					"id": 1521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 2088,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1406,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1409,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "287:7:7"
									},
									"id": 1410,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1408,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1520,
							"linearizedBaseContracts": [
								1520,
								2087
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1419,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1428,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1437,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1520,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1520,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1520,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1520,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1520,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1520,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1520,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1520,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1520,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1521,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1538
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1538,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1539,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1403
						],
						"ERC721URIStorage": [
							1664
						],
						"IERC165": [
							2087
						],
						"IERC4906": [
							175
						],
						"Strings": [
							2051
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1542,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1404,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1541,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1403,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 2052,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1543,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 176,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1545,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 152,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1547,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1550,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:9"
									},
									"id": 1551,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:9"
								},
								{
									"baseName": {
										"id": 1552,
										"name": "ERC721",
										"nameLocations": [
											"479:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "479:6:9"
									},
									"id": 1553,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1549,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								1403,
								269,
								1692,
								175,
								1520,
								2075,
								2087,
								1722
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1556,
									"libraryName": {
										"id": 1554,
										"name": "Strings",
										"nameLocations": [
											"498:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "498:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:9",
									"typeName": {
										"id": 1555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1562,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "706:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1557,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1560,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1559,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1558,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "817:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1565,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:9",
										"keyType": {
											"id": 1563,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1564,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										495,
										2086
									],
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "1045:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1577,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "1062:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1578,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "1077:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1582,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "1125:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1580,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1664_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 495,
															"src": "1101:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1585,
												"nodeType": "Return",
												"src": "1055:82:9"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1573,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1571,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "1013:6:9"
											},
											{
												"id": 1572,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2087,
												"src": "1021:7:9"
											}
										],
										"src": "1004:25:9"
									},
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1039:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:9"
									},
									"scope": 1664,
									"src": "937:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "1298:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1596,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1308:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:9"
											},
											{
												"assignments": [
													1601
												],
												"declarations": [
													{
														"constant": false,
														"id": 1601,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "1341:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1600,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"baseExpression": {
														"id": 1602,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1367:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1604,
													"indexExpression": {
														"id": 1603,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "1378:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:9"
											},
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "1396:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1606,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1608,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1417:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1613,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "1506:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1621,
												"nodeType": "IfStatement",
												"src": "1496:70:9",
												"trueBody": {
													"id": 1620,
													"nodeType": "Block",
													"src": "1525:41:9",
													"statements": [
														{
															"expression": {
																"id": 1618,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "1546:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1595,
															"id": 1619,
															"nodeType": "Return",
															"src": "1539:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1624,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "1671:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1622,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "1661:95:9",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "1694:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1632,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "1729:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1633,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "1735:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1595,
															"id": 1635,
															"nodeType": "Return",
															"src": "1708:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1638,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1664_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "1773:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1642,
												"nodeType": "Return",
												"src": "1766:30:9"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1592,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:9"
									},
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1228:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:9"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1664,
									"src": "1210:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "2003:86:9",
										"statements": [
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1652,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "2013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1654,
														"indexExpression": {
															"id": 1653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1655,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "2035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1658,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "EmitStatement",
												"src": "2054:28:9"
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1961:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:9"
									},
									"scope": 1664,
									"src": "1922:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1665,
							"src": "431:1660:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437
							]
						}
					],
					"src": "128:1964:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1520
						],
						"IERC721Metadata": [
							1692
						]
					},
					"id": 1693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1521,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1667,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "357:7:10"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								1520,
								2087
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1692,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1692,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1692,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1693,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1722
						]
					},
					"id": 1723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1695,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1722,
							"linearizedBaseContracts": [
								1722
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1700,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1702,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1722,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1711,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1722,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1717,
												"id": 1719,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1722,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1723,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1796
						]
					},
					"id": 1797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1796,
							"linearizedBaseContracts": [
								1796
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1726,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 1796,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1736,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1727,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1738,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1729,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "844:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 1796,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 1752,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1746,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1727,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1751,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "964:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 1796,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"expression": {
														"id": 1762,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1727,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 1780,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1772,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1727,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1779,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 1796,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1788,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1727,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1783,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 1796,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1797,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3141
						],
						"SignedMath": [
							3246
						],
						"Strings": [
							2051
						]
					},
					"id": 2052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1798,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 3142,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1799,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3141,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 3247,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1801,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3246,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1803,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1806,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2051,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1804,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1809,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2051,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1807,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1808,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1816,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															1825
														],
														"declarations": [
															{
																"constant": false,
																"id": 1825,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1832,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1828,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1826,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3141,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3141_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2961,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															1834
														],
														"declarations": [
															{
																"constant": false,
																"id": 1834,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1833,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1839,
														"initialValue": {
															"arguments": [
																{
																	"id": 1837,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1835,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															1841
														],
														"declarations": [
															{
																"constant": false,
																"id": 1841,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1842,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1834,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1825,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1841,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 1843,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 1858,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 1845,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1806,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1841,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1819,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1848,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1852,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1857,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 1856,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1859,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 1860,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1823,
														"id": 1861,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2051,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1884,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1882,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3246,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3246_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3245,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1881,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1872,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1871,
												"id": 1888,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2051,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 1908,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1902,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1893,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1900,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3141_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3083,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1898,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1910,
																	1993,
																	2013
																],
																"referencedDeclaration": 1993,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1907,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2051,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													1921
												],
												"declarations": [
													{
														"constant": false,
														"id": 1921,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1923,
												"initialValue": {
													"id": 1922,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1913,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1924,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1929,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1926,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1935,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1937,
														"indexExpression": {
															"hexValue": "30",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1943,
														"indexExpression": {
															"hexValue": "31",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 1975,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1961,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1963,
																	"indexExpression": {
																		"id": 1962,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1964,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1968,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1965,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1970,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1955,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"initializationExpression": {
													"assignments": [
														1948
													],
													"declarations": [
														{
															"constant": false,
															"id": 1948,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1976,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1947,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1954,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1950,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 1958,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1960,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1982,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1980,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1984,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1987,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1919,
												"id": 1991,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2051,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2006,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2004,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2002,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2009,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2001,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1993,
															2013
														],
														"referencedDeclaration": 1993,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2000,
												"id": 2011,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2051,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2025,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2023,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2030,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2028,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2037,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2016,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2035,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2034,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2043,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2041,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2040,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2048,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2051,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2052,
							"src": "251:2847:13",
							"usedErrors": [
								1816
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2075
						],
						"IERC165": [
							2087
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2076,
							"sourceUnit": 2088,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2054,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2057,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "687:7:14"
									},
									"id": 2058,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2075,
							"linearizedBaseContracts": [
								2075,
								2087
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2086
									],
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2066,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2068,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2087_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2087_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2067,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2087",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2072,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2075,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2076,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						]
					},
					"id": 2088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2087,
							"linearizedBaseContracts": [
								2087
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2087,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2088,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3141
						]
					},
					"id": 3142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2090,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3141,
							"linearizedBaseContracts": [
								3141
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2093,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2098,
									"members": [
										{
											"id": 2094,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2095,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2096,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2097,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2128,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2111
														],
														"declarations": [
															{
																"constant": false,
																"id": 2111,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2128,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2110,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2115,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2116,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2111,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2123,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2109,
															"id": 2122,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2125,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2111,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2126,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2109,
														"id": 2127,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3141,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2156,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2142,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2149,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2147,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2141,
															"id": 2148,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2152,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2154,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2141,
														"id": 2155,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3141,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2198,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2176,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2179
														],
														"declarations": [
															{
																"constant": false,
																"id": 2179,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2183,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2184,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2185,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2193,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2192,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2195,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2196,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2169,
														"id": 2197,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3141,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2226,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2211,
															"id": 2218,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2221,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2222,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2224,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2211,
														"id": 2225,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3141,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2254,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2233,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2239,
															"id": 2246,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2250,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2252,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2239,
														"id": 2253,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3141,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2266,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2267,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2270,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2272,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3141,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2284,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2285,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2288,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2287,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2283,
												"id": 2290,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3141,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2303,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2297,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2305,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2306,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2307,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2301,
												"id": 2313,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3141,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2332,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2328,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2329,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2324,
															"id": 2331,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2334,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2338,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2324,
												"id": 2347,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3141,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2473,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2362
														],
														"declarations": [
															{
																"constant": false,
																"id": 2362,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2366,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2364,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2368
														],
														"declarations": [
															{
																"constant": false,
																"id": 2368,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2367,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2369,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2354,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2370,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2371,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2378,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2374,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2362,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2375,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2360,
																	"id": 2377,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2381,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2387,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2386,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2383,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2385,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2389
														],
														"declarations": [
															{
																"constant": false,
																"id": 2389,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2390,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2354,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2391,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2393
														],
														"declarations": [
															{
																"constant": false,
																"id": 2393,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2400,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2394,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2396,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2401,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2402,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2403,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2404,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2409
														],
														"declarations": [
															{
																"constant": false,
																"id": 2409,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2408,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2416,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2411,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2413,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2417,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2419,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2420,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2424,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2425,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2427,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2428,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2432,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2433,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2435,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2436,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2440,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2441,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2443,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2444,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2448,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2449,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2451,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2452,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2456,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2457,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2459,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2460,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2464,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2465,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2467,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2470,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2471,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2360,
														"id": 2472,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3141,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2491
												],
												"declarations": [
													{
														"constant": false,
														"id": 2491,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2497,
												"initialValue": {
													"arguments": [
														{
															"id": 2493,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2494,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2492,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2475,
															2518
														],
														"referencedDeclaration": 2475,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2499,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2098",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2098",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2498,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2502,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2503,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2504,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2501,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2513,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2509,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2512,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2515,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2491,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2489,
												"id": 2516,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2476,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2483,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3141,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2526,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2532,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2531,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2525,
															"id": 2530,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2534
												],
												"declarations": [
													{
														"constant": false,
														"id": 2534,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2629,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2543,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2537,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2536,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2797,
																			2832
																		],
																		"referencedDeclaration": 2797,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2541,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2628,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2544,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2545,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2546,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2547,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2550,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2554,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2555,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2556,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2557,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2558,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2561,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2565,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2566,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2567,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2569,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2572,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2576,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2577,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2578,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2579,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2580,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2583,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2587,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2588,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2589,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2590,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2591,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2594,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2598,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2599,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2600,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2601,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2602,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2609,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2610,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2611,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2612,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2613,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2616,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2620,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2622,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2534,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2623,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2624,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2534,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2621,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2525,
														"id": 2627,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3141,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2663,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2642
														],
														"declarations": [
															{
																"constant": false,
																"id": 2642,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2663,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2646,
														"initialValue": {
															"arguments": [
																{
																	"id": 2644,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2633,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2643,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2630,
																	2665
																],
																"referencedDeclaration": 2630,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2647,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2649,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2636,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2648,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2651,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2652,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2654,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2633,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2640,
														"id": 2662,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2631,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2634,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3141,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2674
												],
												"declarations": [
													{
														"constant": false,
														"id": 2674,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2676,
												"initialValue": {
													"hexValue": "30",
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 2793,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2691,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2690,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2706,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2705,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2700,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2721,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2720,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2712,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2715,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2716,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2727,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2730,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2751,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2750,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2742,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2745,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2765,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2781,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 2780,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2775,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2792,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 2791,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2794,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2674,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2672,
												"id": 2795,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3141,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 2830,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															2809
														],
														"declarations": [
															{
																"constant": false,
																"id": 2809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2813,
														"initialValue": {
															"arguments": [
																{
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2800,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2810,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2797,
																	2832
																],
																"referencedDeclaration": 2797,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2809,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2821,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2800,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2807,
														"id": 2829,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3141,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													2841
												],
												"declarations": [
													{
														"constant": false,
														"id": 2841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2960,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2843,
												"initialValue": {
													"hexValue": "30",
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 2957,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2860,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 2859,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 2893,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2911,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 2910,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2912,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2928,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 2927,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2923,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2945,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 2944,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2940,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2943,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2946,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2956,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 2955,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2951,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2958,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2839,
												"id": 2959,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 2833,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3141,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 2994,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															2973
														],
														"declarations": [
															{
																"constant": false,
																"id": 2973,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2994,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2972,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2977,
														"initialValue": {
															"arguments": [
																{
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2974,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2961,
																	2996
																],
																"referencedDeclaration": 2961,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2978,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2980,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2967,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2979,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2983,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2985,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2971,
														"id": 2993,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2965,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3141,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3005
												],
												"declarations": [
													{
														"constant": false,
														"id": 3005,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3082,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3007,
												"initialValue": {
													"hexValue": "30",
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3079,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3022,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3021,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3016,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3037,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3036,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3031,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3035,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3052,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3051,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3046,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3050,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3067,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3066,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3061,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3065,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3078,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3077,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3080,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3005,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3003,
												"id": 3081,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3141,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3119,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3095
														],
														"declarations": [
															{
																"constant": false,
																"id": 3095,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3119,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3094,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3099,
														"initialValue": {
															"arguments": [
																{
																	"id": 3097,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3086,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3096,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3083,
																	3121
																],
																"referencedDeclaration": 3083,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3095,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3102,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3089,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3101,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3107,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3105,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3095,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3106,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3108,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3110,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3086,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3093,
														"id": 3118,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3084,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3087,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3141,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3132,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3125,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2098",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2098",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3130,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3138,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3123,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3141,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "203:14914:16",
							"usedErrors": [
								2093
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3246
						]
					},
					"id": 3247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3144,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3246,
							"linearizedBaseContracts": [
								3246
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3161,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3154,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3155,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3149,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3153,
												"id": 3160,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3145,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3246,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3179,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3172,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3165,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3173,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3167,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3165,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3171,
												"id": 3178,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3163,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3164,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3166,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3246,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3191
												],
												"declarations": [
													{
														"constant": false,
														"id": 3191,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3223,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3190,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3192,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3193,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3185,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3196,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3197,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3202,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3205,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3191,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3210,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3191,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3208,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3206,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3215,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3216,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3218,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3220,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3189,
												"id": 3222,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3181,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3182,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3184,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3187,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3246,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3244,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3243,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3234,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3227,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3238,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3227,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3237,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3227,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3231,
														"id": 3242,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3226,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3246,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3247,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"Counters": [
							1796
						],
						"ERC721": [
							1403
						],
						"ERC721URIStorage": [
							1664
						],
						"IERC165": [
							2087
						],
						"IERC20": [
							394
						],
						"IERC4906": [
							175
						],
						"NFTMarketplace": [
							3454
						],
						"Ownable": [
							147
						],
						"Strings": [
							2051
						]
					},
					"id": 3455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3455,
							"sourceUnit": 1665,
							"src": "60:78:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3455,
							"sourceUnit": 395,
							"src": "140:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3455,
							"sourceUnit": 148,
							"src": "198:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3455,
							"sourceUnit": 1797,
							"src": "252:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3253,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"335:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "335:16:18"
									},
									"id": 3254,
									"nodeType": "InheritanceSpecifier",
									"src": "335:16:18"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3454,
							"linearizedBaseContracts": [
								3454,
								1664,
								1403,
								269,
								1692,
								175,
								1520,
								2075,
								2087,
								1722
							],
							"name": "NFTMarketplace",
							"nameLocation": "317:14:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3258,
									"libraryName": {
										"id": 3255,
										"name": "Counters",
										"nameLocations": [
											"365:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1796,
										"src": "365:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "359:36:18",
									"typeName": {
										"id": 3257,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3256,
											"name": "Counters.Counter",
											"nameLocations": [
												"378:8:18",
												"387:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "378:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "378:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3261,
									"mutability": "mutable",
									"name": "_itemIds",
									"nameLocation": "426:8:18",
									"nodeType": "VariableDeclaration",
									"scope": 3454,
									"src": "401:33:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1728_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3260,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3259,
											"name": "Counters.Counter",
											"nameLocations": [
												"401:8:18",
												"410:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "401:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "401:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3264,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "456:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 3454,
									"src": "441:27:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$394",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3262,
											"name": "IERC20",
											"nameLocations": [
												"441:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 394,
											"src": "441:6:18"
										},
										"referencedDeclaration": 394,
										"src": "441:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$394",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "NFTMarketplace.MarketItem",
									"id": 3275,
									"members": [
										{
											"constant": false,
											"id": 3266,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "511:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3275,
											"src": "506:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3265,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "506:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3268,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "536:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3275,
											"src": "528:15:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "528:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3270,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "570:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3275,
											"src": "554:22:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 3269,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "554:15:18",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3272,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "595:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3275,
											"src": "587:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "587:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3274,
											"mutability": "mutable",
											"name": "sold",
											"nameLocation": "616:4:18",
											"nodeType": "VariableDeclaration",
											"scope": 3275,
											"src": "611:9:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3273,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "611:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MarketItem",
									"nameLocation": "484:10:18",
									"nodeType": "StructDefinition",
									"scope": 3454,
									"src": "477:151:18",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3280,
									"mutability": "mutable",
									"name": "idToMarketItem",
									"nameLocation": "675:14:18",
									"nodeType": "VariableDeclaration",
									"scope": 3454,
									"src": "636:53:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem)"
									},
									"typeName": {
										"id": 3279,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "644:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "636:30:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3278,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3277,
												"name": "MarketItem",
												"nameLocations": [
													"655:10:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3275,
												"src": "655:10:18"
											},
											"referencedDeclaration": 3275,
											"src": "655:10:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MarketItem_$3275_storage_ptr",
												"typeString": "struct NFTMarketplace.MarketItem"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f050d1d203b1cfd01278e7a30d56f8a7d85ce6ec3a5f320e7fcb5f06e40e866c",
									"id": 3292,
									"name": "MarketItemCreated",
									"nameLocation": "704:17:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3282,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "746:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "733:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3284,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "779:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "763:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3286,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "805:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "797:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3288,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "830:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "822:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3290,
												"indexed": false,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "851:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "846:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:140:18"
									},
									"src": "698:165:18"
								},
								{
									"body": {
										"id": 3307,
										"nodeType": "Block",
										"src": "937:55:18",
										"statements": [
											{
												"expression": {
													"id": 3305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3301,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3264,
														"src": "948:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$394",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3303,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3294,
																"src": "970:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3302,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "963:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$394_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "963:21:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$394",
															"typeString": "contract IERC20"
														}
													},
													"src": "948:36:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$394",
														"typeString": "contract IERC20"
													}
												},
												"id": 3306,
												"nodeType": "ExpressionStatement",
												"src": "948:36:18"
											}
										]
									},
									"id": 3308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d69417274654469676974616c",
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "913:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4a59971836ea90320e4bc9bc9dbcdb82efc95f34f93d4e1795819d0b819b3429",
														"typeString": "literal_string \"MiArteDigital\""
													},
													"value": "MiArteDigital"
												},
												{
													"hexValue": "4d4144",
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "930:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33",
														"typeString": "literal_string \"MAD\""
													},
													"value": "MAD"
												}
											],
											"id": 3299,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3296,
												"name": "ERC721",
												"nameLocations": [
													"906:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "906:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "906:30:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "891:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "883:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:23:18"
									},
									"returnParameters": {
										"id": 3300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:0:18"
									},
									"scope": 3454,
									"src": "871:121:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3368,
										"nodeType": "Block",
										"src": "1073:458:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3316,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "1092:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1100:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1092:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 3319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 3315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1084:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:50:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3321,
												"nodeType": "ExpressionStatement",
												"src": "1084:50:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3322,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3261,
															"src": "1147:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1156:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "1147:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1728_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3326,
												"nodeType": "ExpressionStatement",
												"src": "1147:20:18"
											},
											{
												"assignments": [
													3328
												],
												"declarations": [
													{
														"constant": false,
														"id": 3328,
														"mutability": "mutable",
														"name": "itemId",
														"nameLocation": "1186:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3368,
														"src": "1178:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1178:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3332,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3329,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3261,
															"src": "1195:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3330,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1204:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "1195:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1728_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:18:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1178:35:18"
											},
											{
												"expression": {
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3333,
															"name": "idToMarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "1226:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
															}
														},
														"id": 3335,
														"indexExpression": {
															"id": 3334,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "1241:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1226:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
															"typeString": "struct NFTMarketplace.MarketItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3337,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3328,
																"src": "1276:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3338,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3310,
																"src": "1297:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3341,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1327:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1331:6:18",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1327:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1319:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 3339,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1319:8:18",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1319:19:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 3344,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "1353:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1373:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3336,
															"name": "MarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3275,
															"src": "1251:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MarketItem_$3275_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.MarketItem storage pointer)"
															}
														},
														"id": 3346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1251:138:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3275_memory_ptr",
															"typeString": "struct NFTMarketplace.MarketItem memory"
														}
													},
													"src": "1226:163:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
														"typeString": "struct NFTMarketplace.MarketItem storage ref"
													}
												},
												"id": 3348,
												"nodeType": "ExpressionStatement",
												"src": "1226:163:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3350,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1412:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1416:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1412:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3354,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1432:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3454",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3454",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1424:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1424:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1424:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3356,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "1439:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3349,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "1402:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1402:45:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3358,
												"nodeType": "ExpressionStatement",
												"src": "1402:45:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3360,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "1481:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3361,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "1489:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1498:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1502:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1498:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3364,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3312,
															"src": "1510:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1517:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3359,
														"name": "MarketItemCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "1463:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256,bool)"
														}
													},
													"id": 3366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3367,
												"nodeType": "EmitStatement",
												"src": "1458:65:18"
											}
										]
									},
									"functionSelector": "361c1995",
									"id": 3369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createMarketItem",
									"nameLocation": "1009:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1034:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "1026:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1051:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "1043:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:32:18"
									},
									"returnParameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:18"
									},
									"scope": 3454,
									"src": "1000:531:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3439,
										"nodeType": "Block",
										"src": "1590:520:18",
										"statements": [
											{
												"assignments": [
													3375
												],
												"declarations": [
													{
														"constant": false,
														"id": 3375,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1606:5:18",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "1601:10:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3374,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1601:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3380,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3376,
															"name": "idToMarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "1614:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
															}
														},
														"id": 3378,
														"indexExpression": {
															"id": 3377,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "1629:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1614:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
															"typeString": "struct NFTMarketplace.MarketItem storage ref"
														}
													},
													"id": 3379,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1637:5:18",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3272,
													"src": "1614:28:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1601:41:18"
											},
											{
												"assignments": [
													3382
												],
												"declarations": [
													{
														"constant": false,
														"id": 3382,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1658:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "1653:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3381,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1653:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3387,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3383,
															"name": "idToMarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "1668:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
															}
														},
														"id": 3385,
														"indexExpression": {
															"id": 3384,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "1683:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1668:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
															"typeString": "struct NFTMarketplace.MarketItem storage ref"
														}
													},
													"id": 3386,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1691:7:18",
													"memberName": "tokenId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3268,
													"src": "1668:30:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1653:45:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1717:28:18",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3389,
																		"name": "idToMarketItem",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3280,
																		"src": "1718:14:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
																		}
																	},
																	"id": 3391,
																	"indexExpression": {
																		"id": 3390,
																		"name": "itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3371,
																		"src": "1733:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1718:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
																		"typeString": "struct NFTMarketplace.MarketItem storage ref"
																	}
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1741:4:18",
																"memberName": "sold",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3274,
																"src": "1718:27:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732073616c6520697320616c72656164792066696e616c697a6564",
															"id": 3394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1747:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a",
																"typeString": "literal_string \"This sale is already finalized\""
															},
															"value": "This sale is already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_177230926837789999641894a719057874a5bc8fd8e7d2da42288fa5745ab87a",
																"typeString": "literal_string \"This sale is already finalized\""
															}
														],
														"id": 3388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1709:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1709:71:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3396,
												"nodeType": "ExpressionStatement",
												"src": "1709:71:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3400,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1825:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1829:6:18",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1825:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"baseExpression": {
																			"id": 3402,
																			"name": "idToMarketItem",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3280,
																			"src": "1837:14:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
																			}
																		},
																		"id": 3404,
																		"indexExpression": {
																			"id": 3403,
																			"name": "itemId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3371,
																			"src": "1852:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1837:22:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
																			"typeString": "struct NFTMarketplace.MarketItem storage ref"
																		}
																	},
																	"id": 3405,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1860:6:18",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3270,
																	"src": "1837:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 3406,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3375,
																	"src": "1868:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3398,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "1799:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$394",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1812:12:18",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 393,
																"src": "1799:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1799:75:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e73666572207061796d656e74",
															"id": 3408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1876:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7",
																"typeString": "literal_string \"Failed to transfer payment\""
															},
															"value": "Failed to transfer payment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1aaab2651606ec05ab73470e10f2a5ef5bf89f0b639dfa48be0f5a78107f4cd7",
																"typeString": "literal_string \"Failed to transfer payment\""
															}
														],
														"id": 3397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1791:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1791:114:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3410,
												"nodeType": "ExpressionStatement",
												"src": "1791:114:18"
											},
											{
												"expression": {
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3411,
																"name": "idToMarketItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3280,
																"src": "1918:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
																}
															},
															"id": 3413,
															"indexExpression": {
																"id": 3412,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3371,
																"src": "1933:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1918:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
																"typeString": "struct NFTMarketplace.MarketItem storage ref"
															}
														},
														"id": 3414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1941:4:18",
														"memberName": "sold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3274,
														"src": "1918:27:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1948:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1918:34:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3417,
												"nodeType": "ExpressionStatement",
												"src": "1918:34:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3421,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1981:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3454",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3454",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1973:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1973:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1973:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3423,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1988:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1992:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1988:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3425,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "2000:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3418,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "1963:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:45:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3427,
												"nodeType": "ExpressionStatement",
												"src": "1963:45:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3429,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "2042:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3430,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "2050:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3431,
																	"name": "idToMarketItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3280,
																	"src": "2059:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3275_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"
																	}
																},
																"id": 3433,
																"indexExpression": {
																	"id": 3432,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "2074:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2059:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3275_storage",
																	"typeString": "struct NFTMarketplace.MarketItem storage ref"
																}
															},
															"id": 3434,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2082:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3270,
															"src": "2059:29:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3435,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3375,
															"src": "2090:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2097:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3428,
														"name": "MarketItemCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "2024:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256,bool)"
														}
													},
													"id": 3437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:78:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3438,
												"nodeType": "EmitStatement",
												"src": "2019:83:18"
											}
										]
									},
									"functionSelector": "9da1b02a",
									"id": 3440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createSale",
									"nameLocation": "1548:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1567:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3440,
												"src": "1559:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:16:18"
									},
									"returnParameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1590:0:18"
									},
									"scope": 3454,
									"src": "1539:571:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3452,
										"nodeType": "Block",
										"src": "2232:50:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3448,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "2256:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3449,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3444,
															"src": "2265:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3447,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "2243:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:31:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3451,
												"nodeType": "ExpressionStatement",
												"src": "2243:31:18"
											}
										]
									},
									"functionSelector": "2cb2f52e",
									"id": 3453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenMetadata",
									"nameLocation": "2163:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2191:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "2183:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "2214:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "2200:22:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2200:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:41:18"
									},
									"returnParameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:0:18"
									},
									"scope": 3454,
									"src": "2154:128:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3455,
							"src": "308:2148:18",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437,
								3292
							]
						}
					],
					"src": "33:2425:18"
				},
				"id": 18
			}
		}
	}
}