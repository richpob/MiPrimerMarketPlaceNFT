{
	"id": "0daaa3e6cd4ba1e513ac697d3d11002e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTMarketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n\r\ncontract NFTMarketplace is ERC721URIStorage {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIdCounter;\r\n    IERC20 private paymentToken;\r\n\r\n    // Estructura para manejar la venta de NFTs\r\n    struct Sale {\r\n        address seller;\r\n        uint256 price;\r\n        bool isForSale;\r\n    }\r\n\r\n    // Mapping de tokenId a su venta\r\n    mapping(uint256 => Sale) public sales;\r\n\r\n    event NFTListed(uint256 indexed tokenId, address seller, uint256 price);\r\n    event NFTRemoved(uint256 indexed tokenId);\r\n    event NFTSold(uint256 indexed tokenId, address buyer, uint256 price);\r\n\r\n    constructor(address _paymentToken) ERC721(\"MiArteDigital\", \"MAD\") {\r\n        paymentToken = IERC20(_paymentToken);\r\n    }\r\n\r\n    // Listar un NFT para la venta\r\n    function listNFT(uint256 tokenId, uint256 price) public {\r\n        require(ownerOf(tokenId) == msg.sender, \"Solo el propietario puede listar el NFT para la venta\");\r\n        require(price > 0, \"El precio debe ser mayor que 0\");\r\n\r\n        sales[tokenId] = Sale(msg.sender, price, true);\r\n\r\n        emit NFTListed(tokenId, msg.sender, price);\r\n    }\r\n\r\n    // Comprar un NFT\r\n    function buyNFT(uint256 tokenId) public {\r\n        Sale memory sale = sales[tokenId];\r\n        require(sale.isForSale, \"Este NFT no esta a la venta\");\r\n\r\n        // Transferir tokens ERC-20 como pago\r\n        require(paymentToken.transferFrom(msg.sender, sale.seller, sale.price), \"Pago fallido\");\r\n\r\n        // Transferir la propiedad del NFT\r\n        _transfer(sale.seller, msg.sender, tokenId);\r\n\r\n        // Limpiar el estado de la venta\r\n        sales[tokenId].isForSale = false;\r\n\r\n        emit NFTSold(tokenId, msg.sender, sale.price);\r\n    }\r\n\r\n    // Funciones de administración de metadatos ERC-721 y otras funcionalidades\r\n\r\n    // Actualizar metadatos del token (administradores)\r\n    function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {\r\n        _setTokenURI(tokenId, tokenURI);\r\n    }\r\n\r\n    // Funciones adicionales para la gestión por parte de los administradores\r\n    // Podrían incluir la modificación de la dirección del token de pago, ajustes en la política de comisiones, etc.\r\n\r\n    // Heredar y utilizar las funciones del contrato ERC-721 proporcionado para la acuñación, exhibición y transferencia de propiedad con lógica específica del proyecto.\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1566,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xC9 0xE7 BYTE 0x21 0xAE 0x2F 0x1F 0xC1 MOD 0x4B 0xEF 0x4F DUP11 0x27 EXTCODECOPY 0xCC 0xE7 0xD1 0xAB 0xC9 0xB2 DUP5 0xBA LOG4 0xD8 BLOBBASEFEE 0xA5 PUSH32 0x79809664736F6C63430008190033000000000000000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xC9 0xE7 BYTE 0x21 0xAE 0x2F 0x1F 0xC1 MOD 0x4B 0xEF 0x4F DUP11 0x27 EXTCODECOPY 0xCC 0xE7 0xD1 0xAB 0xC9 0xB2 DUP5 0xBA LOG4 0xD8 BLOBBASEFEE 0xA5 PUSH32 0x79809664736F6C63430008190033000000000000000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMarketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMarketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMarketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMarketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTMarketplace.sol": {
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NFTRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "listNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sales",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isForSale",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "updateTokenMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMarketplace.sol\":310:2679  contract NFTMarketplace is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMarketplace.sol\":924:1045  constructor(address _paymentToken) ERC721(\"MiArteDigital\", \"MAD\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x4d69417274654469676974616c00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d41440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/NFTMarketplace.sol\":1023:1036  _paymentToken */\n  dup1\n    /* \"contracts/NFTMarketplace.sol\":1001:1013  paymentToken */\n  0x08\n  0x00\n    /* \"contracts/NFTMarketplace.sol\":1001:1037  paymentToken = IERC20(_paymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMarketplace.sol\":924:1045  constructor(address _paymentToken) ERC721(\"MiArteDigital\", \"MAD\") {... */\n  pop\n    /* \"contracts/NFTMarketplace.sol\":310:2679  contract NFTMarketplace is ERC721URIStorage {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_53\n  tag_13\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":932:1051   */\ntag_52:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_54\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_19:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_20:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_21:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_22:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_59:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_61\n  tag_21\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1909:1993   */\ntag_60:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_23:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_24:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_25:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_26:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_66\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2624:2663   */\n  tag_67\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_27:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_28:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_29:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_71\n    /* \"#utility.yul\":3013:3047   */\n  tag_72\n    /* \"#utility.yul\":3022:3046   */\n  tag_73\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3013:3047   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2995:3048   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_30:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_31:\n    /* \"#utility.yul\":3251:3290   */\n  tag_76\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3312:3403   */\n  tag_77\n    /* \"#utility.yul\":3361:3402   */\n  tag_78\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_30\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_32:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_33:\n    /* \"#utility.yul\":3572:3604   */\n  tag_81\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3613:3678   */\n  tag_82\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_34:\n    /* \"#utility.yul\":3750:3870   */\ntag_84:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_87\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_33\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_35:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_90\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_23\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4101:4130   */\n  tag_91\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_24\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_92:\n    /* \"#utility.yul\":4328:4408   */\n  tag_93\n    /* \"#utility.yul\":4384:4406   */\n  tag_94\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_34\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_89:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_36:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_37:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_38:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_99\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_101\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_19\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_103\n  tag_20\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5233:5289   */\ntag_102:\n    /* \"#utility.yul\":5313:5351   */\n  tag_104\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_22\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5398:5465   */\n  tag_105\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_108:\n    /* \"#utility.yul\":6339:6406   */\n  tag_109\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_38\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_106)\n    /* \"#utility.yul\":5560:6178   */\ntag_107:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_110\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_23\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_111:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_115\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_37\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_114:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_106:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTMarketplace.sol\":310:2679  contract NFTMarketplace is ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMarketplace.sol\":310:2679  contract NFTMarketplace is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb5f522f7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x94383f14\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2cb2f52e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x51ed8288\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/NFTMarketplace.sol\":2166:2294  function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/NFTMarketplace.sol\":1468:2017  function buyNFT(uint256 tokenId) public {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMarketplace.sol\":1089:1437  function listNFT(uint256 tokenId, uint256 price) public {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/NFTMarketplace.sol\":675:712  mapping(uint256 => Sale) public sales */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_108:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMarketplace.sol\":2166:2294  function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {... */\n    tag_50:\n        /* \"contracts/NFTMarketplace.sol\":2255:2286  _setTokenURI(tokenId, tokenURI) */\n      tag_127\n        /* \"contracts/NFTMarketplace.sol\":2268:2275  tokenId */\n      dup3\n        /* \"contracts/NFTMarketplace.sol\":2277:2285  tokenURI */\n      dup3\n        /* \"contracts/NFTMarketplace.sol\":2255:2267  _setTokenURI */\n      tag_128\n        /* \"contracts/NFTMarketplace.sol\":2255:2286  _setTokenURI(tokenId, tokenURI) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/NFTMarketplace.sol\":2166:2294  function updateTokenMetadata(uint256 tokenId, string memory tokenURI) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMarketplace.sol\":1468:2017  function buyNFT(uint256 tokenId) public {... */\n    tag_56:\n        /* \"contracts/NFTMarketplace.sol\":1519:1535  Sale memory sale */\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1538:1543  sales */\n      0x09\n        /* \"contracts/NFTMarketplace.sol\":1538:1552  sales[tokenId] */\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1544:1551  tokenId */\n      dup4\n        /* \"contracts/NFTMarketplace.sol\":1538:1552  sales[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMarketplace.sol\":1519:1552  Sale memory sale = sales[tokenId] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTMarketplace.sol\":1571:1575  sale */\n      dup1\n        /* \"contracts/NFTMarketplace.sol\":1571:1585  sale.isForSale */\n      0x40\n      add\n      mload\n        /* \"contracts/NFTMarketplace.sol\":1563:1617  require(sale.isForSale, \"Este NFT no esta a la venta\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/NFTMarketplace.sol\":1685:1697  paymentToken */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMarketplace.sol\":1685:1710  paymentToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/NFTMarketplace.sol\":1711:1721  msg.sender */\n      caller\n        /* \"contracts/NFTMarketplace.sol\":1723:1727  sale */\n      dup4\n        /* \"contracts/NFTMarketplace.sol\":1723:1734  sale.seller */\n      0x00\n      add\n      mload\n        /* \"contracts/NFTMarketplace.sol\":1736:1740  sale */\n      dup5\n        /* \"contracts/NFTMarketplace.sol\":1736:1746  sale.price */\n      0x20\n      add\n      mload\n        /* \"contracts/NFTMarketplace.sol\":1685:1747  paymentToken.transferFrom(msg.sender, sale.seller, sale.price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/NFTMarketplace.sol\":1677:1764  require(paymentToken.transferFrom(msg.sender, sale.seller, sale.price), \"Pago fallido\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/NFTMarketplace.sol\":1821:1864  _transfer(sale.seller, msg.sender, tokenId) */\n      tag_144\n        /* \"contracts/NFTMarketplace.sol\":1831:1835  sale */\n      dup2\n        /* \"contracts/NFTMarketplace.sol\":1831:1842  sale.seller */\n      0x00\n      add\n      mload\n        /* \"contracts/NFTMarketplace.sol\":1844:1854  msg.sender */\n      caller\n        /* \"contracts/NFTMarketplace.sol\":1856:1863  tokenId */\n      dup5\n        /* \"contracts/NFTMarketplace.sol\":1821:1830  _transfer */\n      tag_145\n        /* \"contracts/NFTMarketplace.sol\":1821:1864  _transfer(sale.seller, msg.sender, tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/NFTMarketplace.sol\":1946:1951  false */\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1919:1924  sales */\n      0x09\n        /* \"contracts/NFTMarketplace.sol\":1919:1933  sales[tokenId] */\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1925:1932  tokenId */\n      dup5\n        /* \"contracts/NFTMarketplace.sol\":1919:1933  sales[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMarketplace.sol\":1919:1943  sales[tokenId].isForSale */\n      0x02\n      add\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1919:1951  sales[tokenId].isForSale = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMarketplace.sol\":1977:1984  tokenId */\n      dup2\n        /* \"contracts/NFTMarketplace.sol\":1969:2009  NFTSold(tokenId, msg.sender, sale.price) */\n      0x6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a\n        /* \"contracts/NFTMarketplace.sol\":1986:1996  msg.sender */\n      caller\n        /* \"contracts/NFTMarketplace.sol\":1998:2002  sale */\n      dup4\n        /* \"contracts/NFTMarketplace.sol\":1998:2008  sale.price */\n      0x20\n      add\n      mload\n        /* \"contracts/NFTMarketplace.sol\":1969:2009  NFTSold(tokenId, msg.sender, sale.price) */\n      mload(0x40)\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTMarketplace.sol\":1508:2017  {... */\n      pop\n        /* \"contracts/NFTMarketplace.sol\":1468:2017  function buyNFT(uint256 tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMarketplace.sol\":1089:1437  function listNFT(uint256 tokenId, uint256 price) public {... */\n    tag_70:\n        /* \"contracts/NFTMarketplace.sol\":1184:1194  msg.sender */\n      caller\n        /* \"contracts/NFTMarketplace.sol\":1164:1194  ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMarketplace.sol\":1164:1180  ownerOf(tokenId) */\n      tag_154\n        /* \"contracts/NFTMarketplace.sol\":1172:1179  tokenId */\n      dup4\n        /* \"contracts/NFTMarketplace.sol\":1164:1171  ownerOf */\n      tag_59\n        /* \"contracts/NFTMarketplace.sol\":1164:1180  ownerOf(tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/NFTMarketplace.sol\":1164:1194  ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMarketplace.sol\":1156:1252  require(ownerOf(tokenId) == msg.sender, \"Solo el propietario puede listar el NFT para la venta\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/NFTMarketplace.sol\":1279:1280  0 */\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1271:1276  price */\n      dup2\n        /* \"contracts/NFTMarketplace.sol\":1271:1280  price > 0 */\n      gt\n        /* \"contracts/NFTMarketplace.sol\":1263:1315  require(price > 0, \"El precio debe ser mayor que 0\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/NFTMarketplace.sol\":1345:1374  Sale(msg.sender, price, true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMarketplace.sol\":1350:1360  msg.sender */\n      caller\n        /* \"contracts/NFTMarketplace.sol\":1345:1374  Sale(msg.sender, price, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMarketplace.sol\":1362:1367  price */\n      dup3\n        /* \"contracts/NFTMarketplace.sol\":1345:1374  Sale(msg.sender, price, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMarketplace.sol\":1369:1373  true */\n      0x01\n        /* \"contracts/NFTMarketplace.sol\":1345:1374  Sale(msg.sender, price, true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMarketplace.sol\":1328:1333  sales */\n      0x09\n        /* \"contracts/NFTMarketplace.sol\":1328:1342  sales[tokenId] */\n      0x00\n        /* \"contracts/NFTMarketplace.sol\":1334:1341  tokenId */\n      dup5\n        /* \"contracts/NFTMarketplace.sol\":1328:1342  sales[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMarketplace.sol\":1328:1374  sales[tokenId] = Sale(msg.sender, price, true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/NFTMarketplace.sol\":1402:1409  tokenId */\n      dup2\n        /* \"contracts/NFTMarketplace.sol\":1392:1429  NFTListed(tokenId, msg.sender, price) */\n      0x5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a2\n        /* \"contracts/NFTMarketplace.sol\":1411:1421  msg.sender */\n      caller\n        /* \"contracts/NFTMarketplace.sol\":1423:1428  price */\n      dup4\n        /* \"contracts/NFTMarketplace.sol\":1392:1429  NFTListed(tokenId, msg.sender, price) */\n      mload(0x40)\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTMarketplace.sol\":1089:1437  function listNFT(uint256 tokenId, uint256 price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_102\n      jump\t// in\n    tag_163:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_102\n      jump\t// in\n    tag_164:\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMarketplace.sol\":675:712  mapping(uint256 => Sale) public sales */\n    tag_80:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_46\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_177:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_102\n      jump\t// in\n    tag_178:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_102\n      jump\t// in\n    tag_179:\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_181\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_180)\n    tag_181:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_182:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_182\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_176)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_187\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_176)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_176:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_193\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_194\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12112:12113  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12100  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12167:12168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12137:12170  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12211  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12222:12224  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12226:12233  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12243:12244  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12221  _update */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12246  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12285:12286  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12273  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12333:12340  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12310:12341  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12379:12383  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12375  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12427:12431  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12440  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12442:12455  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12406:12456  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12084:12473  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      0x01\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_240\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_245\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_244)\n    tag_245:\n      0x60\n      swap2\n      pop\n    tag_244:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_254:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_256\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_257)\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_260\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_264\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_282\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_285\n      tag_286\n      jump\t// in\n    tag_285:\n    tag_284:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_287\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_287:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_290\n      jumpi\n      tag_291\n      tag_292\n      jump\t// in\n    tag_291:\n    tag_290:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_288\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_296\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_298\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_302\n      jumpi\n      tag_303\n      tag_292\n      jump\t// in\n    tag_303:\n    tag_302:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_305\n      jumpi\n      tag_306\n      tag_292\n      jump\t// in\n    tag_306:\n    tag_305:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_308\n      jumpi\n      tag_309\n      tag_292\n      jump\t// in\n    tag_309:\n    tag_308:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_311\n      jumpi\n      tag_312\n      tag_292\n      jump\t// in\n    tag_312:\n    tag_311:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_314\n      jumpi\n      tag_315\n      tag_292\n      jump\t// in\n    tag_315:\n    tag_314:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_317\n      jumpi\n      tag_318\n      tag_292\n      jump\t// in\n    tag_318:\n    tag_317:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_320:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_321:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_322:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_323:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_324:\n        /* \"#utility.yul\":561:584   */\n      tag_392\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_323\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_393:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_325:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_395\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_324\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_398\n      tag_321\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":833:952   */\n    tag_397:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_399\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_325\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_326:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_327:\n        /* \"#utility.yul\":1268:1289   */\n      tag_402\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_326\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_404\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_327\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_328:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_329:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_330:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_331:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_332:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_410\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_328\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2222:2293   */\n      tag_411\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_329\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_412\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_330\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2392:2421   */\n      tag_413\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_331\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_32:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_415\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_332\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_333:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_334:\n        /* \"#utility.yul\":2909:2933   */\n      tag_418\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_333\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_419:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_335:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_421\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_334\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_35:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_424\n      tag_321\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3185:3304   */\n    tag_423:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_425\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_335\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_336:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_337:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_428\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_336\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_338:\n        /* \"#utility.yul\":3765:3789   */\n      tag_430\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_337\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_38:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_432\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_338\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_339:\n        /* \"#utility.yul\":4103:4127   */\n      tag_434\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_337\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_435:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_340:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_437\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_339\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_41:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_440\n      tag_321\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4396:4515   */\n    tag_439:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_441\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_340\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_442\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_335\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_45:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_445\n      tag_321\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4893:5012   */\n    tag_444:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_446\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_340\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_447\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_340\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_448\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_335\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_341:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5648   */\n    tag_342:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5637:5638   */\n      dup1\n        /* \"#utility.yul\":5630:5642   */\n      revert\n        /* \"#utility.yul\":5654:5834   */\n    tag_286:\n        /* \"#utility.yul\":5702:5779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5699:5700   */\n      0x00\n        /* \"#utility.yul\":5692:5780   */\n      mstore\n        /* \"#utility.yul\":5799:5803   */\n      0x41\n        /* \"#utility.yul\":5796:5797   */\n      0x04\n        /* \"#utility.yul\":5789:5804   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5840:6121   */\n    tag_343:\n        /* \"#utility.yul\":5923:5950   */\n      tag_453\n        /* \"#utility.yul\":5945:5949   */\n      dup3\n        /* \"#utility.yul\":5923:5950   */\n      tag_331\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5911:5951   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup2\n        /* \"#utility.yul\":6041:6051   */\n      dup2\n        /* \"#utility.yul\":6038:6060   */\n      lt\n        /* \"#utility.yul\":6017:6035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6005:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6036   */\n      gt\n        /* \"#utility.yul\":5999:6061   */\n      or\n        /* \"#utility.yul\":5996:6084   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":6064:6082   */\n      tag_455\n      tag_286\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5996:6084   */\n    tag_454:\n        /* \"#utility.yul\":6104:6114   */\n      dup1\n        /* \"#utility.yul\":6100:6102   */\n      0x40\n        /* \"#utility.yul\":6093:6115   */\n      mstore\n        /* \"#utility.yul\":5883:6121   */\n      pop\n        /* \"#utility.yul\":5840:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6256   */\n    tag_344:\n        /* \"#utility.yul\":6161:6167   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_457\n      tag_320\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6178:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6250   */\n      tag_458\n        /* \"#utility.yul\":6245:6249   */\n      dup3\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6217:6250   */\n      tag_343\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6127:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6570   */\n    tag_345:\n        /* \"#utility.yul\":6324:6328   */\n      0x00\n        /* \"#utility.yul\":6414:6432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6403:6433   */\n      gt\n        /* \"#utility.yul\":6400:6456   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":6436:6454   */\n      tag_461\n      tag_286\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6400:6456   */\n    tag_460:\n        /* \"#utility.yul\":6474:6503   */\n      tag_462\n        /* \"#utility.yul\":6496:6502   */\n      dup3\n        /* \"#utility.yul\":6474:6503   */\n      tag_331\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6466:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6562   */\n      0x20\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6563   */\n      add\n        /* \"#utility.yul\":6540:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6724   */\n    tag_346:\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6669:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup4\n        /* \"#utility.yul\":6651:6681   */\n      calldatacopy\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6706:6712   */\n      dup4\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6690:6717   */\n      mstore\n        /* \"#utility.yul\":6576:6724   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7155   */\n    tag_347:\n        /* \"#utility.yul\":6808:6813   */\n      0x00\n        /* \"#utility.yul\":6833:6899   */\n      tag_465\n        /* \"#utility.yul\":6849:6898   */\n      tag_466\n        /* \"#utility.yul\":6891:6897   */\n      dup5\n        /* \"#utility.yul\":6849:6898   */\n      tag_345\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6833:6899   */\n      tag_344\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6824:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6920   */\n      dup2\n        /* \"#utility.yul\":6908:6929   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x20\n        /* \"#utility.yul\":6953:6958   */\n      dup2\n        /* \"#utility.yul\":6949:6965   */\n      add\n        /* \"#utility.yul\":6998:7001   */\n      dup5\n        /* \"#utility.yul\":6989:6995   */\n      dup5\n        /* \"#utility.yul\":6984:6987   */\n      dup5\n        /* \"#utility.yul\":6980:6996   */\n      add\n        /* \"#utility.yul\":6977:7002   */\n      gt\n        /* \"#utility.yul\":6974:7086   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_468\n      tag_342\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6974:7086   */\n    tag_467:\n        /* \"#utility.yul\":7095:7149   */\n      tag_469\n        /* \"#utility.yul\":7142:7148   */\n      dup5\n        /* \"#utility.yul\":7137:7140   */\n      dup3\n        /* \"#utility.yul\":7132:7135   */\n      dup6\n        /* \"#utility.yul\":7095:7149   */\n      tag_346\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6814:7155   */\n      pop\n        /* \"#utility.yul\":6730:7155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7175:7515   */\n    tag_348:\n        /* \"#utility.yul\":7231:7236   */\n      0x00\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7265:7271   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7257:7284   */\n      slt\n        /* \"#utility.yul\":7247:7369   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_472\n      tag_341\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7247:7369   */\n    tag_471:\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7392:7412   */\n      calldataload\n        /* \"#utility.yul\":7430:7509   */\n      tag_473\n        /* \"#utility.yul\":7505:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7490:7494   */\n      0x20\n        /* \"#utility.yul\":7482:7488   */\n      dup7\n        /* \"#utility.yul\":7478:7495   */\n      add\n        /* \"#utility.yul\":7430:7509   */\n      tag_347\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7421:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7515   */\n      pop\n        /* \"#utility.yul\":7175:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:8175   */\n    tag_49:\n        /* \"#utility.yul\":7599:7605   */\n      0x00\n        /* \"#utility.yul\":7607:7613   */\n      dup1\n        /* \"#utility.yul\":7656:7658   */\n      0x40\n        /* \"#utility.yul\":7644:7653   */\n      dup4\n        /* \"#utility.yul\":7635:7642   */\n      dup6\n        /* \"#utility.yul\":7631:7654   */\n      sub\n        /* \"#utility.yul\":7627:7659   */\n      slt\n        /* \"#utility.yul\":7624:7743   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":7662:7741   */\n      tag_476\n      tag_321\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7624:7743   */\n    tag_475:\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7807:7860   */\n      tag_477\n        /* \"#utility.yul\":7852:7859   */\n      dup6\n        /* \"#utility.yul\":7843:7849   */\n      dup3\n        /* \"#utility.yul\":7832:7841   */\n      dup7\n        /* \"#utility.yul\":7828:7850   */\n      add\n        /* \"#utility.yul\":7807:7860   */\n      tag_335\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7797:7860   */\n      swap3\n      pop\n        /* \"#utility.yul\":7753:7870   */\n      pop\n        /* \"#utility.yul\":7937:7939   */\n      0x20\n        /* \"#utility.yul\":7926:7935   */\n      dup4\n        /* \"#utility.yul\":7922:7940   */\n      add\n        /* \"#utility.yul\":7909:7941   */\n      calldataload\n        /* \"#utility.yul\":7968:7986   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7960:7966   */\n      dup2\n        /* \"#utility.yul\":7957:7987   */\n      gt\n        /* \"#utility.yul\":7954:8071   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":7990:8069   */\n      tag_479\n      tag_322\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7954:8071   */\n    tag_478:\n        /* \"#utility.yul\":8095:8158   */\n      tag_480\n        /* \"#utility.yul\":8150:8157   */\n      dup6\n        /* \"#utility.yul\":8141:8147   */\n      dup3\n        /* \"#utility.yul\":8130:8139   */\n      dup7\n        /* \"#utility.yul\":8126:8148   */\n      add\n        /* \"#utility.yul\":8095:8158   */\n      tag_348\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8085:8158   */\n      swap2\n      pop\n        /* \"#utility.yul\":7880:8168   */\n      pop\n        /* \"#utility.yul\":7521:8175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8181:8510   */\n    tag_63:\n        /* \"#utility.yul\":8240:8246   */\n      0x00\n        /* \"#utility.yul\":8289:8291   */\n      0x20\n        /* \"#utility.yul\":8277:8286   */\n      dup3\n        /* \"#utility.yul\":8268:8275   */\n      dup5\n        /* \"#utility.yul\":8264:8287   */\n      sub\n        /* \"#utility.yul\":8260:8292   */\n      slt\n        /* \"#utility.yul\":8257:8376   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8295:8374   */\n      tag_483\n      tag_321\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8257:8376   */\n    tag_482:\n        /* \"#utility.yul\":8415:8416   */\n      0x00\n        /* \"#utility.yul\":8440:8493   */\n      tag_484\n        /* \"#utility.yul\":8485:8492   */\n      dup5\n        /* \"#utility.yul\":8476:8482   */\n      dup3\n        /* \"#utility.yul\":8465:8474   */\n      dup6\n        /* \"#utility.yul\":8461:8483   */\n      add\n        /* \"#utility.yul\":8440:8493   */\n      tag_340\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8430:8493   */\n      swap2\n      pop\n        /* \"#utility.yul\":8386:8503   */\n      pop\n        /* \"#utility.yul\":8181:8510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8516:8634   */\n    tag_349:\n        /* \"#utility.yul\":8603:8627   */\n      tag_486\n        /* \"#utility.yul\":8621:8626   */\n      dup2\n        /* \"#utility.yul\":8603:8627   */\n      tag_333\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8598:8601   */\n      dup3\n        /* \"#utility.yul\":8591:8628   */\n      mstore\n        /* \"#utility.yul\":8516:8634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8640:8862   */\n    tag_66:\n        /* \"#utility.yul\":8733:8737   */\n      0x00\n        /* \"#utility.yul\":8771:8773   */\n      0x20\n        /* \"#utility.yul\":8760:8769   */\n      dup3\n        /* \"#utility.yul\":8756:8774   */\n      add\n        /* \"#utility.yul\":8748:8774   */\n      swap1\n      pop\n        /* \"#utility.yul\":8784:8855   */\n      tag_488\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8841:8850   */\n      dup4\n        /* \"#utility.yul\":8837:8854   */\n      add\n        /* \"#utility.yul\":8828:8834   */\n      dup5\n        /* \"#utility.yul\":8784:8855   */\n      tag_349\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8640:8862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:9342   */\n    tag_69:\n        /* \"#utility.yul\":8936:8942   */\n      0x00\n        /* \"#utility.yul\":8944:8950   */\n      dup1\n        /* \"#utility.yul\":8993:8995   */\n      0x40\n        /* \"#utility.yul\":8981:8990   */\n      dup4\n        /* \"#utility.yul\":8972:8979   */\n      dup6\n        /* \"#utility.yul\":8968:8991   */\n      sub\n        /* \"#utility.yul\":8964:8996   */\n      slt\n        /* \"#utility.yul\":8961:9080   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":8999:9078   */\n      tag_491\n      tag_321\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8961:9080   */\n    tag_490:\n        /* \"#utility.yul\":9119:9120   */\n      0x00\n        /* \"#utility.yul\":9144:9197   */\n      tag_492\n        /* \"#utility.yul\":9189:9196   */\n      dup6\n        /* \"#utility.yul\":9180:9186   */\n      dup3\n        /* \"#utility.yul\":9169:9178   */\n      dup7\n        /* \"#utility.yul\":9165:9187   */\n      add\n        /* \"#utility.yul\":9144:9197   */\n      tag_335\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9134:9197   */\n      swap3\n      pop\n        /* \"#utility.yul\":9090:9207   */\n      pop\n        /* \"#utility.yul\":9246:9248   */\n      0x20\n        /* \"#utility.yul\":9272:9325   */\n      tag_493\n        /* \"#utility.yul\":9317:9324   */\n      dup6\n        /* \"#utility.yul\":9308:9314   */\n      dup3\n        /* \"#utility.yul\":9297:9306   */\n      dup7\n        /* \"#utility.yul\":9293:9315   */\n      add\n        /* \"#utility.yul\":9272:9325   */\n      tag_335\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9262:9325   */\n      swap2\n      pop\n        /* \"#utility.yul\":9217:9335   */\n      pop\n        /* \"#utility.yul\":8868:9342   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9348:9464   */\n    tag_350:\n        /* \"#utility.yul\":9418:9439   */\n      tag_495\n        /* \"#utility.yul\":9433:9438   */\n      dup2\n        /* \"#utility.yul\":9418:9439   */\n      tag_326\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9411:9416   */\n      dup2\n        /* \"#utility.yul\":9408:9440   */\n      eq\n        /* \"#utility.yul\":9398:9458   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9451:9452   */\n      dup1\n        /* \"#utility.yul\":9444:9456   */\n      revert\n        /* \"#utility.yul\":9398:9458   */\n    tag_496:\n        /* \"#utility.yul\":9348:9464   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9470:9603   */\n    tag_351:\n        /* \"#utility.yul\":9513:9518   */\n      0x00\n        /* \"#utility.yul\":9551:9557   */\n      dup2\n        /* \"#utility.yul\":9538:9558   */\n      calldataload\n        /* \"#utility.yul\":9529:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9567:9597   */\n      tag_498\n        /* \"#utility.yul\":9591:9596   */\n      dup2\n        /* \"#utility.yul\":9567:9597   */\n      tag_350\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9470:9603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9609:10077   */\n    tag_76:\n        /* \"#utility.yul\":9674:9680   */\n      0x00\n        /* \"#utility.yul\":9682:9688   */\n      dup1\n        /* \"#utility.yul\":9731:9733   */\n      0x40\n        /* \"#utility.yul\":9719:9728   */\n      dup4\n        /* \"#utility.yul\":9710:9717   */\n      dup6\n        /* \"#utility.yul\":9706:9729   */\n      sub\n        /* \"#utility.yul\":9702:9734   */\n      slt\n        /* \"#utility.yul\":9699:9818   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":9737:9816   */\n      tag_501\n      tag_321\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9699:9818   */\n    tag_500:\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9882:9935   */\n      tag_502\n        /* \"#utility.yul\":9927:9934   */\n      dup6\n        /* \"#utility.yul\":9918:9924   */\n      dup3\n        /* \"#utility.yul\":9907:9916   */\n      dup7\n        /* \"#utility.yul\":9903:9925   */\n      add\n        /* \"#utility.yul\":9882:9935   */\n      tag_340\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9872:9935   */\n      swap3\n      pop\n        /* \"#utility.yul\":9828:9945   */\n      pop\n        /* \"#utility.yul\":9984:9986   */\n      0x20\n        /* \"#utility.yul\":10010:10060   */\n      tag_503\n        /* \"#utility.yul\":10052:10059   */\n      dup6\n        /* \"#utility.yul\":10043:10049   */\n      dup3\n        /* \"#utility.yul\":10032:10041   */\n      dup7\n        /* \"#utility.yul\":10028:10050   */\n      add\n        /* \"#utility.yul\":10010:10060   */\n      tag_351\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10000:10060   */\n      swap2\n      pop\n        /* \"#utility.yul\":9955:10070   */\n      pop\n        /* \"#utility.yul\":9609:10077   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10083:10513   */\n    tag_82:\n        /* \"#utility.yul\":10226:10230   */\n      0x00\n        /* \"#utility.yul\":10264:10266   */\n      0x60\n        /* \"#utility.yul\":10253:10262   */\n      dup3\n        /* \"#utility.yul\":10249:10267   */\n      add\n        /* \"#utility.yul\":10241:10267   */\n      swap1\n      pop\n        /* \"#utility.yul\":10277:10348   */\n      tag_505\n        /* \"#utility.yul\":10345:10346   */\n      0x00\n        /* \"#utility.yul\":10334:10343   */\n      dup4\n        /* \"#utility.yul\":10330:10347   */\n      add\n        /* \"#utility.yul\":10321:10327   */\n      dup7\n        /* \"#utility.yul\":10277:10348   */\n      tag_338\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10358:10430   */\n      tag_506\n        /* \"#utility.yul\":10426:10428   */\n      0x20\n        /* \"#utility.yul\":10415:10424   */\n      dup4\n        /* \"#utility.yul\":10411:10429   */\n      add\n        /* \"#utility.yul\":10402:10408   */\n      dup6\n        /* \"#utility.yul\":10358:10430   */\n      tag_349\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10440:10506   */\n      tag_507\n        /* \"#utility.yul\":10502:10504   */\n      0x40\n        /* \"#utility.yul\":10491:10500   */\n      dup4\n        /* \"#utility.yul\":10487:10505   */\n      add\n        /* \"#utility.yul\":10478:10484   */\n      dup5\n        /* \"#utility.yul\":10440:10506   */\n      tag_327\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10083:10513   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10519:10826   */\n    tag_352:\n        /* \"#utility.yul\":10580:10584   */\n      0x00\n        /* \"#utility.yul\":10670:10688   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10662:10668   */\n      dup3\n        /* \"#utility.yul\":10659:10689   */\n      gt\n        /* \"#utility.yul\":10656:10712   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":10692:10710   */\n      tag_510\n      tag_286\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10656:10712   */\n    tag_509:\n        /* \"#utility.yul\":10730:10759   */\n      tag_511\n        /* \"#utility.yul\":10752:10758   */\n      dup3\n        /* \"#utility.yul\":10730:10759   */\n      tag_331\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10722:10759   */\n      swap1\n      pop\n        /* \"#utility.yul\":10814:10818   */\n      0x20\n        /* \"#utility.yul\":10808:10812   */\n      dup2\n        /* \"#utility.yul\":10804:10819   */\n      add\n        /* \"#utility.yul\":10796:10819   */\n      swap1\n      pop\n        /* \"#utility.yul\":10519:10826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10832:11255   */\n    tag_353:\n        /* \"#utility.yul\":10909:10914   */\n      0x00\n        /* \"#utility.yul\":10934:10999   */\n      tag_513\n        /* \"#utility.yul\":10950:10998   */\n      tag_514\n        /* \"#utility.yul\":10991:10997   */\n      dup5\n        /* \"#utility.yul\":10950:10998   */\n      tag_352\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10934:10999   */\n      tag_344\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10925:10999   */\n      swap1\n      pop\n        /* \"#utility.yul\":11022:11028   */\n      dup3\n        /* \"#utility.yul\":11015:11020   */\n      dup2\n        /* \"#utility.yul\":11008:11029   */\n      mstore\n        /* \"#utility.yul\":11060:11064   */\n      0x20\n        /* \"#utility.yul\":11053:11058   */\n      dup2\n        /* \"#utility.yul\":11049:11065   */\n      add\n        /* \"#utility.yul\":11098:11101   */\n      dup5\n        /* \"#utility.yul\":11089:11095   */\n      dup5\n        /* \"#utility.yul\":11084:11087   */\n      dup5\n        /* \"#utility.yul\":11080:11096   */\n      add\n        /* \"#utility.yul\":11077:11102   */\n      gt\n        /* \"#utility.yul\":11074:11186   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":11105:11184   */\n      tag_516\n      tag_342\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11074:11186   */\n    tag_515:\n        /* \"#utility.yul\":11195:11249   */\n      tag_517\n        /* \"#utility.yul\":11242:11248   */\n      dup5\n        /* \"#utility.yul\":11237:11240   */\n      dup3\n        /* \"#utility.yul\":11232:11235   */\n      dup6\n        /* \"#utility.yul\":11195:11249   */\n      tag_346\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10915:11255   */\n      pop\n        /* \"#utility.yul\":10832:11255   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11274:11612   */\n    tag_354:\n        /* \"#utility.yul\":11329:11334   */\n      0x00\n        /* \"#utility.yul\":11378:11381   */\n      dup3\n        /* \"#utility.yul\":11371:11375   */\n      0x1f\n        /* \"#utility.yul\":11363:11369   */\n      dup4\n        /* \"#utility.yul\":11359:11376   */\n      add\n        /* \"#utility.yul\":11355:11382   */\n      slt\n        /* \"#utility.yul\":11345:11467   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":11386:11465   */\n      tag_520\n      tag_341\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11345:11467   */\n    tag_519:\n        /* \"#utility.yul\":11503:11509   */\n      dup2\n        /* \"#utility.yul\":11490:11510   */\n      calldataload\n        /* \"#utility.yul\":11528:11606   */\n      tag_521\n        /* \"#utility.yul\":11602:11605   */\n      dup5\n        /* \"#utility.yul\":11594:11600   */\n      dup3\n        /* \"#utility.yul\":11587:11591   */\n      0x20\n        /* \"#utility.yul\":11579:11585   */\n      dup7\n        /* \"#utility.yul\":11575:11592   */\n      add\n        /* \"#utility.yul\":11528:11606   */\n      tag_353\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11519:11606   */\n      swap2\n      pop\n        /* \"#utility.yul\":11335:11612   */\n      pop\n        /* \"#utility.yul\":11274:11612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11618:12561   */\n    tag_85:\n        /* \"#utility.yul\":11713:11719   */\n      0x00\n        /* \"#utility.yul\":11721:11727   */\n      dup1\n        /* \"#utility.yul\":11729:11735   */\n      0x00\n        /* \"#utility.yul\":11737:11743   */\n      dup1\n        /* \"#utility.yul\":11786:11789   */\n      0x80\n        /* \"#utility.yul\":11774:11783   */\n      dup6\n        /* \"#utility.yul\":11765:11772   */\n      dup8\n        /* \"#utility.yul\":11761:11784   */\n      sub\n        /* \"#utility.yul\":11757:11790   */\n      slt\n        /* \"#utility.yul\":11754:11874   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":11793:11872   */\n      tag_524\n      tag_321\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11754:11874   */\n    tag_523:\n        /* \"#utility.yul\":11913:11914   */\n      0x00\n        /* \"#utility.yul\":11938:11991   */\n      tag_525\n        /* \"#utility.yul\":11983:11990   */\n      dup8\n        /* \"#utility.yul\":11974:11980   */\n      dup3\n        /* \"#utility.yul\":11963:11972   */\n      dup9\n        /* \"#utility.yul\":11959:11981   */\n      add\n        /* \"#utility.yul\":11938:11991   */\n      tag_340\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11928:11991   */\n      swap5\n      pop\n        /* \"#utility.yul\":11884:12001   */\n      pop\n        /* \"#utility.yul\":12040:12042   */\n      0x20\n        /* \"#utility.yul\":12066:12119   */\n      tag_526\n        /* \"#utility.yul\":12111:12118   */\n      dup8\n        /* \"#utility.yul\":12102:12108   */\n      dup3\n        /* \"#utility.yul\":12091:12100   */\n      dup9\n        /* \"#utility.yul\":12087:12109   */\n      add\n        /* \"#utility.yul\":12066:12119   */\n      tag_340\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12056:12119   */\n      swap4\n      pop\n        /* \"#utility.yul\":12011:12129   */\n      pop\n        /* \"#utility.yul\":12168:12170   */\n      0x40\n        /* \"#utility.yul\":12194:12247   */\n      tag_527\n        /* \"#utility.yul\":12239:12246   */\n      dup8\n        /* \"#utility.yul\":12230:12236   */\n      dup3\n        /* \"#utility.yul\":12219:12228   */\n      dup9\n        /* \"#utility.yul\":12215:12237   */\n      add\n        /* \"#utility.yul\":12194:12247   */\n      tag_335\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12184:12247   */\n      swap3\n      pop\n        /* \"#utility.yul\":12139:12257   */\n      pop\n        /* \"#utility.yul\":12324:12326   */\n      0x60\n        /* \"#utility.yul\":12313:12322   */\n      dup6\n        /* \"#utility.yul\":12309:12327   */\n      add\n        /* \"#utility.yul\":12296:12328   */\n      calldataload\n        /* \"#utility.yul\":12355:12373   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12347:12353   */\n      dup2\n        /* \"#utility.yul\":12344:12374   */\n      gt\n        /* \"#utility.yul\":12341:12458   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":12377:12456   */\n      tag_529\n      tag_322\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12341:12458   */\n    tag_528:\n        /* \"#utility.yul\":12482:12544   */\n      tag_530\n        /* \"#utility.yul\":12536:12543   */\n      dup8\n        /* \"#utility.yul\":12527:12533   */\n      dup3\n        /* \"#utility.yul\":12516:12525   */\n      dup9\n        /* \"#utility.yul\":12512:12534   */\n      add\n        /* \"#utility.yul\":12482:12544   */\n      tag_354\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12472:12544   */\n      swap2\n      pop\n        /* \"#utility.yul\":12267:12554   */\n      pop\n        /* \"#utility.yul\":11618:12561   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12567:13041   */\n    tag_93:\n        /* \"#utility.yul\":12635:12641   */\n      0x00\n        /* \"#utility.yul\":12643:12649   */\n      dup1\n        /* \"#utility.yul\":12692:12694   */\n      0x40\n        /* \"#utility.yul\":12680:12689   */\n      dup4\n        /* \"#utility.yul\":12671:12678   */\n      dup6\n        /* \"#utility.yul\":12667:12690   */\n      sub\n        /* \"#utility.yul\":12663:12695   */\n      slt\n        /* \"#utility.yul\":12660:12779   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":12698:12777   */\n      tag_533\n      tag_321\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12660:12779   */\n    tag_532:\n        /* \"#utility.yul\":12818:12819   */\n      0x00\n        /* \"#utility.yul\":12843:12896   */\n      tag_534\n        /* \"#utility.yul\":12888:12895   */\n      dup6\n        /* \"#utility.yul\":12879:12885   */\n      dup3\n        /* \"#utility.yul\":12868:12877   */\n      dup7\n        /* \"#utility.yul\":12864:12886   */\n      add\n        /* \"#utility.yul\":12843:12896   */\n      tag_340\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12833:12896   */\n      swap3\n      pop\n        /* \"#utility.yul\":12789:12906   */\n      pop\n        /* \"#utility.yul\":12945:12947   */\n      0x20\n        /* \"#utility.yul\":12971:13024   */\n      tag_535\n        /* \"#utility.yul\":13016:13023   */\n      dup6\n        /* \"#utility.yul\":13007:13013   */\n      dup3\n        /* \"#utility.yul\":12996:13005   */\n      dup7\n        /* \"#utility.yul\":12992:13014   */\n      add\n        /* \"#utility.yul\":12971:13024   */\n      tag_340\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12961:13024   */\n      swap2\n      pop\n        /* \"#utility.yul\":12916:13034   */\n      pop\n        /* \"#utility.yul\":12567:13041   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13047:13227   */\n    tag_355:\n        /* \"#utility.yul\":13095:13172   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13092:13093   */\n      0x00\n        /* \"#utility.yul\":13085:13173   */\n      mstore\n        /* \"#utility.yul\":13192:13196   */\n      0x22\n        /* \"#utility.yul\":13189:13190   */\n      0x04\n        /* \"#utility.yul\":13182:13197   */\n      mstore\n        /* \"#utility.yul\":13216:13220   */\n      0x24\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13206:13221   */\n      revert\n        /* \"#utility.yul\":13233:13553   */\n    tag_102:\n        /* \"#utility.yul\":13277:13283   */\n      0x00\n        /* \"#utility.yul\":13314:13315   */\n      0x02\n        /* \"#utility.yul\":13308:13312   */\n      dup3\n        /* \"#utility.yul\":13304:13316   */\n      div\n        /* \"#utility.yul\":13294:13316   */\n      swap1\n      pop\n        /* \"#utility.yul\":13361:13362   */\n      0x01\n        /* \"#utility.yul\":13355:13359   */\n      dup3\n        /* \"#utility.yul\":13351:13363   */\n      and\n        /* \"#utility.yul\":13382:13400   */\n      dup1\n        /* \"#utility.yul\":13372:13453   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":13438:13442   */\n      0x7f\n        /* \"#utility.yul\":13430:13436   */\n      dup3\n        /* \"#utility.yul\":13426:13443   */\n      and\n        /* \"#utility.yul\":13416:13443   */\n      swap2\n      pop\n        /* \"#utility.yul\":13372:13453   */\n    tag_538:\n        /* \"#utility.yul\":13500:13502   */\n      0x20\n        /* \"#utility.yul\":13492:13498   */\n      dup3\n        /* \"#utility.yul\":13489:13503   */\n      lt\n        /* \"#utility.yul\":13469:13487   */\n      dup2\n        /* \"#utility.yul\":13466:13504   */\n      sub\n        /* \"#utility.yul\":13463:13547   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":13519:13537   */\n      tag_540\n      tag_355\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13463:13547   */\n    tag_539:\n        /* \"#utility.yul\":13284:13553   */\n      pop\n        /* \"#utility.yul\":13233:13553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13559:14001   */\n    tag_125:\n        /* \"#utility.yul\":13708:13712   */\n      0x00\n        /* \"#utility.yul\":13746:13748   */\n      0x60\n        /* \"#utility.yul\":13735:13744   */\n      dup3\n        /* \"#utility.yul\":13731:13749   */\n      add\n        /* \"#utility.yul\":13723:13749   */\n      swap1\n      pop\n        /* \"#utility.yul\":13759:13830   */\n      tag_542\n        /* \"#utility.yul\":13827:13828   */\n      0x00\n        /* \"#utility.yul\":13816:13825   */\n      dup4\n        /* \"#utility.yul\":13812:13829   */\n      add\n        /* \"#utility.yul\":13803:13809   */\n      dup7\n        /* \"#utility.yul\":13759:13830   */\n      tag_338\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13840:13912   */\n      tag_543\n        /* \"#utility.yul\":13908:13910   */\n      0x20\n        /* \"#utility.yul\":13897:13906   */\n      dup4\n        /* \"#utility.yul\":13893:13911   */\n      add\n        /* \"#utility.yul\":13884:13890   */\n      dup6\n        /* \"#utility.yul\":13840:13912   */\n      tag_349\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13922:13994   */\n      tag_544\n        /* \"#utility.yul\":13990:13992   */\n      0x40\n        /* \"#utility.yul\":13979:13988   */\n      dup4\n        /* \"#utility.yul\":13975:13993   */\n      add\n        /* \"#utility.yul\":13966:13972   */\n      dup5\n        /* \"#utility.yul\":13922:13994   */\n      tag_338\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13559:14001   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14007:14184   */\n    tag_356:\n        /* \"#utility.yul\":14147:14176   */\n      0x45737465204e4654206e6f20657374612061206c612076656e74610000000000\n        /* \"#utility.yul\":14143:14144   */\n      0x00\n        /* \"#utility.yul\":14135:14141   */\n      dup3\n        /* \"#utility.yul\":14131:14145   */\n      add\n        /* \"#utility.yul\":14124:14177   */\n      mstore\n        /* \"#utility.yul\":14007:14184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14190:14556   */\n    tag_357:\n        /* \"#utility.yul\":14332:14335   */\n      0x00\n        /* \"#utility.yul\":14353:14420   */\n      tag_547\n        /* \"#utility.yul\":14417:14419   */\n      0x1b\n        /* \"#utility.yul\":14412:14415   */\n      dup4\n        /* \"#utility.yul\":14353:14420   */\n      tag_329\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14346:14420   */\n      swap2\n      pop\n        /* \"#utility.yul\":14429:14522   */\n      tag_548\n        /* \"#utility.yul\":14518:14521   */\n      dup3\n        /* \"#utility.yul\":14429:14522   */\n      tag_356\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":14547:14549   */\n      0x20\n        /* \"#utility.yul\":14542:14545   */\n      dup3\n        /* \"#utility.yul\":14538:14550   */\n      add\n        /* \"#utility.yul\":14531:14550   */\n      swap1\n      pop\n        /* \"#utility.yul\":14190:14556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14562:14981   */\n    tag_134:\n        /* \"#utility.yul\":14728:14732   */\n      0x00\n        /* \"#utility.yul\":14766:14768   */\n      0x20\n        /* \"#utility.yul\":14755:14764   */\n      dup3\n        /* \"#utility.yul\":14751:14769   */\n      add\n        /* \"#utility.yul\":14743:14769   */\n      swap1\n      pop\n        /* \"#utility.yul\":14815:14824   */\n      dup2\n        /* \"#utility.yul\":14809:14813   */\n      dup2\n        /* \"#utility.yul\":14805:14825   */\n      sub\n        /* \"#utility.yul\":14801:14802   */\n      0x00\n        /* \"#utility.yul\":14790:14799   */\n      dup4\n        /* \"#utility.yul\":14786:14803   */\n      add\n        /* \"#utility.yul\":14779:14826   */\n      mstore\n        /* \"#utility.yul\":14843:14974   */\n      tag_550\n        /* \"#utility.yul\":14969:14973   */\n      dup2\n        /* \"#utility.yul\":14843:14974   */\n      tag_357\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14835:14974   */\n      swap1\n      pop\n        /* \"#utility.yul\":14562:14981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14987:15429   */\n    tag_136:\n        /* \"#utility.yul\":15136:15140   */\n      0x00\n        /* \"#utility.yul\":15174:15176   */\n      0x60\n        /* \"#utility.yul\":15163:15172   */\n      dup3\n        /* \"#utility.yul\":15159:15177   */\n      add\n        /* \"#utility.yul\":15151:15177   */\n      swap1\n      pop\n        /* \"#utility.yul\":15187:15258   */\n      tag_552\n        /* \"#utility.yul\":15255:15256   */\n      0x00\n        /* \"#utility.yul\":15244:15253   */\n      dup4\n        /* \"#utility.yul\":15240:15257   */\n      add\n        /* \"#utility.yul\":15231:15237   */\n      dup7\n        /* \"#utility.yul\":15187:15258   */\n      tag_338\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15268:15340   */\n      tag_553\n        /* \"#utility.yul\":15336:15338   */\n      0x20\n        /* \"#utility.yul\":15325:15334   */\n      dup4\n        /* \"#utility.yul\":15321:15339   */\n      add\n        /* \"#utility.yul\":15312:15318   */\n      dup6\n        /* \"#utility.yul\":15268:15340   */\n      tag_338\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15350:15422   */\n      tag_554\n        /* \"#utility.yul\":15418:15420   */\n      0x40\n        /* \"#utility.yul\":15407:15416   */\n      dup4\n        /* \"#utility.yul\":15403:15421   */\n      add\n        /* \"#utility.yul\":15394:15400   */\n      dup5\n        /* \"#utility.yul\":15350:15422   */\n      tag_349\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14987:15429   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15435:15572   */\n    tag_358:\n        /* \"#utility.yul\":15489:15494   */\n      0x00\n        /* \"#utility.yul\":15520:15526   */\n      dup2\n        /* \"#utility.yul\":15514:15527   */\n      mload\n        /* \"#utility.yul\":15505:15527   */\n      swap1\n      pop\n        /* \"#utility.yul\":15536:15566   */\n      tag_556\n        /* \"#utility.yul\":15560:15565   */\n      dup2\n        /* \"#utility.yul\":15536:15566   */\n      tag_350\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15435:15572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15578:15923   */\n    tag_140:\n        /* \"#utility.yul\":15645:15651   */\n      0x00\n        /* \"#utility.yul\":15694:15696   */\n      0x20\n        /* \"#utility.yul\":15682:15691   */\n      dup3\n        /* \"#utility.yul\":15673:15680   */\n      dup5\n        /* \"#utility.yul\":15669:15692   */\n      sub\n        /* \"#utility.yul\":15665:15697   */\n      slt\n        /* \"#utility.yul\":15662:15781   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":15700:15779   */\n      tag_559\n      tag_321\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15662:15781   */\n    tag_558:\n        /* \"#utility.yul\":15820:15821   */\n      0x00\n        /* \"#utility.yul\":15845:15906   */\n      tag_560\n        /* \"#utility.yul\":15898:15905   */\n      dup5\n        /* \"#utility.yul\":15889:15895   */\n      dup3\n        /* \"#utility.yul\":15878:15887   */\n      dup6\n        /* \"#utility.yul\":15874:15896   */\n      add\n        /* \"#utility.yul\":15845:15906   */\n      tag_358\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15835:15906   */\n      swap2\n      pop\n        /* \"#utility.yul\":15791:15916   */\n      pop\n        /* \"#utility.yul\":15578:15923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15929:16091   */\n    tag_359:\n        /* \"#utility.yul\":16069:16083   */\n      0x5061676f2066616c6c69646f0000000000000000000000000000000000000000\n        /* \"#utility.yul\":16065:16066   */\n      0x00\n        /* \"#utility.yul\":16057:16063   */\n      dup3\n        /* \"#utility.yul\":16053:16067   */\n      add\n        /* \"#utility.yul\":16046:16084   */\n      mstore\n        /* \"#utility.yul\":15929:16091   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16097:16463   */\n    tag_360:\n        /* \"#utility.yul\":16239:16242   */\n      0x00\n        /* \"#utility.yul\":16260:16327   */\n      tag_563\n        /* \"#utility.yul\":16324:16326   */\n      0x0c\n        /* \"#utility.yul\":16319:16322   */\n      dup4\n        /* \"#utility.yul\":16260:16327   */\n      tag_329\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16253:16327   */\n      swap2\n      pop\n        /* \"#utility.yul\":16336:16429   */\n      tag_564\n        /* \"#utility.yul\":16425:16428   */\n      dup3\n        /* \"#utility.yul\":16336:16429   */\n      tag_359\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":16454:16456   */\n      0x20\n        /* \"#utility.yul\":16449:16452   */\n      dup3\n        /* \"#utility.yul\":16445:16457   */\n      add\n        /* \"#utility.yul\":16438:16457   */\n      swap1\n      pop\n        /* \"#utility.yul\":16097:16463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16469:16888   */\n    tag_143:\n        /* \"#utility.yul\":16635:16639   */\n      0x00\n        /* \"#utility.yul\":16673:16675   */\n      0x20\n        /* \"#utility.yul\":16662:16671   */\n      dup3\n        /* \"#utility.yul\":16658:16676   */\n      add\n        /* \"#utility.yul\":16650:16676   */\n      swap1\n      pop\n        /* \"#utility.yul\":16722:16731   */\n      dup2\n        /* \"#utility.yul\":16716:16720   */\n      dup2\n        /* \"#utility.yul\":16712:16732   */\n      sub\n        /* \"#utility.yul\":16708:16709   */\n      0x00\n        /* \"#utility.yul\":16697:16706   */\n      dup4\n        /* \"#utility.yul\":16693:16710   */\n      add\n        /* \"#utility.yul\":16686:16733   */\n      mstore\n        /* \"#utility.yul\":16750:16881   */\n      tag_566\n        /* \"#utility.yul\":16876:16880   */\n      dup2\n        /* \"#utility.yul\":16750:16881   */\n      tag_360\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16742:16881   */\n      swap1\n      pop\n        /* \"#utility.yul\":16469:16888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16894:17226   */\n    tag_147:\n        /* \"#utility.yul\":17015:17019   */\n      0x00\n        /* \"#utility.yul\":17053:17055   */\n      0x40\n        /* \"#utility.yul\":17042:17051   */\n      dup3\n        /* \"#utility.yul\":17038:17056   */\n      add\n        /* \"#utility.yul\":17030:17056   */\n      swap1\n      pop\n        /* \"#utility.yul\":17066:17137   */\n      tag_568\n        /* \"#utility.yul\":17134:17135   */\n      0x00\n        /* \"#utility.yul\":17123:17132   */\n      dup4\n        /* \"#utility.yul\":17119:17136   */\n      add\n        /* \"#utility.yul\":17110:17116   */\n      dup6\n        /* \"#utility.yul\":17066:17137   */\n      tag_338\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17147:17219   */\n      tag_569\n        /* \"#utility.yul\":17215:17217   */\n      0x20\n        /* \"#utility.yul\":17204:17213   */\n      dup4\n        /* \"#utility.yul\":17200:17218   */\n      add\n        /* \"#utility.yul\":17191:17197   */\n      dup5\n        /* \"#utility.yul\":17147:17219   */\n      tag_349\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16894:17226   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17232:17472   */\n    tag_361:\n        /* \"#utility.yul\":17372:17406   */\n      0x536f6c6f20656c2070726f706965746172696f207075656465206c6973746172\n        /* \"#utility.yul\":17368:17369   */\n      0x00\n        /* \"#utility.yul\":17360:17366   */\n      dup3\n        /* \"#utility.yul\":17356:17370   */\n      add\n        /* \"#utility.yul\":17349:17407   */\n      mstore\n        /* \"#utility.yul\":17441:17464   */\n      0x20656c204e46542070617261206c612076656e74610000000000000000000000\n        /* \"#utility.yul\":17436:17438   */\n      0x20\n        /* \"#utility.yul\":17428:17434   */\n      dup3\n        /* \"#utility.yul\":17424:17439   */\n      add\n        /* \"#utility.yul\":17417:17465   */\n      mstore\n        /* \"#utility.yul\":17232:17472   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17478:17844   */\n    tag_362:\n        /* \"#utility.yul\":17620:17623   */\n      0x00\n        /* \"#utility.yul\":17641:17708   */\n      tag_572\n        /* \"#utility.yul\":17705:17707   */\n      0x35\n        /* \"#utility.yul\":17700:17703   */\n      dup4\n        /* \"#utility.yul\":17641:17708   */\n      tag_329\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17634:17708   */\n      swap2\n      pop\n        /* \"#utility.yul\":17717:17810   */\n      tag_573\n        /* \"#utility.yul\":17806:17809   */\n      dup3\n        /* \"#utility.yul\":17717:17810   */\n      tag_361\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17835:17837   */\n      0x40\n        /* \"#utility.yul\":17830:17833   */\n      dup3\n        /* \"#utility.yul\":17826:17838   */\n      add\n        /* \"#utility.yul\":17819:17838   */\n      swap1\n      pop\n        /* \"#utility.yul\":17478:17844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17850:18269   */\n    tag_157:\n        /* \"#utility.yul\":18016:18020   */\n      0x00\n        /* \"#utility.yul\":18054:18056   */\n      0x20\n        /* \"#utility.yul\":18043:18052   */\n      dup3\n        /* \"#utility.yul\":18039:18057   */\n      add\n        /* \"#utility.yul\":18031:18057   */\n      swap1\n      pop\n        /* \"#utility.yul\":18103:18112   */\n      dup2\n        /* \"#utility.yul\":18097:18101   */\n      dup2\n        /* \"#utility.yul\":18093:18113   */\n      sub\n        /* \"#utility.yul\":18089:18090   */\n      0x00\n        /* \"#utility.yul\":18078:18087   */\n      dup4\n        /* \"#utility.yul\":18074:18091   */\n      add\n        /* \"#utility.yul\":18067:18114   */\n      mstore\n        /* \"#utility.yul\":18131:18262   */\n      tag_575\n        /* \"#utility.yul\":18257:18261   */\n      dup2\n        /* \"#utility.yul\":18131:18262   */\n      tag_362\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":18123:18262   */\n      swap1\n      pop\n        /* \"#utility.yul\":17850:18269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18275:18455   */\n    tag_363:\n        /* \"#utility.yul\":18415:18447   */\n      0x456c2070726563696f206465626520736572206d61796f722071756520300000\n        /* \"#utility.yul\":18411:18412   */\n      0x00\n        /* \"#utility.yul\":18403:18409   */\n      dup3\n        /* \"#utility.yul\":18399:18413   */\n      add\n        /* \"#utility.yul\":18392:18448   */\n      mstore\n        /* \"#utility.yul\":18275:18455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18461:18827   */\n    tag_364:\n        /* \"#utility.yul\":18603:18606   */\n      0x00\n        /* \"#utility.yul\":18624:18691   */\n      tag_578\n        /* \"#utility.yul\":18688:18690   */\n      0x1e\n        /* \"#utility.yul\":18683:18686   */\n      dup4\n        /* \"#utility.yul\":18624:18691   */\n      tag_329\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18617:18691   */\n      swap2\n      pop\n        /* \"#utility.yul\":18700:18793   */\n      tag_579\n        /* \"#utility.yul\":18789:18792   */\n      dup3\n        /* \"#utility.yul\":18700:18793   */\n      tag_363\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18818:18820   */\n      0x20\n        /* \"#utility.yul\":18813:18816   */\n      dup3\n        /* \"#utility.yul\":18809:18821   */\n      add\n        /* \"#utility.yul\":18802:18821   */\n      swap1\n      pop\n        /* \"#utility.yul\":18461:18827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18833:19252   */\n    tag_160:\n        /* \"#utility.yul\":18999:19003   */\n      0x00\n        /* \"#utility.yul\":19037:19039   */\n      0x20\n        /* \"#utility.yul\":19026:19035   */\n      dup3\n        /* \"#utility.yul\":19022:19040   */\n      add\n        /* \"#utility.yul\":19014:19040   */\n      swap1\n      pop\n        /* \"#utility.yul\":19086:19095   */\n      dup2\n        /* \"#utility.yul\":19080:19084   */\n      dup2\n        /* \"#utility.yul\":19076:19096   */\n      sub\n        /* \"#utility.yul\":19072:19073   */\n      0x00\n        /* \"#utility.yul\":19061:19070   */\n      dup4\n        /* \"#utility.yul\":19057:19074   */\n      add\n        /* \"#utility.yul\":19050:19097   */\n      mstore\n        /* \"#utility.yul\":19114:19245   */\n      tag_581\n        /* \"#utility.yul\":19240:19244   */\n      dup2\n        /* \"#utility.yul\":19114:19245   */\n      tag_364\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":19106:19245   */\n      swap1\n      pop\n        /* \"#utility.yul\":18833:19252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19258:19406   */\n    tag_365:\n        /* \"#utility.yul\":19360:19371   */\n      0x00\n        /* \"#utility.yul\":19397:19400   */\n      dup2\n        /* \"#utility.yul\":19382:19400   */\n      swap1\n      pop\n        /* \"#utility.yul\":19258:19406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19412:19802   */\n    tag_366:\n        /* \"#utility.yul\":19518:19521   */\n      0x00\n        /* \"#utility.yul\":19546:19585   */\n      tag_584\n        /* \"#utility.yul\":19579:19584   */\n      dup3\n        /* \"#utility.yul\":19546:19585   */\n      tag_328\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":19601:19690   */\n      tag_585\n        /* \"#utility.yul\":19683:19689   */\n      dup2\n        /* \"#utility.yul\":19678:19681   */\n      dup6\n        /* \"#utility.yul\":19601:19690   */\n      tag_365\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":19594:19690   */\n      swap4\n      pop\n        /* \"#utility.yul\":19699:19764   */\n      tag_586\n        /* \"#utility.yul\":19757:19763   */\n      dup2\n        /* \"#utility.yul\":19752:19755   */\n      dup6\n        /* \"#utility.yul\":19745:19749   */\n      0x20\n        /* \"#utility.yul\":19738:19743   */\n      dup7\n        /* \"#utility.yul\":19734:19750   */\n      add\n        /* \"#utility.yul\":19699:19764   */\n      tag_330\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":19789:19795   */\n      dup1\n        /* \"#utility.yul\":19784:19787   */\n      dup5\n        /* \"#utility.yul\":19780:19796   */\n      add\n        /* \"#utility.yul\":19773:19796   */\n      swap2\n      pop\n        /* \"#utility.yul\":19522:19802   */\n      pop\n        /* \"#utility.yul\":19412:19802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19808:20243   */\n    tag_188:\n        /* \"#utility.yul\":19988:19991   */\n      0x00\n        /* \"#utility.yul\":20010:20105   */\n      tag_588\n        /* \"#utility.yul\":20101:20104   */\n      dup3\n        /* \"#utility.yul\":20092:20098   */\n      dup6\n        /* \"#utility.yul\":20010:20105   */\n      tag_366\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":20003:20105   */\n      swap2\n      pop\n        /* \"#utility.yul\":20122:20217   */\n      tag_589\n        /* \"#utility.yul\":20213:20216   */\n      dup3\n        /* \"#utility.yul\":20204:20210   */\n      dup5\n        /* \"#utility.yul\":20122:20217   */\n      tag_366\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":20115:20217   */\n      swap2\n      pop\n        /* \"#utility.yul\":20234:20237   */\n      dup2\n        /* \"#utility.yul\":20227:20237   */\n      swap1\n      pop\n        /* \"#utility.yul\":19808:20243   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20249:20390   */\n    tag_367:\n        /* \"#utility.yul\":20298:20302   */\n      0x00\n        /* \"#utility.yul\":20321:20324   */\n      dup2\n        /* \"#utility.yul\":20313:20324   */\n      swap1\n      pop\n        /* \"#utility.yul\":20344:20347   */\n      dup2\n        /* \"#utility.yul\":20341:20342   */\n      0x00\n        /* \"#utility.yul\":20334:20348   */\n      mstore\n        /* \"#utility.yul\":20378:20382   */\n      0x20\n        /* \"#utility.yul\":20375:20376   */\n      0x00\n        /* \"#utility.yul\":20365:20383   */\n      keccak256\n        /* \"#utility.yul\":20357:20383   */\n      swap1\n      pop\n        /* \"#utility.yul\":20249:20390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20396:20489   */\n    tag_368:\n        /* \"#utility.yul\":20433:20439   */\n      0x00\n        /* \"#utility.yul\":20480:20482   */\n      0x20\n        /* \"#utility.yul\":20475:20477   */\n      0x1f\n        /* \"#utility.yul\":20468:20473   */\n      dup4\n        /* \"#utility.yul\":20464:20478   */\n      add\n        /* \"#utility.yul\":20460:20483   */\n      div\n        /* \"#utility.yul\":20450:20483   */\n      swap1\n      pop\n        /* \"#utility.yul\":20396:20489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20495:20602   */\n    tag_369:\n        /* \"#utility.yul\":20539:20547   */\n      0x00\n        /* \"#utility.yul\":20589:20594   */\n      dup3\n        /* \"#utility.yul\":20583:20587   */\n      dup3\n        /* \"#utility.yul\":20579:20595   */\n      shl\n        /* \"#utility.yul\":20558:20595   */\n      swap1\n      pop\n        /* \"#utility.yul\":20495:20602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20608:21001   */\n    tag_370:\n        /* \"#utility.yul\":20677:20683   */\n      0x00\n        /* \"#utility.yul\":20727:20728   */\n      0x08\n        /* \"#utility.yul\":20715:20725   */\n      dup4\n        /* \"#utility.yul\":20711:20729   */\n      mul\n        /* \"#utility.yul\":20750:20847   */\n      tag_594\n        /* \"#utility.yul\":20780:20846   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20769:20778   */\n      dup3\n        /* \"#utility.yul\":20750:20847   */\n      tag_369\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20868:20907   */\n      tag_595\n        /* \"#utility.yul\":20898:20906   */\n      dup7\n        /* \"#utility.yul\":20887:20896   */\n      dup4\n        /* \"#utility.yul\":20868:20907   */\n      tag_369\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":20856:20907   */\n      swap6\n      pop\n        /* \"#utility.yul\":20940:20944   */\n      dup1\n        /* \"#utility.yul\":20936:20945   */\n      not\n        /* \"#utility.yul\":20929:20934   */\n      dup5\n        /* \"#utility.yul\":20925:20946   */\n      and\n        /* \"#utility.yul\":20916:20946   */\n      swap4\n      pop\n        /* \"#utility.yul\":20989:20993   */\n      dup1\n        /* \"#utility.yul\":20979:20987   */\n      dup7\n        /* \"#utility.yul\":20975:20994   */\n      and\n        /* \"#utility.yul\":20968:20973   */\n      dup5\n        /* \"#utility.yul\":20965:20995   */\n      or\n        /* \"#utility.yul\":20955:20995   */\n      swap3\n      pop\n        /* \"#utility.yul\":20684:21001   */\n      pop\n      pop\n        /* \"#utility.yul\":20608:21001   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21007:21067   */\n    tag_371:\n        /* \"#utility.yul\":21035:21038   */\n      0x00\n        /* \"#utility.yul\":21056:21061   */\n      dup2\n        /* \"#utility.yul\":21049:21061   */\n      swap1\n      pop\n        /* \"#utility.yul\":21007:21067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21073:21215   */\n    tag_372:\n        /* \"#utility.yul\":21123:21132   */\n      0x00\n        /* \"#utility.yul\":21156:21209   */\n      tag_598\n        /* \"#utility.yul\":21174:21208   */\n      tag_599\n        /* \"#utility.yul\":21183:21207   */\n      tag_600\n        /* \"#utility.yul\":21201:21206   */\n      dup5\n        /* \"#utility.yul\":21183:21207   */\n      tag_333\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":21174:21208   */\n      tag_371\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":21156:21209   */\n      tag_333\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":21143:21209   */\n      swap1\n      pop\n        /* \"#utility.yul\":21073:21215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21221:21296   */\n    tag_373:\n        /* \"#utility.yul\":21264:21267   */\n      0x00\n        /* \"#utility.yul\":21285:21290   */\n      dup2\n        /* \"#utility.yul\":21278:21290   */\n      swap1\n      pop\n        /* \"#utility.yul\":21221:21296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21302:21571   */\n    tag_374:\n        /* \"#utility.yul\":21412:21451   */\n      tag_603\n        /* \"#utility.yul\":21443:21450   */\n      dup4\n        /* \"#utility.yul\":21412:21451   */\n      tag_372\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21473:21564   */\n      tag_604\n        /* \"#utility.yul\":21522:21563   */\n      tag_605\n        /* \"#utility.yul\":21546:21562   */\n      dup3\n        /* \"#utility.yul\":21522:21563   */\n      tag_373\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":21514:21520   */\n      dup5\n        /* \"#utility.yul\":21507:21511   */\n      dup5\n        /* \"#utility.yul\":21501:21512   */\n      sload\n        /* \"#utility.yul\":21473:21564   */\n      tag_370\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":21467:21471   */\n      dup3\n        /* \"#utility.yul\":21460:21565   */\n      sstore\n        /* \"#utility.yul\":21378:21571   */\n      pop\n        /* \"#utility.yul\":21302:21571   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21577:21650   */\n    tag_375:\n        /* \"#utility.yul\":21622:21625   */\n      0x00\n        /* \"#utility.yul\":21577:21650   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21656:21845   */\n    tag_376:\n        /* \"#utility.yul\":21733:21765   */\n      tag_608\n      tag_375\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21774:21839   */\n      tag_609\n        /* \"#utility.yul\":21832:21838   */\n      dup2\n        /* \"#utility.yul\":21824:21830   */\n      dup5\n        /* \"#utility.yul\":21818:21822   */\n      dup5\n        /* \"#utility.yul\":21774:21839   */\n      tag_374\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21709:21845   */\n      pop\n        /* \"#utility.yul\":21656:21845   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21851:22037   */\n    tag_377:\n        /* \"#utility.yul\":21911:22031   */\n    tag_611:\n        /* \"#utility.yul\":21928:21931   */\n      dup2\n        /* \"#utility.yul\":21921:21926   */\n      dup2\n        /* \"#utility.yul\":21918:21932   */\n      lt\n        /* \"#utility.yul\":21911:22031   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":21982:22021   */\n      tag_614\n        /* \"#utility.yul\":22019:22020   */\n      0x00\n        /* \"#utility.yul\":22012:22017   */\n      dup3\n        /* \"#utility.yul\":21982:22021   */\n      tag_376\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21955:21956   */\n      0x01\n        /* \"#utility.yul\":21948:21953   */\n      dup2\n        /* \"#utility.yul\":21944:21957   */\n      add\n        /* \"#utility.yul\":21935:21957   */\n      swap1\n      pop\n        /* \"#utility.yul\":21911:22031   */\n      jump(tag_611)\n    tag_613:\n        /* \"#utility.yul\":21851:22037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22043:22586   */\n    tag_378:\n        /* \"#utility.yul\":22144:22146   */\n      0x1f\n        /* \"#utility.yul\":22139:22142   */\n      dup3\n        /* \"#utility.yul\":22136:22147   */\n      gt\n        /* \"#utility.yul\":22133:22579   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":22178:22216   */\n      tag_617\n        /* \"#utility.yul\":22210:22215   */\n      dup2\n        /* \"#utility.yul\":22178:22216   */\n      tag_367\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":22262:22291   */\n      tag_618\n        /* \"#utility.yul\":22280:22290   */\n      dup5\n        /* \"#utility.yul\":22262:22291   */\n      tag_368\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":22252:22260   */\n      dup2\n        /* \"#utility.yul\":22248:22292   */\n      add\n        /* \"#utility.yul\":22445:22447   */\n      0x20\n        /* \"#utility.yul\":22433:22443   */\n      dup6\n        /* \"#utility.yul\":22430:22448   */\n      lt\n        /* \"#utility.yul\":22427:22476   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":22466:22474   */\n      dup2\n        /* \"#utility.yul\":22451:22474   */\n      swap1\n      pop\n        /* \"#utility.yul\":22427:22476   */\n    tag_619:\n        /* \"#utility.yul\":22489:22569   */\n      tag_620\n        /* \"#utility.yul\":22545:22567   */\n      tag_621\n        /* \"#utility.yul\":22563:22566   */\n      dup6\n        /* \"#utility.yul\":22545:22567   */\n      tag_368\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22535:22543   */\n      dup4\n        /* \"#utility.yul\":22531:22568   */\n      add\n        /* \"#utility.yul\":22518:22529   */\n      dup3\n        /* \"#utility.yul\":22489:22569   */\n      tag_377\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":22148:22579   */\n      pop\n      pop\n        /* \"#utility.yul\":22133:22579   */\n    tag_616:\n        /* \"#utility.yul\":22043:22586   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22592:22709   */\n    tag_379:\n        /* \"#utility.yul\":22646:22654   */\n      0x00\n        /* \"#utility.yul\":22696:22701   */\n      dup3\n        /* \"#utility.yul\":22690:22694   */\n      dup3\n        /* \"#utility.yul\":22686:22702   */\n      shr\n        /* \"#utility.yul\":22665:22702   */\n      swap1\n      pop\n        /* \"#utility.yul\":22592:22709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22715:22884   */\n    tag_380:\n        /* \"#utility.yul\":22759:22765   */\n      0x00\n        /* \"#utility.yul\":22792:22843   */\n      tag_624\n        /* \"#utility.yul\":22840:22841   */\n      0x00\n        /* \"#utility.yul\":22836:22842   */\n      not\n        /* \"#utility.yul\":22828:22833   */\n      dup5\n        /* \"#utility.yul\":22825:22826   */\n      0x08\n        /* \"#utility.yul\":22821:22834   */\n      mul\n        /* \"#utility.yul\":22792:22843   */\n      tag_379\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22788:22844   */\n      not\n        /* \"#utility.yul\":22873:22877   */\n      dup1\n        /* \"#utility.yul\":22867:22871   */\n      dup4\n        /* \"#utility.yul\":22863:22878   */\n      and\n        /* \"#utility.yul\":22853:22878   */\n      swap2\n      pop\n        /* \"#utility.yul\":22766:22884   */\n      pop\n        /* \"#utility.yul\":22715:22884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22889:23184   */\n    tag_381:\n        /* \"#utility.yul\":22965:22969   */\n      0x00\n        /* \"#utility.yul\":23111:23140   */\n      tag_626\n        /* \"#utility.yul\":23136:23139   */\n      dup4\n        /* \"#utility.yul\":23130:23134   */\n      dup4\n        /* \"#utility.yul\":23111:23140   */\n      tag_380\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":23103:23140   */\n      swap2\n      pop\n        /* \"#utility.yul\":23173:23176   */\n      dup3\n        /* \"#utility.yul\":23170:23171   */\n      0x02\n        /* \"#utility.yul\":23166:23177   */\n      mul\n        /* \"#utility.yul\":23160:23164   */\n      dup3\n        /* \"#utility.yul\":23157:23178   */\n      or\n        /* \"#utility.yul\":23149:23178   */\n      swap1\n      pop\n        /* \"#utility.yul\":22889:23184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23189:24584   */\n    tag_217:\n        /* \"#utility.yul\":23306:23343   */\n      tag_628\n        /* \"#utility.yul\":23339:23342   */\n      dup3\n        /* \"#utility.yul\":23306:23343   */\n      tag_328\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":23408:23426   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23400:23406   */\n      dup2\n        /* \"#utility.yul\":23397:23427   */\n      gt\n        /* \"#utility.yul\":23394:23450   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":23430:23448   */\n      tag_630\n      tag_286\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23394:23450   */\n    tag_629:\n        /* \"#utility.yul\":23474:23512   */\n      tag_631\n        /* \"#utility.yul\":23506:23510   */\n      dup3\n        /* \"#utility.yul\":23500:23511   */\n      sload\n        /* \"#utility.yul\":23474:23512   */\n      tag_102\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":23559:23626   */\n      tag_632\n        /* \"#utility.yul\":23619:23625   */\n      dup3\n        /* \"#utility.yul\":23611:23617   */\n      dup3\n        /* \"#utility.yul\":23605:23609   */\n      dup6\n        /* \"#utility.yul\":23559:23626   */\n      tag_378\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":23653:23654   */\n      0x00\n        /* \"#utility.yul\":23677:23681   */\n      0x20\n        /* \"#utility.yul\":23664:23681   */\n      swap1\n      pop\n        /* \"#utility.yul\":23709:23711   */\n      0x1f\n        /* \"#utility.yul\":23701:23707   */\n      dup4\n        /* \"#utility.yul\":23698:23712   */\n      gt\n        /* \"#utility.yul\":23726:23727   */\n      0x01\n        /* \"#utility.yul\":23721:24339   */\n      dup2\n      eq\n      tag_634\n      jumpi\n        /* \"#utility.yul\":24383:24384   */\n      0x00\n        /* \"#utility.yul\":24400:24406   */\n      dup5\n        /* \"#utility.yul\":24397:24474   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":24449:24458   */\n      dup3\n        /* \"#utility.yul\":24444:24447   */\n      dup8\n        /* \"#utility.yul\":24440:24459   */\n      add\n        /* \"#utility.yul\":24434:24460   */\n      mload\n        /* \"#utility.yul\":24425:24460   */\n      swap1\n      pop\n        /* \"#utility.yul\":24397:24474   */\n    tag_635:\n        /* \"#utility.yul\":24500:24567   */\n      tag_636\n        /* \"#utility.yul\":24560:24566   */\n      dup6\n        /* \"#utility.yul\":24553:24558   */\n      dup3\n        /* \"#utility.yul\":24500:24567   */\n      tag_381\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":24494:24498   */\n      dup7\n        /* \"#utility.yul\":24487:24568   */\n      sstore\n        /* \"#utility.yul\":24356:24578   */\n      pop\n        /* \"#utility.yul\":23691:24578   */\n      jump(tag_633)\n        /* \"#utility.yul\":23721:24339   */\n    tag_634:\n        /* \"#utility.yul\":23773:23777   */\n      0x1f\n        /* \"#utility.yul\":23769:23778   */\n      not\n        /* \"#utility.yul\":23761:23767   */\n      dup5\n        /* \"#utility.yul\":23757:23779   */\n      and\n        /* \"#utility.yul\":23807:23844   */\n      tag_637\n        /* \"#utility.yul\":23839:23843   */\n      dup7\n        /* \"#utility.yul\":23807:23844   */\n      tag_367\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":23866:23867   */\n      0x00\n        /* \"#utility.yul\":23880:24088   */\n    tag_638:\n        /* \"#utility.yul\":23894:23901   */\n      dup3\n        /* \"#utility.yul\":23891:23892   */\n      dup2\n        /* \"#utility.yul\":23888:23902   */\n      lt\n        /* \"#utility.yul\":23880:24088   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":23973:23982   */\n      dup5\n        /* \"#utility.yul\":23968:23971   */\n      dup10\n        /* \"#utility.yul\":23964:23983   */\n      add\n        /* \"#utility.yul\":23958:23984   */\n      mload\n        /* \"#utility.yul\":23950:23956   */\n      dup3\n        /* \"#utility.yul\":23943:23985   */\n      sstore\n        /* \"#utility.yul\":24024:24025   */\n      0x01\n        /* \"#utility.yul\":24016:24022   */\n      dup3\n        /* \"#utility.yul\":24012:24026   */\n      add\n        /* \"#utility.yul\":24002:24026   */\n      swap2\n      pop\n        /* \"#utility.yul\":24071:24073   */\n      0x20\n        /* \"#utility.yul\":24060:24069   */\n      dup6\n        /* \"#utility.yul\":24056:24074   */\n      add\n        /* \"#utility.yul\":24043:24074   */\n      swap5\n      pop\n        /* \"#utility.yul\":23917:23921   */\n      0x20\n        /* \"#utility.yul\":23914:23915   */\n      dup2\n        /* \"#utility.yul\":23910:23922   */\n      add\n        /* \"#utility.yul\":23905:23922   */\n      swap1\n      pop\n        /* \"#utility.yul\":23880:24088   */\n      jump(tag_638)\n    tag_640:\n        /* \"#utility.yul\":24116:24122   */\n      dup7\n        /* \"#utility.yul\":24107:24114   */\n      dup4\n        /* \"#utility.yul\":24104:24123   */\n      lt\n        /* \"#utility.yul\":24101:24280   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":24174:24183   */\n      dup5\n        /* \"#utility.yul\":24169:24172   */\n      dup10\n        /* \"#utility.yul\":24165:24184   */\n      add\n        /* \"#utility.yul\":24159:24185   */\n      mload\n        /* \"#utility.yul\":24217:24265   */\n      tag_642\n        /* \"#utility.yul\":24259:24263   */\n      0x1f\n        /* \"#utility.yul\":24251:24257   */\n      dup10\n        /* \"#utility.yul\":24247:24264   */\n      and\n        /* \"#utility.yul\":24236:24245   */\n      dup3\n        /* \"#utility.yul\":24217:24265   */\n      tag_380\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":24209:24215   */\n      dup4\n        /* \"#utility.yul\":24202:24266   */\n      sstore\n        /* \"#utility.yul\":24124:24280   */\n      pop\n        /* \"#utility.yul\":24101:24280   */\n    tag_641:\n        /* \"#utility.yul\":24326:24327   */\n      0x01\n        /* \"#utility.yul\":24322:24323   */\n      0x02\n        /* \"#utility.yul\":24314:24320   */\n      dup9\n        /* \"#utility.yul\":24310:24324   */\n      mul\n        /* \"#utility.yul\":24306:24328   */\n      add\n        /* \"#utility.yul\":24300:24304   */\n      dup9\n        /* \"#utility.yul\":24293:24329   */\n      sstore\n        /* \"#utility.yul\":23728:24339   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23691:24578   */\n    tag_633:\n      pop\n        /* \"#utility.yul\":23281:24584   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23189:24584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24590:24688   */\n    tag_382:\n        /* \"#utility.yul\":24641:24647   */\n      0x00\n        /* \"#utility.yul\":24675:24680   */\n      dup2\n        /* \"#utility.yul\":24669:24681   */\n      mload\n        /* \"#utility.yul\":24659:24681   */\n      swap1\n      pop\n        /* \"#utility.yul\":24590:24688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24694:24862   */\n    tag_383:\n        /* \"#utility.yul\":24777:24788   */\n      0x00\n        /* \"#utility.yul\":24811:24817   */\n      dup3\n        /* \"#utility.yul\":24806:24809   */\n      dup3\n        /* \"#utility.yul\":24799:24818   */\n      mstore\n        /* \"#utility.yul\":24851:24855   */\n      0x20\n        /* \"#utility.yul\":24846:24849   */\n      dup3\n        /* \"#utility.yul\":24842:24856   */\n      add\n        /* \"#utility.yul\":24827:24856   */\n      swap1\n      pop\n        /* \"#utility.yul\":24694:24862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24868:25241   */\n    tag_384:\n        /* \"#utility.yul\":24954:24957   */\n      0x00\n        /* \"#utility.yul\":24982:25020   */\n      tag_646\n        /* \"#utility.yul\":25014:25019   */\n      dup3\n        /* \"#utility.yul\":24982:25020   */\n      tag_382\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":25036:25106   */\n      tag_647\n        /* \"#utility.yul\":25099:25105   */\n      dup2\n        /* \"#utility.yul\":25094:25097   */\n      dup6\n        /* \"#utility.yul\":25036:25106   */\n      tag_383\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":25029:25106   */\n      swap4\n      pop\n        /* \"#utility.yul\":25115:25180   */\n      tag_648\n        /* \"#utility.yul\":25173:25179   */\n      dup2\n        /* \"#utility.yul\":25168:25171   */\n      dup6\n        /* \"#utility.yul\":25161:25165   */\n      0x20\n        /* \"#utility.yul\":25154:25159   */\n      dup7\n        /* \"#utility.yul\":25150:25166   */\n      add\n        /* \"#utility.yul\":25115:25180   */\n      tag_330\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":25205:25234   */\n      tag_649\n        /* \"#utility.yul\":25227:25233   */\n      dup2\n        /* \"#utility.yul\":25205:25234   */\n      tag_331\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":25200:25203   */\n      dup5\n        /* \"#utility.yul\":25196:25235   */\n      add\n        /* \"#utility.yul\":25189:25235   */\n      swap2\n      pop\n        /* \"#utility.yul\":24958:25241   */\n      pop\n        /* \"#utility.yul\":24868:25241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25247:25887   */\n    tag_236:\n        /* \"#utility.yul\":25442:25446   */\n      0x00\n        /* \"#utility.yul\":25480:25483   */\n      0x80\n        /* \"#utility.yul\":25469:25478   */\n      dup3\n        /* \"#utility.yul\":25465:25484   */\n      add\n        /* \"#utility.yul\":25457:25484   */\n      swap1\n      pop\n        /* \"#utility.yul\":25494:25565   */\n      tag_651\n        /* \"#utility.yul\":25562:25563   */\n      0x00\n        /* \"#utility.yul\":25551:25560   */\n      dup4\n        /* \"#utility.yul\":25547:25564   */\n      add\n        /* \"#utility.yul\":25538:25544   */\n      dup8\n        /* \"#utility.yul\":25494:25565   */\n      tag_338\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":25575:25647   */\n      tag_652\n        /* \"#utility.yul\":25643:25645   */\n      0x20\n        /* \"#utility.yul\":25632:25641   */\n      dup4\n        /* \"#utility.yul\":25628:25646   */\n      add\n        /* \"#utility.yul\":25619:25625   */\n      dup7\n        /* \"#utility.yul\":25575:25647   */\n      tag_338\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":25657:25729   */\n      tag_653\n        /* \"#utility.yul\":25725:25727   */\n      0x40\n        /* \"#utility.yul\":25714:25723   */\n      dup4\n        /* \"#utility.yul\":25710:25728   */\n      add\n        /* \"#utility.yul\":25701:25707   */\n      dup6\n        /* \"#utility.yul\":25657:25729   */\n      tag_349\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":25776:25785   */\n      dup2\n        /* \"#utility.yul\":25770:25774   */\n      dup2\n        /* \"#utility.yul\":25766:25786   */\n      sub\n        /* \"#utility.yul\":25761:25763   */\n      0x60\n        /* \"#utility.yul\":25750:25759   */\n      dup4\n        /* \"#utility.yul\":25746:25764   */\n      add\n        /* \"#utility.yul\":25739:25787   */\n      mstore\n        /* \"#utility.yul\":25804:25880   */\n      tag_654\n        /* \"#utility.yul\":25875:25879   */\n      dup2\n        /* \"#utility.yul\":25866:25872   */\n      dup5\n        /* \"#utility.yul\":25804:25880   */\n      tag_384\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":25796:25880   */\n      swap1\n      pop\n        /* \"#utility.yul\":25247:25887   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25893:26034   */\n    tag_385:\n        /* \"#utility.yul\":25949:25954   */\n      0x00\n        /* \"#utility.yul\":25980:25986   */\n      dup2\n        /* \"#utility.yul\":25974:25987   */\n      mload\n        /* \"#utility.yul\":25965:25987   */\n      swap1\n      pop\n        /* \"#utility.yul\":25996:26028   */\n      tag_656\n        /* \"#utility.yul\":26022:26027   */\n      dup2\n        /* \"#utility.yul\":25996:26028   */\n      tag_324\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":25893:26034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26040:26389   */\n    tag_239:\n        /* \"#utility.yul\":26109:26115   */\n      0x00\n        /* \"#utility.yul\":26158:26160   */\n      0x20\n        /* \"#utility.yul\":26146:26155   */\n      dup3\n        /* \"#utility.yul\":26137:26144   */\n      dup5\n        /* \"#utility.yul\":26133:26156   */\n      sub\n        /* \"#utility.yul\":26129:26161   */\n      slt\n        /* \"#utility.yul\":26126:26245   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":26164:26243   */\n      tag_659\n      tag_321\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":26126:26245   */\n    tag_658:\n        /* \"#utility.yul\":26284:26285   */\n      0x00\n        /* \"#utility.yul\":26309:26372   */\n      tag_660\n        /* \"#utility.yul\":26364:26371   */\n      dup5\n        /* \"#utility.yul\":26355:26361   */\n      dup3\n        /* \"#utility.yul\":26344:26353   */\n      dup6\n        /* \"#utility.yul\":26340:26362   */\n      add\n        /* \"#utility.yul\":26309:26372   */\n      tag_385\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":26299:26372   */\n      swap2\n      pop\n        /* \"#utility.yul\":26255:26382   */\n      pop\n        /* \"#utility.yul\":26040:26389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26395:26575   */\n    tag_292:\n        /* \"#utility.yul\":26443:26520   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26440:26441   */\n      0x00\n        /* \"#utility.yul\":26433:26521   */\n      mstore\n        /* \"#utility.yul\":26540:26544   */\n      0x12\n        /* \"#utility.yul\":26537:26538   */\n      0x04\n        /* \"#utility.yul\":26530:26545   */\n      mstore\n        /* \"#utility.yul\":26564:26568   */\n      0x24\n        /* \"#utility.yul\":26561:26562   */\n      0x00\n        /* \"#utility.yul\":26554:26569   */\n      revert\n\n    auxdata: 0xa2646970667358221220408c0974f48abade34b815cadd2eaf6e972d115e4599f2b9e79c26ddcc4ca38164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3312": {
									"entryPoint": null,
									"id": 3312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_464": {
									"entryPoint": null,
									"id": 464,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:19",
										"nodeType": "YulBlock",
										"src": "0:6426:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "759:80:19",
													"nodeType": "YulBlock",
													"src": "759:80:19",
													"statements": [
														{
															"nativeSrc": "769:22:19",
															"nodeType": "YulAssignment",
															"src": "769:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:19"
																},
																"nativeSrc": "778:13:19",
																"nodeType": "YulFunctionCall",
																"src": "778:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:19"
																},
																"nativeSrc": "800:33:19",
																"nodeType": "YulFunctionCall",
																"src": "800:33:19"
															},
															"nativeSrc": "800:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:19",
														"nodeType": "YulTypedName",
														"src": "737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:19",
														"nodeType": "YulTypedName",
														"src": "745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:19",
														"nodeType": "YulTypedName",
														"src": "753:5:19",
														"type": ""
													}
												],
												"src": "696:143:19"
											},
											{
												"body": {
													"nativeSrc": "922:274:19",
													"nodeType": "YulBlock",
													"src": "922:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:19",
																"nodeType": "YulBlock",
																"src": "968:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:19"
																			},
																			"nativeSrc": "970:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:19"
																		},
																		"nativeSrc": "970:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:19"
																		},
																		"nativeSrc": "939:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:19",
																		"nodeType": "YulLiteral",
																		"src": "964:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:19"
																},
																"nativeSrc": "935:32:19",
																"nodeType": "YulFunctionCall",
																"src": "935:32:19"
															},
															"nativeSrc": "932:119:19",
															"nodeType": "YulIf",
															"src": "932:119:19"
														},
														{
															"nativeSrc": "1061:128:19",
															"nodeType": "YulBlock",
															"src": "1061:128:19",
															"statements": [
																{
																	"nativeSrc": "1076:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:19"
																				},
																				"nativeSrc": "1147:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:19"
																		},
																		"nativeSrc": "1115:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:19",
														"nodeType": "YulTypedName",
														"src": "892:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:19",
														"nodeType": "YulTypedName",
														"src": "903:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:19",
														"nodeType": "YulTypedName",
														"src": "915:6:19",
														"type": ""
													}
												],
												"src": "845:351:19"
											},
											{
												"body": {
													"nativeSrc": "1261:40:19",
													"nodeType": "YulBlock",
													"src": "1261:40:19",
													"statements": [
														{
															"nativeSrc": "1272:22:19",
															"nodeType": "YulAssignment",
															"src": "1272:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:19"
																},
																"nativeSrc": "1282:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:19",
														"nodeType": "YulTypedName",
														"src": "1244:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:19",
														"nodeType": "YulTypedName",
														"src": "1254:6:19",
														"type": ""
													}
												],
												"src": "1202:99:19"
											},
											{
												"body": {
													"nativeSrc": "1335:152:19",
													"nodeType": "YulBlock",
													"src": "1335:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:19"
																},
																"nativeSrc": "1345:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:19"
															},
															"nativeSrc": "1345:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:19"
																},
																"nativeSrc": "1442:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:19"
															},
															"nativeSrc": "1442:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:19"
																},
																"nativeSrc": "1466:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:19"
															},
															"nativeSrc": "1466:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:19"
											},
											{
												"body": {
													"nativeSrc": "1521:152:19",
													"nodeType": "YulBlock",
													"src": "1521:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:19"
																},
																"nativeSrc": "1531:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:19"
															},
															"nativeSrc": "1531:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:19"
																},
																"nativeSrc": "1628:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:19"
															},
															"nativeSrc": "1628:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:19"
																},
																"nativeSrc": "1652:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:19"
															},
															"nativeSrc": "1652:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:19"
											},
											{
												"body": {
													"nativeSrc": "1730:269:19",
													"nodeType": "YulBlock",
													"src": "1730:269:19",
													"statements": [
														{
															"nativeSrc": "1740:22:19",
															"nodeType": "YulAssignment",
															"src": "1740:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:19"
																},
																"nativeSrc": "1750:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:19"
																}
															]
														},
														{
															"nativeSrc": "1771:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:19"
																},
																"nativeSrc": "1797:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:19",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:19",
																"nodeType": "YulBlock",
																"src": "1848:51:19",
																"statements": [
																	{
																		"nativeSrc": "1862:27:19",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:19",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:19"
																			},
																			"nativeSrc": "1872:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:19"
																},
																"nativeSrc": "1821:26:19",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:19"
															},
															"nativeSrc": "1818:81:19",
															"nodeType": "YulIf",
															"src": "1818:81:19"
														},
														{
															"body": {
																"nativeSrc": "1951:42:19",
																"nodeType": "YulBlock",
																"src": "1951:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:19"
																			},
																			"nativeSrc": "1965:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:19"
																		},
																		"nativeSrc": "1965:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:19"
																		},
																		"nativeSrc": "1935:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:19"
																},
																"nativeSrc": "1912:38:19",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:19"
															},
															"nativeSrc": "1909:84:19",
															"nodeType": "YulIf",
															"src": "1909:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:19",
														"nodeType": "YulTypedName",
														"src": "1714:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:19",
														"nodeType": "YulTypedName",
														"src": "1723:6:19",
														"type": ""
													}
												],
												"src": "1679:320:19"
											},
											{
												"body": {
													"nativeSrc": "2059:87:19",
													"nodeType": "YulBlock",
													"src": "2059:87:19",
													"statements": [
														{
															"nativeSrc": "2069:11:19",
															"nodeType": "YulAssignment",
															"src": "2069:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:19",
																"nodeType": "YulIdentifier",
																"src": "2077:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:19"
																},
																"nativeSrc": "2090:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:19"
															},
															"nativeSrc": "2090:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:19"
														},
														{
															"nativeSrc": "2113:26:19",
															"nodeType": "YulAssignment",
															"src": "2113:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:19",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:19"
																},
																"nativeSrc": "2121:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:19",
														"nodeType": "YulTypedName",
														"src": "2046:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:19",
														"nodeType": "YulTypedName",
														"src": "2054:4:19",
														"type": ""
													}
												],
												"src": "2005:141:19"
											},
											{
												"body": {
													"nativeSrc": "2196:49:19",
													"nodeType": "YulBlock",
													"src": "2196:49:19",
													"statements": [
														{
															"nativeSrc": "2206:33:19",
															"nodeType": "YulAssignment",
															"src": "2206:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:19"
																		},
																		"nativeSrc": "2220:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:19"
																},
																"nativeSrc": "2216:23:19",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:19",
														"nodeType": "YulTypedName",
														"src": "2179:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:19",
														"nodeType": "YulTypedName",
														"src": "2189:6:19",
														"type": ""
													}
												],
												"src": "2152:93:19"
											},
											{
												"body": {
													"nativeSrc": "2304:54:19",
													"nodeType": "YulBlock",
													"src": "2304:54:19",
													"statements": [
														{
															"nativeSrc": "2314:37:19",
															"nodeType": "YulAssignment",
															"src": "2314:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:19"
																},
																"nativeSrc": "2335:16:19",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:19",
														"nodeType": "YulTypedName",
														"src": "2279:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:19",
														"nodeType": "YulTypedName",
														"src": "2285:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:19",
														"nodeType": "YulTypedName",
														"src": "2295:8:19",
														"type": ""
													}
												],
												"src": "2251:107:19"
											},
											{
												"body": {
													"nativeSrc": "2440:317:19",
													"nodeType": "YulBlock",
													"src": "2440:317:19",
													"statements": [
														{
															"nativeSrc": "2450:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:19"
																},
																"nativeSrc": "2467:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:19",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:19",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:19"
																},
																"nativeSrc": "2506:97:19",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:19",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:19",
															"nodeType": "YulAssignment",
															"src": "2612:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:19"
																},
																"nativeSrc": "2624:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:19"
																}
															]
														},
														{
															"nativeSrc": "2672:30:19",
															"nodeType": "YulAssignment",
															"src": "2672:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:19"
																		},
																		"nativeSrc": "2692:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:19"
																},
																"nativeSrc": "2681:21:19",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:19"
																}
															]
														},
														{
															"nativeSrc": "2711:40:19",
															"nodeType": "YulAssignment",
															"src": "2711:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:19"
																		},
																		"nativeSrc": "2731:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:19"
																},
																"nativeSrc": "2721:30:19",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:19",
														"nodeType": "YulTypedName",
														"src": "2401:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:19",
														"nodeType": "YulTypedName",
														"src": "2408:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:19",
														"nodeType": "YulTypedName",
														"src": "2420:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:19",
														"nodeType": "YulTypedName",
														"src": "2433:6:19",
														"type": ""
													}
												],
												"src": "2364:393:19"
											},
											{
												"body": {
													"nativeSrc": "2808:32:19",
													"nodeType": "YulBlock",
													"src": "2808:32:19",
													"statements": [
														{
															"nativeSrc": "2818:16:19",
															"nodeType": "YulAssignment",
															"src": "2818:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:19",
																"nodeType": "YulIdentifier",
																"src": "2829:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:19",
														"nodeType": "YulTypedName",
														"src": "2790:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:19",
														"nodeType": "YulTypedName",
														"src": "2800:7:19",
														"type": ""
													}
												],
												"src": "2763:77:19"
											},
											{
												"body": {
													"nativeSrc": "2878:28:19",
													"nodeType": "YulBlock",
													"src": "2878:28:19",
													"statements": [
														{
															"nativeSrc": "2888:12:19",
															"nodeType": "YulAssignment",
															"src": "2888:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:19",
																"nodeType": "YulIdentifier",
																"src": "2895:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:19",
														"nodeType": "YulTypedName",
														"src": "2864:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:19",
														"nodeType": "YulTypedName",
														"src": "2874:3:19",
														"type": ""
													}
												],
												"src": "2846:60:19"
											},
											{
												"body": {
													"nativeSrc": "2972:82:19",
													"nodeType": "YulBlock",
													"src": "2972:82:19",
													"statements": [
														{
															"nativeSrc": "2982:66:19",
															"nodeType": "YulAssignment",
															"src": "2982:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:19"
																				},
																				"nativeSrc": "3022:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:19"
																		},
																		"nativeSrc": "3013:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:19"
																},
																"nativeSrc": "2995:53:19",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:19",
														"nodeType": "YulTypedName",
														"src": "2952:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:19",
														"nodeType": "YulTypedName",
														"src": "2962:9:19",
														"type": ""
													}
												],
												"src": "2912:142:19"
											},
											{
												"body": {
													"nativeSrc": "3107:28:19",
													"nodeType": "YulBlock",
													"src": "3107:28:19",
													"statements": [
														{
															"nativeSrc": "3117:12:19",
															"nodeType": "YulAssignment",
															"src": "3117:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:19",
																"nodeType": "YulIdentifier",
																"src": "3124:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:19",
														"nodeType": "YulTypedName",
														"src": "3093:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:19",
														"nodeType": "YulTypedName",
														"src": "3103:3:19",
														"type": ""
													}
												],
												"src": "3060:75:19"
											},
											{
												"body": {
													"nativeSrc": "3217:193:19",
													"nodeType": "YulBlock",
													"src": "3217:193:19",
													"statements": [
														{
															"nativeSrc": "3227:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:19"
																},
																"nativeSrc": "3251:39:19",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:19",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:19"
																				},
																				"nativeSrc": "3340:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:19"
																				},
																				"nativeSrc": "3361:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:19"
																		},
																		"nativeSrc": "3312:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:19"
																},
																"nativeSrc": "3299:105:19",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:19"
															},
															"nativeSrc": "3299:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:19",
														"nodeType": "YulTypedName",
														"src": "3194:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:19",
														"nodeType": "YulTypedName",
														"src": "3200:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:19",
														"nodeType": "YulTypedName",
														"src": "3208:7:19",
														"type": ""
													}
												],
												"src": "3141:269:19"
											},
											{
												"body": {
													"nativeSrc": "3465:24:19",
													"nodeType": "YulBlock",
													"src": "3465:24:19",
													"statements": [
														{
															"nativeSrc": "3475:8:19",
															"nodeType": "YulAssignment",
															"src": "3475:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:19",
																"nodeType": "YulLiteral",
																"src": "3482:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:19",
														"nodeType": "YulTypedName",
														"src": "3461:3:19",
														"type": ""
													}
												],
												"src": "3416:73:19"
											},
											{
												"body": {
													"nativeSrc": "3548:136:19",
													"nodeType": "YulBlock",
													"src": "3548:136:19",
													"statements": [
														{
															"nativeSrc": "3558:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:19"
																},
																"nativeSrc": "3572:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:19"
																},
																"nativeSrc": "3613:65:19",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:19"
															},
															"nativeSrc": "3613:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:19",
														"nodeType": "YulTypedName",
														"src": "3534:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:19",
														"nodeType": "YulTypedName",
														"src": "3540:6:19",
														"type": ""
													}
												],
												"src": "3495:189:19"
											},
											{
												"body": {
													"nativeSrc": "3740:136:19",
													"nodeType": "YulBlock",
													"src": "3740:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:19",
																"nodeType": "YulBlock",
																"src": "3807:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:19"
																			},
																			"nativeSrc": "3821:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:19"
																		},
																		"nativeSrc": "3821:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:19"
																},
																"nativeSrc": "3757:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:19"
															},
															"nativeSrc": "3750:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:19",
																"nodeType": "YulBlock",
																"src": "3772:26:19",
																"statements": [
																	{
																		"nativeSrc": "3774:22:19",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:19"
																			},
																			"nativeSrc": "3783:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:19",
																"nodeType": "YulBlock",
																"src": "3754:2:19",
																"statements": []
															},
															"src": "3750:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:19",
														"nodeType": "YulTypedName",
														"src": "3728:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:19",
														"nodeType": "YulTypedName",
														"src": "3735:3:19",
														"type": ""
													}
												],
												"src": "3690:186:19"
											},
											{
												"body": {
													"nativeSrc": "3961:464:19",
													"nodeType": "YulBlock",
													"src": "3961:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:19",
																"nodeType": "YulBlock",
																"src": "3987:431:19",
																"statements": [
																	{
																		"nativeSrc": "4001:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:19"
																			},
																			"nativeSrc": "4017:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:19",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:19"
																					},
																					"nativeSrc": "4101:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:19"
																			},
																			"nativeSrc": "4087:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:19",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:19",
																			"nodeType": "YulBlock",
																			"src": "4288:27:19",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:19",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:19",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:19"
																			},
																			"nativeSrc": "4269:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:19"
																		},
																		"nativeSrc": "4266:49:19",
																		"nodeType": "YulIf",
																		"src": "4266:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:19"
																							},
																							"nativeSrc": "4384:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:19"
																					},
																					"nativeSrc": "4370:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:19"
																			},
																			"nativeSrc": "4328:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:19"
																		},
																		"nativeSrc": "4328:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:19"
																},
																"nativeSrc": "3975:11:19",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:19"
															},
															"nativeSrc": "3972:446:19",
															"nodeType": "YulIf",
															"src": "3972:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:19",
														"nodeType": "YulTypedName",
														"src": "3937:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:19",
														"nodeType": "YulTypedName",
														"src": "3944:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:19",
														"nodeType": "YulTypedName",
														"src": "3949:10:19",
														"type": ""
													}
												],
												"src": "3882:543:19"
											},
											{
												"body": {
													"nativeSrc": "4494:54:19",
													"nodeType": "YulBlock",
													"src": "4494:54:19",
													"statements": [
														{
															"nativeSrc": "4504:37:19",
															"nodeType": "YulAssignment",
															"src": "4504:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:19"
																},
																"nativeSrc": "4525:16:19",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:19",
														"nodeType": "YulTypedName",
														"src": "4469:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:19",
														"nodeType": "YulTypedName",
														"src": "4475:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:19",
														"nodeType": "YulTypedName",
														"src": "4485:8:19",
														"type": ""
													}
												],
												"src": "4431:117:19"
											},
											{
												"body": {
													"nativeSrc": "4605:118:19",
													"nodeType": "YulBlock",
													"src": "4605:118:19",
													"statements": [
														{
															"nativeSrc": "4615:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:19"
																				},
																				"nativeSrc": "4660:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:19"
																				},
																				"nativeSrc": "4675:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:19"
																		},
																		"nativeSrc": "4631:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:19"
																},
																"nativeSrc": "4627:56:19",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:19",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:19",
															"nodeType": "YulAssignment",
															"src": "4692:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:19"
																},
																"nativeSrc": "4702:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:19",
														"nodeType": "YulTypedName",
														"src": "4582:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:19",
														"nodeType": "YulTypedName",
														"src": "4588:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:19",
														"nodeType": "YulTypedName",
														"src": "4598:6:19",
														"type": ""
													}
												],
												"src": "4554:169:19"
											},
											{
												"body": {
													"nativeSrc": "4809:214:19",
													"nodeType": "YulBlock",
													"src": "4809:214:19",
													"statements": [
														{
															"nativeSrc": "4942:37:19",
															"nodeType": "YulAssignment",
															"src": "4942:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:19"
																},
																"nativeSrc": "4950:29:19",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:19"
																}
															]
														},
														{
															"nativeSrc": "4988:29:19",
															"nodeType": "YulAssignment",
															"src": "4988:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:19",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:19"
																		},
																		"nativeSrc": "5005:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:19"
																},
																"nativeSrc": "4996:21:19",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:19",
														"nodeType": "YulTypedName",
														"src": "4790:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:19",
														"nodeType": "YulTypedName",
														"src": "4796:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:19",
														"nodeType": "YulTypedName",
														"src": "4804:4:19",
														"type": ""
													}
												],
												"src": "4728:295:19"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:19",
													"nodeType": "YulBlock",
													"src": "5120:1303:19",
													"statements": [
														{
															"nativeSrc": "5131:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:19"
																},
																"nativeSrc": "5145:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:19",
																"nodeType": "YulBlock",
																"src": "5267:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:19"
																			},
																			"nativeSrc": "5269:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:19"
																		},
																		"nativeSrc": "5269:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:19",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:19"
																},
																"nativeSrc": "5236:30:19",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:19"
															},
															"nativeSrc": "5233:56:19",
															"nodeType": "YulIf",
															"src": "5233:56:19"
														},
														{
															"nativeSrc": "5299:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:19"
																		},
																		"nativeSrc": "5339:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:19"
																},
																"nativeSrc": "5313:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:19"
																},
																"nativeSrc": "5398:67:19",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:19"
															},
															"nativeSrc": "5398:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:19"
														},
														{
															"nativeSrc": "5475:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:19",
																"nodeType": "YulLiteral",
																"src": "5492:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:19",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:19",
															"nodeType": "YulAssignment",
															"src": "5503:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:19",
																"nodeType": "YulLiteral",
																"src": "5516:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:19",
																		"nodeType": "YulBlock",
																		"src": "5567:611:19",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:19",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:19"
																							},
																							"nativeSrc": "5608:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:19"
																					},
																					"nativeSrc": "5596:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:19",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:19"
																					},
																					"nativeSrc": "5646:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:19",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:19",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:19",
																					"nodeType": "YulBlock",
																					"src": "5764:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:19"
																												},
																												"nativeSrc": "5803:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:19"
																										},
																										"nativeSrc": "5797:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:19"
																								},
																								"nativeSrc": "5782:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:19"
																							},
																							"nativeSrc": "5782:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:19"
																						},
																						{
																							"nativeSrc": "5841:24:19",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:19",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:19"
																								},
																								"nativeSrc": "5851:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:19",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:19",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:19"
																								},
																								"nativeSrc": "5895:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:19"
																					},
																					"nativeSrc": "5727:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:19"
																				},
																				"nativeSrc": "5719:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:19",
																					"nodeType": "YulBlock",
																					"src": "5742:21:19",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:19",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:19",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:19"
																								},
																								"nativeSrc": "5749:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:19",
																					"nodeType": "YulBlock",
																					"src": "5723:3:19",
																					"statements": []
																				},
																				"src": "5719:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:19",
																					"nodeType": "YulBlock",
																					"src": "5963:156:19",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:19"
																										},
																										"nativeSrc": "6004:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:19"
																								},
																								"nativeSrc": "5998:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:19",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:19",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:19"
																												},
																												"nativeSrc": "6086:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:19"
																										},
																										"nativeSrc": "6056:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:19"
																								},
																								"nativeSrc": "6041:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:19"
																							},
																							"nativeSrc": "6041:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:19"
																					},
																					"nativeSrc": "5943:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:19"
																				},
																				"nativeSrc": "5940:179:19",
																				"nodeType": "YulIf",
																				"src": "5940:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:19",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:19"
																									},
																									"nativeSrc": "6149:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:19",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:19"
																							},
																							"nativeSrc": "6145:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:19"
																					},
																					"nativeSrc": "6132:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:19"
																				},
																				"nativeSrc": "6132:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:19"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:19",
																	"nodeType": "YulCase",
																	"src": "5560:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:19",
																		"nodeType": "YulBlock",
																		"src": "6195:222:19",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:19",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:19",
																					"nodeType": "YulBlock",
																					"src": "6246:67:19",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:19",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:19"
																										},
																										"nativeSrc": "6279:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:19"
																								},
																								"nativeSrc": "6273:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:19"
																				},
																				"nativeSrc": "6236:77:19",
																				"nodeType": "YulIf",
																				"src": "6236:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:19"
																							},
																							"nativeSrc": "6339:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:19"
																					},
																					"nativeSrc": "6326:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:19"
																				},
																				"nativeSrc": "6326:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:19"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:19",
																	"nodeType": "YulCase",
																	"src": "6187:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:19"
																},
																"nativeSrc": "5537:14:19",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:19"
															},
															"nativeSrc": "5530:887:19",
															"nodeType": "YulSwitch",
															"src": "5530:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:19",
														"nodeType": "YulTypedName",
														"src": "5109:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:19",
														"nodeType": "YulTypedName",
														"src": "5115:3:19",
														"type": ""
													}
												],
												"src": "5028:1395:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612eab380380612eab83398181016040528101906100319190610162565b6040518060400160405280600d81526020017f4d69417274654469676974616c000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d41440000000000000000000000000000000000000000000000000000000000815250815f90816100ab91906103c7565b5080600190816100bb91906103c7565b5050508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610496565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61013182610108565b9050919050565b61014181610127565b811461014b575f80fd5b50565b5f8151905061015c81610138565b92915050565b5f6020828403121561017757610176610104565b5b5f6101848482850161014e565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061020857607f821691505b60208210810361021b5761021a6101c4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261027d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610242565b6102878683610242565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6102cb6102c66102c18461029f565b6102a8565b61029f565b9050919050565b5f819050919050565b6102e4836102b1565b6102f86102f0826102d2565b84845461024e565b825550505050565b5f90565b61030c610300565b6103178184846102db565b505050565b5b8181101561033a5761032f5f82610304565b60018101905061031d565b5050565b601f82111561037f5761035081610221565b61035984610233565b81016020851015610368578190505b61037c61037485610233565b83018261031c565b50505b505050565b5f82821c905092915050565b5f61039f5f1984600802610384565b1980831691505092915050565b5f6103b78383610390565b9150826002028217905092915050565b6103d08261018d565b67ffffffffffffffff8111156103e9576103e8610197565b5b6103f382546101f1565b6103fe82828561033e565b5f60209050601f83116001811461042f575f841561041d578287015190505b61042785826103ac565b86555061048e565b601f19841661043d86610221565b5f5b828110156104645784890151825560018201915060208501945060208101905061043f565b86831015610481578489015161047d601f891682610390565b8355505b6001600288020188555050505b505050505050565b612a08806104a35f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c80636352211e116100a0578063a22cb4651161006f578063a22cb465146102b1578063b5f522f7146102cd578063b88d4fde146102ff578063c87b56dd1461031b578063e985e9c51461034b57610109565b80636352211e1461021757806370a082311461024757806394383f141461027757806395d89b411461029357610109565b806323b872dd116100dc57806323b872dd146101a75780632cb2f52e146101c357806342842e0e146101df57806351ed8288146101fb57610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611ca2565b61037b565b6040516101349190611ce7565b60405180910390f35b6101456103db565b6040516101529190611d70565b60405180910390f35b61017560048036038101906101709190611dc3565b61046a565b6040516101829190611e2d565b60405180910390f35b6101a560048036038101906101a09190611e70565b610485565b005b6101c160048036038101906101bc9190611eae565b61049b565b005b6101dd60048036038101906101d8919061202a565b61059a565b005b6101f960048036038101906101f49190611eae565b6105a8565b005b61021560048036038101906102109190611dc3565b6105c7565b005b610231600480360381019061022c9190611dc3565b610801565b60405161023e9190611e2d565b60405180910390f35b610261600480360381019061025c9190612084565b610812565b60405161026e91906120be565b60405180910390f35b610291600480360381019061028c91906120d7565b6108c8565b005b61029b610a73565b6040516102a89190611d70565b60405180910390f35b6102cb60048036038101906102c6919061213f565b610b03565b005b6102e760048036038101906102e29190611dc3565b610b19565b6040516102f69392919061217d565b60405180910390f35b61031960048036038101906103149190612250565b610b6a565b005b61033560048036038101906103309190611dc3565b610b87565b6040516103429190611d70565b60405180910390f35b610365600480360381019061036091906122d0565b610c92565b6040516103729190611ce7565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d457506103d382610d20565b5b9050919050565b60605f80546103e99061233b565b80601f01602080910402602001604051908101604052809291908181526020018280546104159061233b565b80156104605780601f1061043757610100808354040283529160200191610460565b820191905f5260205f20905b81548152906001019060200180831161044357829003601f168201915b5050505050905090565b5f61047482610e01565b5061047e82610e87565b9050919050565b6104978282610492610ec0565b610ec7565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050b575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105029190611e2d565b60405180910390fd5b5f61051e8383610519610ec0565b610ed9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610594578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058b9392919061236b565b60405180910390fd5b50505050565b6105a482826110e4565b5050565b6105c283838360405180602001604052805f815250610b6a565b505050565b5f60095f8381526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900460ff161515151581525050905080604001516106a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610699906123ea565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33835f015184602001516040518463ffffffff1660e01b815260040161070793929190612408565b6020604051808303815f875af1158015610723573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107479190612451565b610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d906124c6565b60405180910390fd5b610794815f0151338461113e565b5f60095f8481526020019081526020015f206002015f6101000a81548160ff021916908315150217905550817f6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a3383602001516040516107f59291906124e4565b60405180910390a25050565b5f61080b82610e01565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610883575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161087a9190611e2d565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166108e883610801565b73ffffffffffffffffffffffffffffffffffffffff161461093e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109359061257b565b60405180910390fd5b5f8111610980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610977906125e3565b60405180910390fd5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016001151581525060095f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548160ff021916908315150217905550905050817f5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a23383604051610a679291906124e4565b60405180910390a25050565b606060018054610a829061233b565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae9061233b565b8015610af95780601f10610ad057610100808354040283529160200191610af9565b820191905f5260205f20905b815481529060010190602001808311610adc57829003601f168201915b5050505050905090565b610b15610b0e610ec0565b83836112a6565b5050565b6009602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900460ff16905083565b610b7584848461049b565b610b818484848461140f565b50505050565b6060610b9282610e01565b505f60065f8481526020019081526020015f208054610bb09061233b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdc9061233b565b8015610c275780601f10610bfe57610100808354040283529160200191610c27565b820191905f5260205f20905b815481529060010190602001808311610c0a57829003601f168201915b505050505090505f610c376115c1565b90505f815103610c4b578192505050610c8d565b5f82511115610c7f578082604051602001610c6792919061263b565b60405160208183030381529060405292505050610c8d565b610c88846115d7565b925050505b919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610dea57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610dfa5750610df98261163d565b5b9050919050565b5f80610e0c836116a6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e7e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e7591906120be565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ed483838360016116df565b505050565b5f80610ee4846116a6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f2557610f2481848661189e565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fb057610f645f855f806116df565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461102f57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b8060065f8481526020019081526020015f20908161110291906127fb565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161113291906120be565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ae575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111a59190611e2d565b60405180910390fd5b5f6111ba83835f610ed9565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361122c57816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161122391906120be565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112a0578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016112979392919061236b565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131657816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161130d9190611e2d565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114029190611ce7565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156115bb578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611452610ec0565b8685856040518563ffffffff1660e01b8152600401611474949392919061291c565b6020604051808303815f875af19250505080156114af57506040513d601f19601f820116820180604052508101906114ac919061297a565b60015b611530573d805f81146114dd576040519150601f19603f3d011682016040523d82523d5f602084013e6114e2565b606091505b505f81510361152857836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161151f9190611e2d565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115b957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115b09190611e2d565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606115e282610e01565b505f6115ec6115c1565b90505f81511161160a5760405180602001604052805f815250611635565b8061161484611961565b60405160200161162592919061263b565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061171757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611849575f61172684610e01565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561179057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117a357506117a18184610c92565b155b156117e557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117dc9190611e2d565b60405180910390fd5b811561184757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118a9838383611a2b565b61195c575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361191d57806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161191491906120be565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119539291906124e4565b60405180910390fd5b505050565b60605f600161196f84611aeb565b0190505f8167ffffffffffffffff81111561198d5761198c611f06565b5b6040519080825280601f01601f1916602001820160405280156119bf5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a20578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a1557611a146129a5565b5b0494505f85036119cc575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ae257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611aa35750611aa28484610c92565b5b80611ae157508273ffffffffffffffffffffffffffffffffffffffff16611ac983610e87565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b47577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b3d57611b3c6129a5565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b84576d04ee2d6d415b85acef81000000008381611b7a57611b796129a5565b5b0492506020810190505b662386f26fc100008310611bb357662386f26fc100008381611ba957611ba86129a5565b5b0492506010810190505b6305f5e1008310611bdc576305f5e1008381611bd257611bd16129a5565b5b0492506008810190505b6127108310611c01576127108381611bf757611bf66129a5565b5b0492506004810190505b60648310611c245760648381611c1a57611c196129a5565b5b0492506002810190505b600a8310611c33576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c8181611c4d565b8114611c8b575f80fd5b50565b5f81359050611c9c81611c78565b92915050565b5f60208284031215611cb757611cb6611c45565b5b5f611cc484828501611c8e565b91505092915050565b5f8115159050919050565b611ce181611ccd565b82525050565b5f602082019050611cfa5f830184611cd8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d4282611d00565b611d4c8185611d0a565b9350611d5c818560208601611d1a565b611d6581611d28565b840191505092915050565b5f6020820190508181035f830152611d888184611d38565b905092915050565b5f819050919050565b611da281611d90565b8114611dac575f80fd5b50565b5f81359050611dbd81611d99565b92915050565b5f60208284031215611dd857611dd7611c45565b5b5f611de584828501611daf565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e1782611dee565b9050919050565b611e2781611e0d565b82525050565b5f602082019050611e405f830184611e1e565b92915050565b611e4f81611e0d565b8114611e59575f80fd5b50565b5f81359050611e6a81611e46565b92915050565b5f8060408385031215611e8657611e85611c45565b5b5f611e9385828601611e5c565b9250506020611ea485828601611daf565b9150509250929050565b5f805f60608486031215611ec557611ec4611c45565b5b5f611ed286828701611e5c565b9350506020611ee386828701611e5c565b9250506040611ef486828701611daf565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f3c82611d28565b810181811067ffffffffffffffff82111715611f5b57611f5a611f06565b5b80604052505050565b5f611f6d611c3c565b9050611f798282611f33565b919050565b5f67ffffffffffffffff821115611f9857611f97611f06565b5b611fa182611d28565b9050602081019050919050565b828183375f83830152505050565b5f611fce611fc984611f7e565b611f64565b905082815260208101848484011115611fea57611fe9611f02565b5b611ff5848285611fae565b509392505050565b5f82601f83011261201157612010611efe565b5b8135612021848260208601611fbc565b91505092915050565b5f80604083850312156120405761203f611c45565b5b5f61204d85828601611daf565b925050602083013567ffffffffffffffff81111561206e5761206d611c49565b5b61207a85828601611ffd565b9150509250929050565b5f6020828403121561209957612098611c45565b5b5f6120a684828501611e5c565b91505092915050565b6120b881611d90565b82525050565b5f6020820190506120d15f8301846120af565b92915050565b5f80604083850312156120ed576120ec611c45565b5b5f6120fa85828601611daf565b925050602061210b85828601611daf565b9150509250929050565b61211e81611ccd565b8114612128575f80fd5b50565b5f8135905061213981612115565b92915050565b5f806040838503121561215557612154611c45565b5b5f61216285828601611e5c565b92505060206121738582860161212b565b9150509250929050565b5f6060820190506121905f830186611e1e565b61219d60208301856120af565b6121aa6040830184611cd8565b949350505050565b5f67ffffffffffffffff8211156121cc576121cb611f06565b5b6121d582611d28565b9050602081019050919050565b5f6121f46121ef846121b2565b611f64565b9050828152602081018484840111156122105761220f611f02565b5b61221b848285611fae565b509392505050565b5f82601f83011261223757612236611efe565b5b81356122478482602086016121e2565b91505092915050565b5f805f806080858703121561226857612267611c45565b5b5f61227587828801611e5c565b945050602061228687828801611e5c565b935050604061229787828801611daf565b925050606085013567ffffffffffffffff8111156122b8576122b7611c49565b5b6122c487828801612223565b91505092959194509250565b5f80604083850312156122e6576122e5611c45565b5b5f6122f385828601611e5c565b925050602061230485828601611e5c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061235257607f821691505b6020821081036123655761236461230e565b5b50919050565b5f60608201905061237e5f830186611e1e565b61238b60208301856120af565b6123986040830184611e1e565b949350505050565b7f45737465204e4654206e6f20657374612061206c612076656e746100000000005f82015250565b5f6123d4601b83611d0a565b91506123df826123a0565b602082019050919050565b5f6020820190508181035f830152612401816123c8565b9050919050565b5f60608201905061241b5f830186611e1e565b6124286020830185611e1e565b61243560408301846120af565b949350505050565b5f8151905061244b81612115565b92915050565b5f6020828403121561246657612465611c45565b5b5f6124738482850161243d565b91505092915050565b7f5061676f2066616c6c69646f00000000000000000000000000000000000000005f82015250565b5f6124b0600c83611d0a565b91506124bb8261247c565b602082019050919050565b5f6020820190508181035f8301526124dd816124a4565b9050919050565b5f6040820190506124f75f830185611e1e565b61250460208301846120af565b9392505050565b7f536f6c6f20656c2070726f706965746172696f207075656465206c69737461725f8201527f20656c204e46542070617261206c612076656e74610000000000000000000000602082015250565b5f612565603583611d0a565b91506125708261250b565b604082019050919050565b5f6020820190508181035f83015261259281612559565b9050919050565b7f456c2070726563696f206465626520736572206d61796f7220717565203000005f82015250565b5f6125cd601e83611d0a565b91506125d882612599565b602082019050919050565b5f6020820190508181035f8301526125fa816125c1565b9050919050565b5f81905092915050565b5f61261582611d00565b61261f8185612601565b935061262f818560208601611d1a565b80840191505092915050565b5f612646828561260b565b9150612652828461260b565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261267f565b6126c4868361267f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6126ff6126fa6126f584611d90565b6126dc565b611d90565b9050919050565b5f819050919050565b612718836126e5565b61272c61272482612706565b84845461268b565b825550505050565b5f90565b612740612734565b61274b81848461270f565b505050565b5b8181101561276e576127635f82612738565b600181019050612751565b5050565b601f8211156127b3576127848161265e565b61278d84612670565b8101602085101561279c578190505b6127b06127a885612670565b830182612750565b50505b505050565b5f82821c905092915050565b5f6127d35f19846008026127b8565b1980831691505092915050565b5f6127eb83836127c4565b9150826002028217905092915050565b61280482611d00565b67ffffffffffffffff81111561281d5761281c611f06565b5b612827825461233b565b612832828285612772565b5f60209050601f831160018114612863575f8415612851578287015190505b61285b85826127e0565b8655506128c2565b601f1984166128718661265e565b5f5b8281101561289857848901518255600182019150602085019450602081019050612873565b868310156128b557848901516128b1601f8916826127c4565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128ee826128ca565b6128f881856128d4565b9350612908818560208601611d1a565b61291181611d28565b840191505092915050565b5f60808201905061292f5f830187611e1e565b61293c6020830186611e1e565b61294960408301856120af565b818103606083015261295b81846128e4565b905095945050505050565b5f8151905061297481611c78565b92915050565b5f6020828403121561298f5761298e611c45565b5b5f61299c84828501612966565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220408c0974f48abade34b815cadd2eaf6e972d115e4599f2b9e79c26ddcc4ca38164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2EAB CODESIZE SUB DUP1 PUSH2 0x2EAB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D69417274654469676974616C00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D41440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x496 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x131 DUP3 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x127 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0x104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184 DUP5 DUP3 DUP6 ADD PUSH2 0x14E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x208 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21B JUMPI PUSH2 0x21A PUSH2 0x1C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x27D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x287 DUP7 DUP4 PUSH2 0x242 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB PUSH2 0x2C6 PUSH2 0x2C1 DUP5 PUSH2 0x29F JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E4 DUP4 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x2F8 PUSH2 0x2F0 DUP3 PUSH2 0x2D2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x300 JUMP JUMPDEST PUSH2 0x317 DUP2 DUP5 DUP5 PUSH2 0x2DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH2 0x32F PUSH0 DUP3 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x31D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x37F JUMPI PUSH2 0x350 DUP2 PUSH2 0x221 JUMP JUMPDEST PUSH2 0x359 DUP5 PUSH2 0x233 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x368 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x37C PUSH2 0x374 DUP6 PUSH2 0x233 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x31C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x39F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x384 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3B7 DUP4 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D0 DUP3 PUSH2 0x18D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3E8 PUSH2 0x197 JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP3 SLOAD PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x3FE DUP3 DUP3 DUP6 PUSH2 0x33E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x42F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x41D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x427 DUP6 DUP3 PUSH2 0x3AC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x48E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x43D DUP7 PUSH2 0x221 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x464 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x481 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x47D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x390 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2A08 DUP1 PUSH2 0x4A3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x34B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x94383F14 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x293 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2CB2F52E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3D4 JUMPI POP PUSH2 0x3D3 DUP3 PUSH2 0xD20 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3E9 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x415 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x460 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x437 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x460 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x443 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x474 DUP3 PUSH2 0xE01 JUMP JUMPDEST POP PUSH2 0x47E DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x497 DUP3 DUP3 PUSH2 0x492 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x51E DUP4 DUP4 PUSH2 0x519 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x594 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5A4 DUP3 DUP3 PUSH2 0x10E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 PUSH0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x747 SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77D SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x794 DUP2 PUSH0 ADD MLOAD CALLER DUP5 PUSH2 0x113E JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x6329E40C0365262EBBFF5CA819385C2B9713DCAA050ED07866D72C441395699A CALLER DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7F5 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80B DUP3 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 DUP4 PUSH2 0x801 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH32 0x5F9C03DE076F5063CD3EBCFE8EF7AA8AF378E4B35A83C77BA9777E97083879A2 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xA67 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA82 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAE SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB15 PUSH2 0xB0E PUSH2 0xEC0 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xB75 DUP5 DUP5 DUP5 PUSH2 0x49B JUMP JUMPDEST PUSH2 0xB81 DUP5 DUP5 DUP5 DUP5 PUSH2 0x140F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB92 DUP3 PUSH2 0xE01 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBB0 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBDC SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xC37 PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xC4B JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xC8D JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xC7F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC67 SWAP3 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xC88 DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDEA JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xDFA JUMPI POP PUSH2 0xDF9 DUP3 PUSH2 0x163D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE0C DUP4 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEE4 DUP5 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF25 JUMPI PUSH2 0xF24 DUP2 DUP5 DUP7 PUSH2 0x189E JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB0 JUMPI PUSH2 0xF64 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x102F JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x27FB JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11BA DUP4 DUP4 PUSH0 PUSH2 0xED9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1316 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130D SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15BB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1452 PUSH2 0xEC0 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x297A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1530 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1528 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15B9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B0 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15E2 DUP3 PUSH2 0xE01 JUMP JUMPDEST POP PUSH0 PUSH2 0x15EC PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1635 JUMP JUMPDEST DUP1 PUSH2 0x1614 DUP5 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1625 SWAP3 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1717 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1849 JUMPI PUSH0 PUSH2 0x1726 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1790 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17A3 JUMPI POP PUSH2 0x17A1 DUP2 DUP5 PUSH2 0xC92 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x17E5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1847 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18A9 DUP4 DUP4 DUP4 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x195C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1914 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1953 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x196F DUP5 PUSH2 0x1AEB JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x198D JUMPI PUSH2 0x198C PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A20 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A15 JUMPI PUSH2 0x1A14 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x19CC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1AE2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AA3 JUMPI POP PUSH2 0x1AA2 DUP5 DUP5 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1AE1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AC9 DUP4 PUSH2 0xE87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B47 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B84 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BB3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1BDC JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C01 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C24 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C33 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C81 DUP2 PUSH2 0x1C4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9C DUP2 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC4 DUP5 DUP3 DUP6 ADD PUSH2 0x1C8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE1 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CFA PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D42 DUP3 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x1D4C DUP2 DUP6 PUSH2 0x1D0A JUMP JUMPDEST SWAP4 POP PUSH2 0x1D5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x1D65 DUP2 PUSH2 0x1D28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D88 DUP2 DUP5 PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA2 DUP2 PUSH2 0x1D90 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DAC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DBD DUP2 PUSH2 0x1D99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE5 DUP5 DUP3 DUP6 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E17 DUP3 PUSH2 0x1DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E27 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E40 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E85 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E93 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED2 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EE3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EF4 DUP7 DUP3 DUP8 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F3C DUP3 PUSH2 0x1D28 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6D PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP PUSH2 0x1F79 DUP3 DUP3 PUSH2 0x1F33 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F97 PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH2 0x1FA1 DUP3 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FCE PUSH2 0x1FC9 DUP5 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FEA JUMPI PUSH2 0x1FE9 PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x1FF5 DUP5 DUP3 DUP6 PUSH2 0x1FAE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1EFE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2021 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x204D DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x206E JUMPI PUSH2 0x206D PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH2 0x207A DUP6 DUP3 DUP7 ADD PUSH2 0x1FFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH2 0x2098 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A6 DUP5 DUP3 DUP6 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20B8 DUP2 PUSH2 0x1D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20ED JUMPI PUSH2 0x20EC PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20FA DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210B DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x211E DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x2128 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2139 DUP2 PUSH2 0x2115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2162 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2173 DUP6 DUP3 DUP7 ADD PUSH2 0x212B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2190 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x219D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x21AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH2 0x21D5 DUP3 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F4 PUSH2 0x21EF DUP5 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x221B DUP5 DUP3 DUP6 PUSH2 0x1FAE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2237 JUMPI PUSH2 0x2236 PUSH2 0x1EFE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2247 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2268 JUMPI PUSH2 0x2267 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2275 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2286 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2297 DUP8 DUP3 DUP9 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH2 0x22C4 DUP8 DUP3 DUP9 ADD PUSH2 0x2223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22E5 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2304 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2352 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x230E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x237E PUSH0 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x238B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x2398 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E1E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45737465204E4654206E6F20657374612061206C612076656E74610000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D4 PUSH1 0x1B DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x23DF DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2401 DUP2 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x241B PUSH0 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2428 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2435 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x244B DUP2 PUSH2 0x2115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2473 DUP5 DUP3 DUP6 ADD PUSH2 0x243D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061676F2066616C6C69646F0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24B0 PUSH1 0xC DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x24BB DUP3 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24DD DUP2 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24F7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2504 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x536F6C6F20656C2070726F706965746172696F207075656465206C6973746172 PUSH0 DUP3 ADD MSTORE PUSH32 0x20656C204E46542070617261206C612076656E74610000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2565 PUSH1 0x35 DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x2570 DUP3 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2592 DUP2 PUSH2 0x2559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456C2070726563696F206465626520736572206D61796F722071756520300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25CD PUSH1 0x1E DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x25D8 DUP3 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25FA DUP2 PUSH2 0x25C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2615 DUP3 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x261F DUP2 DUP6 PUSH2 0x2601 JUMP JUMPDEST SWAP4 POP PUSH2 0x262F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2646 DUP3 DUP6 PUSH2 0x260B JUMP JUMPDEST SWAP2 POP PUSH2 0x2652 DUP3 DUP5 PUSH2 0x260B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26BA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x267F JUMP JUMPDEST PUSH2 0x26C4 DUP7 DUP4 PUSH2 0x267F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26FF PUSH2 0x26FA PUSH2 0x26F5 DUP5 PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x26DC JUMP JUMPDEST PUSH2 0x1D90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2718 DUP4 PUSH2 0x26E5 JUMP JUMPDEST PUSH2 0x272C PUSH2 0x2724 DUP3 PUSH2 0x2706 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x268B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2740 PUSH2 0x2734 JUMP JUMPDEST PUSH2 0x274B DUP2 DUP5 DUP5 PUSH2 0x270F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x276E JUMPI PUSH2 0x2763 PUSH0 DUP3 PUSH2 0x2738 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2751 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27B3 JUMPI PUSH2 0x2784 DUP2 PUSH2 0x265E JUMP JUMPDEST PUSH2 0x278D DUP5 PUSH2 0x2670 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x279C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27B0 PUSH2 0x27A8 DUP6 PUSH2 0x2670 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2750 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27D3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27B8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27EB DUP4 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2804 DUP3 PUSH2 0x1D00 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x281D JUMPI PUSH2 0x281C PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH2 0x2827 DUP3 SLOAD PUSH2 0x233B JUMP JUMPDEST PUSH2 0x2832 DUP3 DUP3 DUP6 PUSH2 0x2772 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2863 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2851 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x285B DUP6 DUP3 PUSH2 0x27E0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28C2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2871 DUP7 PUSH2 0x265E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2898 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2873 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28B5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28B1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27C4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28EE DUP3 PUSH2 0x28CA JUMP JUMPDEST PUSH2 0x28F8 DUP2 DUP6 PUSH2 0x28D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2908 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x2911 DUP2 PUSH2 0x1D28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x292F PUSH0 DUP4 ADD DUP8 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x293C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2949 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x295B DUP2 DUP5 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2974 DUP2 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298F JUMPI PUSH2 0x298E PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x299C DUP5 DUP3 DUP6 ADD PUSH2 0x2966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH DUP13 MULMOD PUSH21 0xF48ABADE34B815CADD2EAF6E972D115E4599F2B9E7 SWAP13 0x26 0xDD 0xCC 0x4C LOG3 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "310:2369:18:-:0;;;924:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1023:13:18::1;1001:12;;:36;;;;;;;;;;;;;;;;;;924:121:::0;310:2369;;88:117:19;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;310:2369:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1206": {
									"entryPoint": 3783,
									"id": 1206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1272": {
									"entryPoint": 5855,
									"id": 1272,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_599": {
									"entryPoint": 5569,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_854": {
									"entryPoint": 6302,
									"id": 854,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1402": {
									"entryPoint": 5135,
									"id": 1402,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_781": {
									"entryPoint": 3719,
									"id": 781,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_817": {
									"entryPoint": 6699,
									"id": 817,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1704": {
									"entryPoint": 3776,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_768": {
									"entryPoint": 5798,
									"id": 768,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1338": {
									"entryPoint": 3585,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1309": {
									"entryPoint": 4774,
									"id": 1309,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1663": {
									"entryPoint": 4324,
									"id": 1663,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_1144": {
									"entryPoint": 4414,
									"id": 1144,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_960": {
									"entryPoint": 3801,
									"id": 960,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_615": {
									"entryPoint": 1157,
									"id": 615,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_523": {
									"entryPoint": 2066,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyNFT_3410": {
									"entryPoint": 1479,
									"id": 3410,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_632": {
									"entryPoint": 1130,
									"id": 632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_665": {
									"entryPoint": 3218,
									"id": 665,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@listNFT_3355": {
									"entryPoint": 2248,
									"id": 3355,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@log10_2961": {
									"entryPoint": 6891,
									"id": 2961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_545": {
									"entryPoint": 987,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_536": {
									"entryPoint": 2049,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_729": {
									"entryPoint": 1448,
									"id": 729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_755": {
									"entryPoint": 2922,
									"id": 755,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sales_3276": {
									"entryPoint": 2841,
									"id": 3276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setApprovalForAll_648": {
									"entryPoint": 2819,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1587": {
									"entryPoint": 891,
									"id": 1587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2074": {
									"entryPoint": 5693,
									"id": 2074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_495": {
									"entryPoint": 3360,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_554": {
									"entryPoint": 2675,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1864": {
									"entryPoint": 6497,
									"id": 1864,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1644": {
									"entryPoint": 2951,
									"id": 1644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_590": {
									"entryPoint": 5591,
									"id": 590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_711": {
									"entryPoint": 1179,
									"id": 711,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateTokenMetadata_3423": {
									"entryPoint": 1434,
									"id": 3423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9224,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10524,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9444,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9067,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 10661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032": {
									"entryPoint": 9483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c": {
									"entryPoint": 9625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9867,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26578:19",
										"nodeType": "YulBlock",
										"src": "0:26578:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1577:40:19",
													"nodeType": "YulBlock",
													"src": "1577:40:19",
													"statements": [
														{
															"nativeSrc": "1588:22:19",
															"nodeType": "YulAssignment",
															"src": "1588:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:19"
																},
																"nativeSrc": "1598:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:19",
														"nodeType": "YulTypedName",
														"src": "1560:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:19",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													}
												],
												"src": "1518:99:19"
											},
											{
												"body": {
													"nativeSrc": "1719:73:19",
													"nodeType": "YulBlock",
													"src": "1719:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:19"
																},
																"nativeSrc": "1729:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:19"
															},
															"nativeSrc": "1729:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:19"
														},
														{
															"nativeSrc": "1757:29:19",
															"nodeType": "YulAssignment",
															"src": "1757:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nativeSrc": "1772:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:19",
														"nodeType": "YulTypedName",
														"src": "1691:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:19",
														"nodeType": "YulTypedName",
														"src": "1696:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:19",
														"nodeType": "YulTypedName",
														"src": "1707:11:19",
														"type": ""
													}
												],
												"src": "1623:169:19"
											},
											{
												"body": {
													"nativeSrc": "1860:77:19",
													"nodeType": "YulBlock",
													"src": "1860:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:19"
																},
																"nativeSrc": "1871:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:19"
															},
															"nativeSrc": "1871:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:19"
																		},
																		"nativeSrc": "1910:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:19"
																},
																"nativeSrc": "1903:27:19",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:19"
															},
															"nativeSrc": "1903:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:19",
														"nodeType": "YulTypedName",
														"src": "1842:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:19",
														"nodeType": "YulTypedName",
														"src": "1847:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:19",
														"nodeType": "YulTypedName",
														"src": "1852:6:19",
														"type": ""
													}
												],
												"src": "1798:139:19"
											},
											{
												"body": {
													"nativeSrc": "1991:54:19",
													"nodeType": "YulBlock",
													"src": "1991:54:19",
													"statements": [
														{
															"nativeSrc": "2001:38:19",
															"nodeType": "YulAssignment",
															"src": "2001:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:19"
																		},
																		"nativeSrc": "2015:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:19"
																		},
																		"nativeSrc": "2031:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:19"
																},
																"nativeSrc": "2011:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:19",
														"nodeType": "YulTypedName",
														"src": "1974:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:19",
														"nodeType": "YulTypedName",
														"src": "1984:6:19",
														"type": ""
													}
												],
												"src": "1943:102:19"
											},
											{
												"body": {
													"nativeSrc": "2143:285:19",
													"nodeType": "YulBlock",
													"src": "2143:285:19",
													"statements": [
														{
															"nativeSrc": "2153:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:19"
																},
																"nativeSrc": "2167:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:19",
															"nodeType": "YulAssignment",
															"src": "2215:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:19"
																},
																"nativeSrc": "2222:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:19"
																		},
																		"nativeSrc": "2337:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:19"
																},
																"nativeSrc": "2302:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:19"
															},
															"nativeSrc": "2302:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:19"
														},
														{
															"nativeSrc": "2376:46:19",
															"nodeType": "YulAssignment",
															"src": "2376:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:19"
																		},
																		"nativeSrc": "2392:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:19"
																},
																"nativeSrc": "2383:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:19",
														"nodeType": "YulTypedName",
														"src": "2124:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:19",
														"nodeType": "YulTypedName",
														"src": "2131:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:19",
														"nodeType": "YulTypedName",
														"src": "2139:3:19",
														"type": ""
													}
												],
												"src": "2051:377:19"
											},
											{
												"body": {
													"nativeSrc": "2552:195:19",
													"nodeType": "YulBlock",
													"src": "2552:195:19",
													"statements": [
														{
															"nativeSrc": "2562:26:19",
															"nodeType": "YulAssignment",
															"src": "2562:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:19"
																},
																"nativeSrc": "2570:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:19"
																		},
																		"nativeSrc": "2605:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:19"
																		},
																		"nativeSrc": "2624:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:19"
																},
																"nativeSrc": "2598:47:19",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:19"
															},
															"nativeSrc": "2598:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:19"
														},
														{
															"nativeSrc": "2654:86:19",
															"nodeType": "YulAssignment",
															"src": "2654:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:19"
																},
																"nativeSrc": "2662:78:19",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:19",
														"nodeType": "YulTypedName",
														"src": "2524:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:19",
														"nodeType": "YulTypedName",
														"src": "2536:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:19",
														"nodeType": "YulTypedName",
														"src": "2547:4:19",
														"type": ""
													}
												],
												"src": "2434:313:19"
											},
											{
												"body": {
													"nativeSrc": "2798:32:19",
													"nodeType": "YulBlock",
													"src": "2798:32:19",
													"statements": [
														{
															"nativeSrc": "2808:16:19",
															"nodeType": "YulAssignment",
															"src": "2808:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:19",
																"nodeType": "YulIdentifier",
																"src": "2819:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:19",
														"nodeType": "YulTypedName",
														"src": "2780:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:19",
														"nodeType": "YulTypedName",
														"src": "2790:7:19",
														"type": ""
													}
												],
												"src": "2753:77:19"
											},
											{
												"body": {
													"nativeSrc": "2879:79:19",
													"nodeType": "YulBlock",
													"src": "2879:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:19",
																"nodeType": "YulBlock",
																"src": "2936:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:19"
																			},
																			"nativeSrc": "2938:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:19"
																		},
																		"nativeSrc": "2938:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:19"
																				},
																				"nativeSrc": "2909:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:19"
																		},
																		"nativeSrc": "2899:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:19"
																},
																"nativeSrc": "2892:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:19"
															},
															"nativeSrc": "2889:63:19",
															"nodeType": "YulIf",
															"src": "2889:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:19",
														"nodeType": "YulTypedName",
														"src": "2872:5:19",
														"type": ""
													}
												],
												"src": "2836:122:19"
											},
											{
												"body": {
													"nativeSrc": "3016:87:19",
													"nodeType": "YulBlock",
													"src": "3016:87:19",
													"statements": [
														{
															"nativeSrc": "3026:29:19",
															"nodeType": "YulAssignment",
															"src": "3026:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:19"
																},
																"nativeSrc": "3035:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:19"
																},
																"nativeSrc": "3064:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:19"
															},
															"nativeSrc": "3064:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:19",
														"nodeType": "YulTypedName",
														"src": "2994:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:19",
														"nodeType": "YulTypedName",
														"src": "3002:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:19",
														"nodeType": "YulTypedName",
														"src": "3010:5:19",
														"type": ""
													}
												],
												"src": "2964:139:19"
											},
											{
												"body": {
													"nativeSrc": "3175:263:19",
													"nodeType": "YulBlock",
													"src": "3175:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:19",
																"nodeType": "YulBlock",
																"src": "3221:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:19"
																			},
																			"nativeSrc": "3223:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:19"
																		},
																		"nativeSrc": "3223:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:19"
																		},
																		"nativeSrc": "3192:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:19"
																},
																"nativeSrc": "3188:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:19"
															},
															"nativeSrc": "3185:119:19",
															"nodeType": "YulIf",
															"src": "3185:119:19"
														},
														{
															"nativeSrc": "3314:117:19",
															"nodeType": "YulBlock",
															"src": "3314:117:19",
															"statements": [
																{
																	"nativeSrc": "3329:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:19"
																				},
																				"nativeSrc": "3389:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:19"
																		},
																		"nativeSrc": "3368:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:19",
														"nodeType": "YulTypedName",
														"src": "3145:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:19",
														"nodeType": "YulTypedName",
														"src": "3156:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:19",
														"nodeType": "YulTypedName",
														"src": "3168:6:19",
														"type": ""
													}
												],
												"src": "3109:329:19"
											},
											{
												"body": {
													"nativeSrc": "3489:81:19",
													"nodeType": "YulBlock",
													"src": "3489:81:19",
													"statements": [
														{
															"nativeSrc": "3499:65:19",
															"nodeType": "YulAssignment",
															"src": "3499:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:19"
																},
																"nativeSrc": "3510:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:19",
														"nodeType": "YulTypedName",
														"src": "3471:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:19",
														"nodeType": "YulTypedName",
														"src": "3481:7:19",
														"type": ""
													}
												],
												"src": "3444:126:19"
											},
											{
												"body": {
													"nativeSrc": "3621:51:19",
													"nodeType": "YulBlock",
													"src": "3621:51:19",
													"statements": [
														{
															"nativeSrc": "3631:35:19",
															"nodeType": "YulAssignment",
															"src": "3631:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:19"
																},
																"nativeSrc": "3642:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:19",
														"nodeType": "YulTypedName",
														"src": "3603:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:19",
														"nodeType": "YulTypedName",
														"src": "3613:7:19",
														"type": ""
													}
												],
												"src": "3576:96:19"
											},
											{
												"body": {
													"nativeSrc": "3743:53:19",
													"nodeType": "YulBlock",
													"src": "3743:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:19"
																		},
																		"nativeSrc": "3765:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:19"
																},
																"nativeSrc": "3753:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:19"
															},
															"nativeSrc": "3753:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:19",
														"nodeType": "YulTypedName",
														"src": "3731:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:19",
														"nodeType": "YulTypedName",
														"src": "3738:3:19",
														"type": ""
													}
												],
												"src": "3678:118:19"
											},
											{
												"body": {
													"nativeSrc": "3900:124:19",
													"nodeType": "YulBlock",
													"src": "3900:124:19",
													"statements": [
														{
															"nativeSrc": "3910:26:19",
															"nodeType": "YulAssignment",
															"src": "3910:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:19"
																},
																"nativeSrc": "3918:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:19"
																		},
																		"nativeSrc": "3999:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:19"
																},
																"nativeSrc": "3946:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:19"
															},
															"nativeSrc": "3946:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:19",
														"nodeType": "YulTypedName",
														"src": "3872:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:19",
														"nodeType": "YulTypedName",
														"src": "3884:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:19",
														"nodeType": "YulTypedName",
														"src": "3895:4:19",
														"type": ""
													}
												],
												"src": "3802:222:19"
											},
											{
												"body": {
													"nativeSrc": "4073:79:19",
													"nodeType": "YulBlock",
													"src": "4073:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:19",
																"nodeType": "YulBlock",
																"src": "4130:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:19"
																			},
																			"nativeSrc": "4132:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:19"
																		},
																		"nativeSrc": "4132:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:19"
																				},
																				"nativeSrc": "4103:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:19"
																		},
																		"nativeSrc": "4093:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:19"
																},
																"nativeSrc": "4086:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:19"
															},
															"nativeSrc": "4083:63:19",
															"nodeType": "YulIf",
															"src": "4083:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:19",
														"nodeType": "YulTypedName",
														"src": "4066:5:19",
														"type": ""
													}
												],
												"src": "4030:122:19"
											},
											{
												"body": {
													"nativeSrc": "4210:87:19",
													"nodeType": "YulBlock",
													"src": "4210:87:19",
													"statements": [
														{
															"nativeSrc": "4220:29:19",
															"nodeType": "YulAssignment",
															"src": "4220:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:19"
																},
																"nativeSrc": "4229:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:19"
																},
																"nativeSrc": "4258:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:19"
															},
															"nativeSrc": "4258:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:19",
														"nodeType": "YulTypedName",
														"src": "4188:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:19",
														"nodeType": "YulTypedName",
														"src": "4196:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:19",
														"nodeType": "YulTypedName",
														"src": "4204:5:19",
														"type": ""
													}
												],
												"src": "4158:139:19"
											},
											{
												"body": {
													"nativeSrc": "4386:391:19",
													"nodeType": "YulBlock",
													"src": "4386:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:19",
																"nodeType": "YulBlock",
																"src": "4432:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:19"
																			},
																			"nativeSrc": "4434:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:19"
																		},
																		"nativeSrc": "4434:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:19"
																		},
																		"nativeSrc": "4403:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:19"
																},
																"nativeSrc": "4399:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:19"
															},
															"nativeSrc": "4396:119:19",
															"nodeType": "YulIf",
															"src": "4396:119:19"
														},
														{
															"nativeSrc": "4525:117:19",
															"nodeType": "YulBlock",
															"src": "4525:117:19",
															"statements": [
																{
																	"nativeSrc": "4540:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:19"
																				},
																				"nativeSrc": "4600:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:19"
																		},
																		"nativeSrc": "4579:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:19",
															"nodeType": "YulBlock",
															"src": "4652:118:19",
															"statements": [
																{
																	"nativeSrc": "4667:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:19"
																				},
																				"nativeSrc": "4728:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:19"
																		},
																		"nativeSrc": "4707:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:19",
														"nodeType": "YulTypedName",
														"src": "4348:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:19",
														"nodeType": "YulTypedName",
														"src": "4359:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:19",
														"nodeType": "YulTypedName",
														"src": "4371:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:19",
														"nodeType": "YulTypedName",
														"src": "4379:6:19",
														"type": ""
													}
												],
												"src": "4303:474:19"
											},
											{
												"body": {
													"nativeSrc": "4883:519:19",
													"nodeType": "YulBlock",
													"src": "4883:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:19",
																"nodeType": "YulBlock",
																"src": "4929:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:19"
																			},
																			"nativeSrc": "4931:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:19"
																		},
																		"nativeSrc": "4931:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:19"
																		},
																		"nativeSrc": "4900:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:19"
																},
																"nativeSrc": "4896:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:19"
															},
															"nativeSrc": "4893:119:19",
															"nodeType": "YulIf",
															"src": "4893:119:19"
														},
														{
															"nativeSrc": "5022:117:19",
															"nodeType": "YulBlock",
															"src": "5022:117:19",
															"statements": [
																{
																	"nativeSrc": "5037:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:19"
																				},
																				"nativeSrc": "5097:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:19"
																		},
																		"nativeSrc": "5076:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:19",
															"nodeType": "YulBlock",
															"src": "5149:118:19",
															"statements": [
																{
																	"nativeSrc": "5164:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:19"
																				},
																				"nativeSrc": "5225:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:19"
																		},
																		"nativeSrc": "5204:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:19",
															"nodeType": "YulBlock",
															"src": "5277:118:19",
															"statements": [
																{
																	"nativeSrc": "5292:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:19"
																				},
																				"nativeSrc": "5353:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:19"
																		},
																		"nativeSrc": "5332:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:19",
														"nodeType": "YulTypedName",
														"src": "4837:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:19",
														"nodeType": "YulTypedName",
														"src": "4848:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:19",
														"nodeType": "YulTypedName",
														"src": "4860:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:19",
														"nodeType": "YulTypedName",
														"src": "4868:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:19",
														"nodeType": "YulTypedName",
														"src": "4876:6:19",
														"type": ""
													}
												],
												"src": "4783:619:19"
											},
											{
												"body": {
													"nativeSrc": "5497:28:19",
													"nodeType": "YulBlock",
													"src": "5497:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:19"
																},
																"nativeSrc": "5507:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:19"
															},
															"nativeSrc": "5507:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:19"
											},
											{
												"body": {
													"nativeSrc": "5620:28:19",
													"nodeType": "YulBlock",
													"src": "5620:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5637:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5637:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5630:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:19"
																},
																"nativeSrc": "5630:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5630:12:19"
															},
															"nativeSrc": "5630:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5630:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5531:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:117:19"
											},
											{
												"body": {
													"nativeSrc": "5682:152:19",
													"nodeType": "YulBlock",
													"src": "5682:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:77:19",
																		"nodeType": "YulLiteral",
																		"src": "5702:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:19"
																},
																"nativeSrc": "5692:88:19",
																"nodeType": "YulFunctionCall",
																"src": "5692:88:19"
															},
															"nativeSrc": "5692:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "5692:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5796:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5789:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:19"
																},
																"nativeSrc": "5789:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5789:15:19"
															},
															"nativeSrc": "5789:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5820:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5823:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5813:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:19"
																},
																"nativeSrc": "5813:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5813:15:19"
															},
															"nativeSrc": "5813:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5813:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5654:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5654:180:19"
											},
											{
												"body": {
													"nativeSrc": "5883:238:19",
													"nodeType": "YulBlock",
													"src": "5883:238:19",
													"statements": [
														{
															"nativeSrc": "5893:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5915:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5945:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5923:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "5923:21:19"
																		},
																		"nativeSrc": "5923:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:19"
																},
																"nativeSrc": "5911:40:19",
																"nodeType": "YulFunctionCall",
																"src": "5911:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5897:10:19",
																	"nodeType": "YulTypedName",
																	"src": "5897:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6062:22:19",
																"nodeType": "YulBlock",
																"src": "6062:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6064:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6064:16:19"
																			},
																			"nativeSrc": "6064:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6064:18:19"
																		},
																		"nativeSrc": "6064:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6064:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6005:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6005:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6017:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6017:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6002:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:19"
																		},
																		"nativeSrc": "6002:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6041:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6041:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6053:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6038:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6038:2:19"
																		},
																		"nativeSrc": "6038:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5999:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5999:2:19"
																},
																"nativeSrc": "5999:62:19",
																"nodeType": "YulFunctionCall",
																"src": "5999:62:19"
															},
															"nativeSrc": "5996:88:19",
															"nodeType": "YulIf",
															"src": "5996:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6104:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "6104:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:19"
																},
																"nativeSrc": "6093:22:19",
																"nodeType": "YulFunctionCall",
																"src": "6093:22:19"
															},
															"nativeSrc": "6093:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "6093:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5840:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5869:6:19",
														"nodeType": "YulTypedName",
														"src": "5869:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5877:4:19",
														"nodeType": "YulTypedName",
														"src": "5877:4:19",
														"type": ""
													}
												],
												"src": "5840:281:19"
											},
											{
												"body": {
													"nativeSrc": "6168:88:19",
													"nodeType": "YulBlock",
													"src": "6168:88:19",
													"statements": [
														{
															"nativeSrc": "6178:30:19",
															"nodeType": "YulAssignment",
															"src": "6178:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6188:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "6188:18:19"
																},
																"nativeSrc": "6188:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6178:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6237:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6237:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6245:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6217:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "6217:19:19"
																},
																"nativeSrc": "6217:33:19",
																"nodeType": "YulFunctionCall",
																"src": "6217:33:19"
															},
															"nativeSrc": "6217:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "6217:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6127:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6152:4:19",
														"nodeType": "YulTypedName",
														"src": "6152:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6161:6:19",
														"nodeType": "YulTypedName",
														"src": "6161:6:19",
														"type": ""
													}
												],
												"src": "6127:129:19"
											},
											{
												"body": {
													"nativeSrc": "6329:241:19",
													"nodeType": "YulBlock",
													"src": "6329:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6434:22:19",
																"nodeType": "YulBlock",
																"src": "6434:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6436:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6436:16:19"
																			},
																			"nativeSrc": "6436:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:18:19"
																		},
																		"nativeSrc": "6436:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:18:19",
																		"nodeType": "YulLiteral",
																		"src": "6414:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6403:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6403:2:19"
																},
																"nativeSrc": "6403:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6403:30:19"
															},
															"nativeSrc": "6400:56:19",
															"nodeType": "YulIf",
															"src": "6400:56:19"
														},
														{
															"nativeSrc": "6466:37:19",
															"nodeType": "YulAssignment",
															"src": "6466:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6496:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6496:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6474:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "6474:21:19"
																},
																"nativeSrc": "6474:29:19",
																"nodeType": "YulFunctionCall",
																"src": "6474:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6466:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:19"
																}
															]
														},
														{
															"nativeSrc": "6540:23:19",
															"nodeType": "YulAssignment",
															"src": "6540:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6552:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6558:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6548:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:19"
																},
																"nativeSrc": "6548:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6548:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6540:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6262:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6313:6:19",
														"nodeType": "YulTypedName",
														"src": "6313:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6324:4:19",
														"nodeType": "YulTypedName",
														"src": "6324:4:19",
														"type": ""
													}
												],
												"src": "6262:308:19"
											},
											{
												"body": {
													"nativeSrc": "6640:84:19",
													"nodeType": "YulBlock",
													"src": "6640:84:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6664:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6669:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6651:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6651:12:19"
																},
																"nativeSrc": "6651:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6651:30:19"
															},
															"nativeSrc": "6651:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6651:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6701:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6706:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6706:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:19"
																		},
																		"nativeSrc": "6697:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:19"
																},
																"nativeSrc": "6690:27:19",
																"nodeType": "YulFunctionCall",
																"src": "6690:27:19"
															},
															"nativeSrc": "6690:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "6690:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6576:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6622:3:19",
														"nodeType": "YulTypedName",
														"src": "6622:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6627:3:19",
														"nodeType": "YulTypedName",
														"src": "6627:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6632:6:19",
														"nodeType": "YulTypedName",
														"src": "6632:6:19",
														"type": ""
													}
												],
												"src": "6576:148:19"
											},
											{
												"body": {
													"nativeSrc": "6814:341:19",
													"nodeType": "YulBlock",
													"src": "6814:341:19",
													"statements": [
														{
															"nativeSrc": "6824:75:19",
															"nodeType": "YulAssignment",
															"src": "6824:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6891:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6849:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "6849:41:19"
																		},
																		"nativeSrc": "6849:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6833:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "6833:15:19"
																},
																"nativeSrc": "6833:66:19",
																"nodeType": "YulFunctionCall",
																"src": "6833:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6824:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6915:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6915:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:19"
																},
																"nativeSrc": "6908:21:19",
																"nodeType": "YulFunctionCall",
																"src": "6908:21:19"
															},
															"nativeSrc": "6908:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "6908:21:19"
														},
														{
															"nativeSrc": "6938:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6938:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6953:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6953:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:19"
																},
																"nativeSrc": "6949:16:19",
																"nodeType": "YulFunctionCall",
																"src": "6949:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6942:3:19",
																	"nodeType": "YulTypedName",
																	"src": "6942:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:83:19",
																"nodeType": "YulBlock",
																"src": "7003:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7005:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7005:77:19"
																			},
																			"nativeSrc": "7005:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:79:19"
																		},
																		"nativeSrc": "7005:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6984:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6984:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6989:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6980:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6980:3:19"
																		},
																		"nativeSrc": "6980:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6980:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6998:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6977:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:19"
																},
																"nativeSrc": "6977:25:19",
																"nodeType": "YulFunctionCall",
																"src": "6977:25:19"
															},
															"nativeSrc": "6974:112:19",
															"nodeType": "YulIf",
															"src": "6974:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7132:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7137:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7137:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7142:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7095:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "7095:36:19"
																},
																"nativeSrc": "7095:54:19",
																"nodeType": "YulFunctionCall",
																"src": "7095:54:19"
															},
															"nativeSrc": "7095:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "7095:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6730:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6787:3:19",
														"nodeType": "YulTypedName",
														"src": "6787:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6792:6:19",
														"nodeType": "YulTypedName",
														"src": "6792:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6800:3:19",
														"nodeType": "YulTypedName",
														"src": "6800:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6808:5:19",
														"nodeType": "YulTypedName",
														"src": "6808:5:19",
														"type": ""
													}
												],
												"src": "6730:425:19"
											},
											{
												"body": {
													"nativeSrc": "7237:278:19",
													"nodeType": "YulBlock",
													"src": "7237:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:19",
																"nodeType": "YulBlock",
																"src": "7286:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7288:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:19"
																			},
																			"nativeSrc": "7288:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:19"
																		},
																		"nativeSrc": "7288:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:19",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:19"
																				},
																				"nativeSrc": "7261:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7280:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7280:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7257:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:19"
																		},
																		"nativeSrc": "7257:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7250:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:19"
																},
																"nativeSrc": "7250:35:19",
																"nodeType": "YulFunctionCall",
																"src": "7250:35:19"
															},
															"nativeSrc": "7247:122:19",
															"nodeType": "YulIf",
															"src": "7247:122:19"
														},
														{
															"nativeSrc": "7378:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7405:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7392:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "7392:12:19"
																},
																"nativeSrc": "7392:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7392:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7421:88:19",
															"nodeType": "YulAssignment",
															"src": "7421:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7482:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:4:19",
																				"nodeType": "YulLiteral",
																				"src": "7490:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7478:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:19"
																		},
																		"nativeSrc": "7478:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7505:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7430:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "7430:47:19"
																},
																"nativeSrc": "7430:79:19",
																"nodeType": "YulFunctionCall",
																"src": "7430:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7421:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7421:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7175:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7215:6:19",
														"nodeType": "YulTypedName",
														"src": "7215:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7223:3:19",
														"nodeType": "YulTypedName",
														"src": "7223:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7231:5:19",
														"nodeType": "YulTypedName",
														"src": "7231:5:19",
														"type": ""
													}
												],
												"src": "7175:340:19"
											},
											{
												"body": {
													"nativeSrc": "7614:561:19",
													"nodeType": "YulBlock",
													"src": "7614:561:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7660:83:19",
																"nodeType": "YulBlock",
																"src": "7660:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7662:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7662:77:19"
																			},
																			"nativeSrc": "7662:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7662:79:19"
																		},
																		"nativeSrc": "7662:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7662:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7635:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7635:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7644:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7644:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7631:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:19"
																		},
																		"nativeSrc": "7631:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7656:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:19"
																},
																"nativeSrc": "7627:32:19",
																"nodeType": "YulFunctionCall",
																"src": "7627:32:19"
															},
															"nativeSrc": "7624:119:19",
															"nodeType": "YulIf",
															"src": "7624:119:19"
														},
														{
															"nativeSrc": "7753:117:19",
															"nodeType": "YulBlock",
															"src": "7753:117:19",
															"statements": [
																{
																	"nativeSrc": "7768:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7768:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7782:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7782:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7772:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7772:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7797:63:19",
																	"nodeType": "YulAssignment",
																	"src": "7797:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7832:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7832:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7843:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7843:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7828:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7828:3:19"
																				},
																				"nativeSrc": "7828:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7828:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7852:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7852:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7807:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "7807:20:19"
																		},
																		"nativeSrc": "7807:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7797:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7797:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7880:288:19",
															"nodeType": "YulBlock",
															"src": "7880:288:19",
															"statements": [
																{
																	"nativeSrc": "7895:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7895:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7926:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7926:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7937:2:19",
																						"nodeType": "YulLiteral",
																						"src": "7937:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7922:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7922:3:19"
																				},
																				"nativeSrc": "7922:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7922:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7909:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "7909:12:19"
																		},
																		"nativeSrc": "7909:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7909:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7899:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7899:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7988:83:19",
																		"nodeType": "YulBlock",
																		"src": "7988:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7990:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "7990:77:19"
																					},
																					"nativeSrc": "7990:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "7990:79:19"
																				},
																				"nativeSrc": "7990:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "7990:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7960:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7960:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7968:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7968:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7957:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7957:2:19"
																		},
																		"nativeSrc": "7957:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:30:19"
																	},
																	"nativeSrc": "7954:117:19",
																	"nodeType": "YulIf",
																	"src": "7954:117:19"
																},
																{
																	"nativeSrc": "8085:73:19",
																	"nodeType": "YulAssignment",
																	"src": "8085:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8130:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8130:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8141:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8141:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8126:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8126:3:19"
																				},
																				"nativeSrc": "8126:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8126:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8150:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8150:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8095:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "8095:30:19"
																		},
																		"nativeSrc": "8095:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8095:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8085:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8085:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nativeSrc": "7521:654:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7576:9:19",
														"nodeType": "YulTypedName",
														"src": "7576:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7587:7:19",
														"nodeType": "YulTypedName",
														"src": "7587:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7599:6:19",
														"nodeType": "YulTypedName",
														"src": "7599:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7607:6:19",
														"nodeType": "YulTypedName",
														"src": "7607:6:19",
														"type": ""
													}
												],
												"src": "7521:654:19"
											},
											{
												"body": {
													"nativeSrc": "8247:263:19",
													"nodeType": "YulBlock",
													"src": "8247:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8293:83:19",
																"nodeType": "YulBlock",
																"src": "8293:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8295:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8295:77:19"
																			},
																			"nativeSrc": "8295:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8295:79:19"
																		},
																		"nativeSrc": "8295:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8295:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8268:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8268:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8277:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8277:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8264:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8264:3:19"
																		},
																		"nativeSrc": "8264:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8264:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8289:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8289:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8260:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8260:3:19"
																},
																"nativeSrc": "8260:32:19",
																"nodeType": "YulFunctionCall",
																"src": "8260:32:19"
															},
															"nativeSrc": "8257:119:19",
															"nodeType": "YulIf",
															"src": "8257:119:19"
														},
														{
															"nativeSrc": "8386:117:19",
															"nodeType": "YulBlock",
															"src": "8386:117:19",
															"statements": [
																{
																	"nativeSrc": "8401:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8401:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8415:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8415:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8405:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8405:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8430:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8430:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8465:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8465:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8476:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8476:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8461:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8461:3:19"
																				},
																				"nativeSrc": "8461:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8461:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8485:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8485:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8440:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8440:20:19"
																		},
																		"nativeSrc": "8440:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8430:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8430:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8181:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8217:9:19",
														"nodeType": "YulTypedName",
														"src": "8217:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8228:7:19",
														"nodeType": "YulTypedName",
														"src": "8228:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8240:6:19",
														"nodeType": "YulTypedName",
														"src": "8240:6:19",
														"type": ""
													}
												],
												"src": "8181:329:19"
											},
											{
												"body": {
													"nativeSrc": "8581:53:19",
													"nodeType": "YulBlock",
													"src": "8581:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8598:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8598:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8621:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8621:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8603:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "8603:17:19"
																		},
																		"nativeSrc": "8603:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8603:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8591:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:19"
																},
																"nativeSrc": "8591:37:19",
																"nodeType": "YulFunctionCall",
																"src": "8591:37:19"
															},
															"nativeSrc": "8591:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "8591:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8516:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8569:5:19",
														"nodeType": "YulTypedName",
														"src": "8569:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8576:3:19",
														"nodeType": "YulTypedName",
														"src": "8576:3:19",
														"type": ""
													}
												],
												"src": "8516:118:19"
											},
											{
												"body": {
													"nativeSrc": "8738:124:19",
													"nodeType": "YulBlock",
													"src": "8738:124:19",
													"statements": [
														{
															"nativeSrc": "8748:26:19",
															"nodeType": "YulAssignment",
															"src": "8748:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8760:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8760:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8771:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8771:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8756:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8756:3:19"
																},
																"nativeSrc": "8756:18:19",
																"nodeType": "YulFunctionCall",
																"src": "8756:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8748:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8748:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8828:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8828:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8841:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8841:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8852:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8852:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8837:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:19"
																		},
																		"nativeSrc": "8837:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8784:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "8784:43:19"
																},
																"nativeSrc": "8784:71:19",
																"nodeType": "YulFunctionCall",
																"src": "8784:71:19"
															},
															"nativeSrc": "8784:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "8784:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8640:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8710:9:19",
														"nodeType": "YulTypedName",
														"src": "8710:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8722:6:19",
														"nodeType": "YulTypedName",
														"src": "8722:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8733:4:19",
														"nodeType": "YulTypedName",
														"src": "8733:4:19",
														"type": ""
													}
												],
												"src": "8640:222:19"
											},
											{
												"body": {
													"nativeSrc": "8951:391:19",
													"nodeType": "YulBlock",
													"src": "8951:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8997:83:19",
																"nodeType": "YulBlock",
																"src": "8997:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8999:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8999:77:19"
																			},
																			"nativeSrc": "8999:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8999:79:19"
																		},
																		"nativeSrc": "8999:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8999:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8972:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8972:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8981:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8981:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8968:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:19"
																		},
																		"nativeSrc": "8968:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8964:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:19"
																},
																"nativeSrc": "8964:32:19",
																"nodeType": "YulFunctionCall",
																"src": "8964:32:19"
															},
															"nativeSrc": "8961:119:19",
															"nodeType": "YulIf",
															"src": "8961:119:19"
														},
														{
															"nativeSrc": "9090:117:19",
															"nodeType": "YulBlock",
															"src": "9090:117:19",
															"statements": [
																{
																	"nativeSrc": "9105:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9105:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9119:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9119:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9109:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9109:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9134:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9134:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9169:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9169:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9180:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9180:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9165:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9165:3:19"
																				},
																				"nativeSrc": "9165:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9165:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9144:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9144:20:19"
																		},
																		"nativeSrc": "9144:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9144:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9134:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9134:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9217:118:19",
															"nodeType": "YulBlock",
															"src": "9217:118:19",
															"statements": [
																{
																	"nativeSrc": "9232:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9232:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9246:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9246:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9236:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9236:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9262:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9262:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9297:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9297:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9308:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9308:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9293:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9293:3:19"
																				},
																				"nativeSrc": "9293:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9293:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9317:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9317:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9272:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9272:20:19"
																		},
																		"nativeSrc": "9272:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9272:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9262:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9262:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8868:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8913:9:19",
														"nodeType": "YulTypedName",
														"src": "8913:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8924:7:19",
														"nodeType": "YulTypedName",
														"src": "8924:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8936:6:19",
														"nodeType": "YulTypedName",
														"src": "8936:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8944:6:19",
														"nodeType": "YulTypedName",
														"src": "8944:6:19",
														"type": ""
													}
												],
												"src": "8868:474:19"
											},
											{
												"body": {
													"nativeSrc": "9388:76:19",
													"nodeType": "YulBlock",
													"src": "9388:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9442:16:19",
																"nodeType": "YulBlock",
																"src": "9442:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9451:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9451:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9454:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9454:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9444:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9444:6:19"
																			},
																			"nativeSrc": "9444:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9444:12:19"
																		},
																		"nativeSrc": "9444:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9444:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9411:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9411:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9433:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "9433:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9418:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "9418:14:19"
																				},
																				"nativeSrc": "9418:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9418:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9408:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9408:2:19"
																		},
																		"nativeSrc": "9408:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9408:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9401:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9401:6:19"
																},
																"nativeSrc": "9401:40:19",
																"nodeType": "YulFunctionCall",
																"src": "9401:40:19"
															},
															"nativeSrc": "9398:60:19",
															"nodeType": "YulIf",
															"src": "9398:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9348:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9381:5:19",
														"nodeType": "YulTypedName",
														"src": "9381:5:19",
														"type": ""
													}
												],
												"src": "9348:116:19"
											},
											{
												"body": {
													"nativeSrc": "9519:84:19",
													"nodeType": "YulBlock",
													"src": "9519:84:19",
													"statements": [
														{
															"nativeSrc": "9529:29:19",
															"nodeType": "YulAssignment",
															"src": "9529:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9551:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9551:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9538:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "9538:12:19"
																},
																"nativeSrc": "9538:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9538:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9529:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9529:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9591:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "9591:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9567:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "9567:23:19"
																},
																"nativeSrc": "9567:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9567:30:19"
															},
															"nativeSrc": "9567:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "9567:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9470:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9497:6:19",
														"nodeType": "YulTypedName",
														"src": "9497:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9505:3:19",
														"nodeType": "YulTypedName",
														"src": "9505:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9513:5:19",
														"nodeType": "YulTypedName",
														"src": "9513:5:19",
														"type": ""
													}
												],
												"src": "9470:133:19"
											},
											{
												"body": {
													"nativeSrc": "9689:388:19",
													"nodeType": "YulBlock",
													"src": "9689:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9735:83:19",
																"nodeType": "YulBlock",
																"src": "9735:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9737:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9737:77:19"
																			},
																			"nativeSrc": "9737:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9737:79:19"
																		},
																		"nativeSrc": "9737:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9737:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9710:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9710:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9719:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9719:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9706:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9706:3:19"
																		},
																		"nativeSrc": "9706:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9706:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9731:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9731:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9702:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9702:3:19"
																},
																"nativeSrc": "9702:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9702:32:19"
															},
															"nativeSrc": "9699:119:19",
															"nodeType": "YulIf",
															"src": "9699:119:19"
														},
														{
															"nativeSrc": "9828:117:19",
															"nodeType": "YulBlock",
															"src": "9828:117:19",
															"statements": [
																{
																	"nativeSrc": "9843:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9843:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9857:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9857:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9847:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9847:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9872:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9872:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9907:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9907:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9918:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9918:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9903:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9903:3:19"
																				},
																				"nativeSrc": "9903:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9903:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9927:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9927:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9882:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9882:20:19"
																		},
																		"nativeSrc": "9882:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9882:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9872:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9872:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9955:115:19",
															"nodeType": "YulBlock",
															"src": "9955:115:19",
															"statements": [
																{
																	"nativeSrc": "9970:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9970:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9984:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9984:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9974:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9974:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10000:60:19",
																	"nodeType": "YulAssignment",
																	"src": "10000:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10032:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10032:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10043:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10043:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10028:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10028:3:19"
																				},
																				"nativeSrc": "10028:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10028:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10052:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10052:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10010:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "10010:17:19"
																		},
																		"nativeSrc": "10010:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10010:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10000:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10000:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9609:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9651:9:19",
														"nodeType": "YulTypedName",
														"src": "9651:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9662:7:19",
														"nodeType": "YulTypedName",
														"src": "9662:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9674:6:19",
														"nodeType": "YulTypedName",
														"src": "9674:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9682:6:19",
														"nodeType": "YulTypedName",
														"src": "9682:6:19",
														"type": ""
													}
												],
												"src": "9609:468:19"
											},
											{
												"body": {
													"nativeSrc": "10231:282:19",
													"nodeType": "YulBlock",
													"src": "10231:282:19",
													"statements": [
														{
															"nativeSrc": "10241:26:19",
															"nodeType": "YulAssignment",
															"src": "10241:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10253:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10253:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10264:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10249:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10249:3:19"
																},
																"nativeSrc": "10249:18:19",
																"nodeType": "YulFunctionCall",
																"src": "10249:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10241:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10241:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10321:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10321:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10334:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10334:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10345:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10345:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10330:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10330:3:19"
																		},
																		"nativeSrc": "10330:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10330:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10277:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "10277:43:19"
																},
																"nativeSrc": "10277:71:19",
																"nodeType": "YulFunctionCall",
																"src": "10277:71:19"
															},
															"nativeSrc": "10277:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "10277:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10402:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10402:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10415:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10415:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10426:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10426:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10411:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:19"
																		},
																		"nativeSrc": "10411:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10411:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10358:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "10358:43:19"
																},
																"nativeSrc": "10358:72:19",
																"nodeType": "YulFunctionCall",
																"src": "10358:72:19"
															},
															"nativeSrc": "10358:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "10358:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10502:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10502:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10487:3:19"
																		},
																		"nativeSrc": "10487:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10487:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "10440:37:19"
																},
																"nativeSrc": "10440:66:19",
																"nodeType": "YulFunctionCall",
																"src": "10440:66:19"
															},
															"nativeSrc": "10440:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "10440:66:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "10083:430:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10187:9:19",
														"nodeType": "YulTypedName",
														"src": "10187:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10199:6:19",
														"nodeType": "YulTypedName",
														"src": "10199:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10207:6:19",
														"nodeType": "YulTypedName",
														"src": "10207:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10215:6:19",
														"nodeType": "YulTypedName",
														"src": "10215:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10226:4:19",
														"nodeType": "YulTypedName",
														"src": "10226:4:19",
														"type": ""
													}
												],
												"src": "10083:430:19"
											},
											{
												"body": {
													"nativeSrc": "10585:241:19",
													"nodeType": "YulBlock",
													"src": "10585:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10690:22:19",
																"nodeType": "YulBlock",
																"src": "10690:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10692:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10692:16:19"
																			},
																			"nativeSrc": "10692:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10692:18:19"
																		},
																		"nativeSrc": "10692:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10692:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10662:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10662:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10670:18:19",
																		"nodeType": "YulLiteral",
																		"src": "10670:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10659:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10659:2:19"
																},
																"nativeSrc": "10659:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10659:30:19"
															},
															"nativeSrc": "10656:56:19",
															"nodeType": "YulIf",
															"src": "10656:56:19"
														},
														{
															"nativeSrc": "10722:37:19",
															"nodeType": "YulAssignment",
															"src": "10722:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10752:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10752:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10730:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "10730:21:19"
																},
																"nativeSrc": "10730:29:19",
																"nodeType": "YulFunctionCall",
																"src": "10730:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10722:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10722:4:19"
																}
															]
														},
														{
															"nativeSrc": "10796:23:19",
															"nodeType": "YulAssignment",
															"src": "10796:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10808:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10808:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10814:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10814:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10804:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:19"
																},
																"nativeSrc": "10804:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10804:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10796:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10796:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10519:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10569:6:19",
														"nodeType": "YulTypedName",
														"src": "10569:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10580:4:19",
														"nodeType": "YulTypedName",
														"src": "10580:4:19",
														"type": ""
													}
												],
												"src": "10519:307:19"
											},
											{
												"body": {
													"nativeSrc": "10915:340:19",
													"nodeType": "YulBlock",
													"src": "10915:340:19",
													"statements": [
														{
															"nativeSrc": "10925:74:19",
															"nodeType": "YulAssignment",
															"src": "10925:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10991:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10991:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10950:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "10950:40:19"
																		},
																		"nativeSrc": "10950:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10950:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10934:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "10934:15:19"
																},
																"nativeSrc": "10934:65:19",
																"nodeType": "YulFunctionCall",
																"src": "10934:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10925:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10925:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11015:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11015:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11022:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11022:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11008:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11008:6:19"
																},
																"nativeSrc": "11008:21:19",
																"nodeType": "YulFunctionCall",
																"src": "11008:21:19"
															},
															"nativeSrc": "11008:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "11008:21:19"
														},
														{
															"nativeSrc": "11038:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11038:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11053:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11053:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11060:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11060:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11049:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11049:3:19"
																},
																"nativeSrc": "11049:16:19",
																"nodeType": "YulFunctionCall",
																"src": "11049:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11042:3:19",
																	"nodeType": "YulTypedName",
																	"src": "11042:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11103:83:19",
																"nodeType": "YulBlock",
																"src": "11103:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11105:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11105:77:19"
																			},
																			"nativeSrc": "11105:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11105:79:19"
																		},
																		"nativeSrc": "11105:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11105:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11084:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "11084:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11089:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11089:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11080:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11080:3:19"
																		},
																		"nativeSrc": "11080:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11080:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11098:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11098:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11077:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11077:2:19"
																},
																"nativeSrc": "11077:25:19",
																"nodeType": "YulFunctionCall",
																"src": "11077:25:19"
															},
															"nativeSrc": "11074:112:19",
															"nodeType": "YulIf",
															"src": "11074:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11232:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11232:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11237:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11237:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11242:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11242:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11195:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "11195:36:19"
																},
																"nativeSrc": "11195:54:19",
																"nodeType": "YulFunctionCall",
																"src": "11195:54:19"
															},
															"nativeSrc": "11195:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "11195:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10832:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10888:3:19",
														"nodeType": "YulTypedName",
														"src": "10888:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10893:6:19",
														"nodeType": "YulTypedName",
														"src": "10893:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10901:3:19",
														"nodeType": "YulTypedName",
														"src": "10901:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10909:5:19",
														"nodeType": "YulTypedName",
														"src": "10909:5:19",
														"type": ""
													}
												],
												"src": "10832:423:19"
											},
											{
												"body": {
													"nativeSrc": "11335:277:19",
													"nodeType": "YulBlock",
													"src": "11335:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11384:83:19",
																"nodeType": "YulBlock",
																"src": "11384:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11386:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11386:77:19"
																			},
																			"nativeSrc": "11386:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11386:79:19"
																		},
																		"nativeSrc": "11386:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11386:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11363:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11363:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11371:4:19",
																						"nodeType": "YulLiteral",
																						"src": "11371:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11359:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11359:3:19"
																				},
																				"nativeSrc": "11359:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11359:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11378:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "11378:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11355:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11355:3:19"
																		},
																		"nativeSrc": "11355:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11355:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11348:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11348:6:19"
																},
																"nativeSrc": "11348:35:19",
																"nodeType": "YulFunctionCall",
																"src": "11348:35:19"
															},
															"nativeSrc": "11345:122:19",
															"nodeType": "YulIf",
															"src": "11345:122:19"
														},
														{
															"nativeSrc": "11476:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11476:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11503:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11503:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11490:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "11490:12:19"
																},
																"nativeSrc": "11490:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11490:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11480:6:19",
																	"nodeType": "YulTypedName",
																	"src": "11480:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11519:87:19",
															"nodeType": "YulAssignment",
															"src": "11519:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11579:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11579:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11587:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11587:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11575:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11575:3:19"
																		},
																		"nativeSrc": "11575:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11575:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11594:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11594:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11602:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11602:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11528:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "11528:46:19"
																},
																"nativeSrc": "11528:78:19",
																"nodeType": "YulFunctionCall",
																"src": "11528:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11519:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11519:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11274:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11313:6:19",
														"nodeType": "YulTypedName",
														"src": "11313:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11321:3:19",
														"nodeType": "YulTypedName",
														"src": "11321:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11329:5:19",
														"nodeType": "YulTypedName",
														"src": "11329:5:19",
														"type": ""
													}
												],
												"src": "11274:338:19"
											},
											{
												"body": {
													"nativeSrc": "11744:817:19",
													"nodeType": "YulBlock",
													"src": "11744:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11791:83:19",
																"nodeType": "YulBlock",
																"src": "11791:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11793:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11793:77:19"
																			},
																			"nativeSrc": "11793:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11793:79:19"
																		},
																		"nativeSrc": "11793:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11793:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11765:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11765:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11774:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11761:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11761:3:19"
																		},
																		"nativeSrc": "11761:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11761:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11786:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11786:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11757:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11757:3:19"
																},
																"nativeSrc": "11757:33:19",
																"nodeType": "YulFunctionCall",
																"src": "11757:33:19"
															},
															"nativeSrc": "11754:120:19",
															"nodeType": "YulIf",
															"src": "11754:120:19"
														},
														{
															"nativeSrc": "11884:117:19",
															"nodeType": "YulBlock",
															"src": "11884:117:19",
															"statements": [
																{
																	"nativeSrc": "11899:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11899:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11913:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11913:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11903:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11903:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11928:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11928:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11963:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11963:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11974:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11974:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11959:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11959:3:19"
																				},
																				"nativeSrc": "11959:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11959:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11983:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11983:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11938:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11938:20:19"
																		},
																		"nativeSrc": "11938:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11938:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11928:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11928:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12011:118:19",
															"nodeType": "YulBlock",
															"src": "12011:118:19",
															"statements": [
																{
																	"nativeSrc": "12026:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12026:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12040:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12040:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12030:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12030:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12056:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12056:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12091:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12091:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12102:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12102:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12087:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12087:3:19"
																				},
																				"nativeSrc": "12087:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12087:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12111:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12111:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12066:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12066:20:19"
																		},
																		"nativeSrc": "12066:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12066:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12056:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12056:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12139:118:19",
															"nodeType": "YulBlock",
															"src": "12139:118:19",
															"statements": [
																{
																	"nativeSrc": "12154:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12154:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12168:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12168:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12158:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12158:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12184:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12184:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12219:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12219:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12230:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12230:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12215:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12215:3:19"
																				},
																				"nativeSrc": "12215:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12215:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12239:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12239:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12194:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12194:20:19"
																		},
																		"nativeSrc": "12194:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12194:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12184:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12184:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12267:287:19",
															"nodeType": "YulBlock",
															"src": "12267:287:19",
															"statements": [
																{
																	"nativeSrc": "12282:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12282:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12313:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12313:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12324:2:19",
																						"nodeType": "YulLiteral",
																						"src": "12324:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12309:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12309:3:19"
																				},
																				"nativeSrc": "12309:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12309:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12296:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "12296:12:19"
																		},
																		"nativeSrc": "12296:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12296:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12286:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12286:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12375:83:19",
																		"nodeType": "YulBlock",
																		"src": "12375:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12377:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "12377:77:19"
																					},
																					"nativeSrc": "12377:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "12377:79:19"
																				},
																				"nativeSrc": "12377:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "12377:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12347:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12347:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12355:18:19",
																				"nodeType": "YulLiteral",
																				"src": "12355:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12344:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "12344:2:19"
																		},
																		"nativeSrc": "12344:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12344:30:19"
																	},
																	"nativeSrc": "12341:117:19",
																	"nodeType": "YulIf",
																	"src": "12341:117:19"
																},
																{
																	"nativeSrc": "12472:72:19",
																	"nodeType": "YulAssignment",
																	"src": "12472:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12516:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12516:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12527:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12527:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12512:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12512:3:19"
																				},
																				"nativeSrc": "12512:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12512:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12536:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12536:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12482:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "12482:29:19"
																		},
																		"nativeSrc": "12482:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12482:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12472:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12472:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11618:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11690:9:19",
														"nodeType": "YulTypedName",
														"src": "11690:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11701:7:19",
														"nodeType": "YulTypedName",
														"src": "11701:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11713:6:19",
														"nodeType": "YulTypedName",
														"src": "11713:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11721:6:19",
														"nodeType": "YulTypedName",
														"src": "11721:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11729:6:19",
														"nodeType": "YulTypedName",
														"src": "11729:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11737:6:19",
														"nodeType": "YulTypedName",
														"src": "11737:6:19",
														"type": ""
													}
												],
												"src": "11618:943:19"
											},
											{
												"body": {
													"nativeSrc": "12650:391:19",
													"nodeType": "YulBlock",
													"src": "12650:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12696:83:19",
																"nodeType": "YulBlock",
																"src": "12696:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12698:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12698:77:19"
																			},
																			"nativeSrc": "12698:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12698:79:19"
																		},
																		"nativeSrc": "12698:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12698:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12671:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12671:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12680:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12680:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12667:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12667:3:19"
																		},
																		"nativeSrc": "12667:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12667:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12692:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12692:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12663:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12663:3:19"
																},
																"nativeSrc": "12663:32:19",
																"nodeType": "YulFunctionCall",
																"src": "12663:32:19"
															},
															"nativeSrc": "12660:119:19",
															"nodeType": "YulIf",
															"src": "12660:119:19"
														},
														{
															"nativeSrc": "12789:117:19",
															"nodeType": "YulBlock",
															"src": "12789:117:19",
															"statements": [
																{
																	"nativeSrc": "12804:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12804:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12818:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12818:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12808:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12808:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12833:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12833:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12868:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12868:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12879:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12879:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12864:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12864:3:19"
																				},
																				"nativeSrc": "12864:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12864:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12888:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12888:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12843:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12843:20:19"
																		},
																		"nativeSrc": "12843:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12843:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12833:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12833:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12916:118:19",
															"nodeType": "YulBlock",
															"src": "12916:118:19",
															"statements": [
																{
																	"nativeSrc": "12931:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12931:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12945:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12945:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12935:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12935:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12961:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12961:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12996:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12996:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13007:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13007:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12992:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12992:3:19"
																				},
																				"nativeSrc": "12992:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12992:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13016:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13016:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12971:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12971:20:19"
																		},
																		"nativeSrc": "12971:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12971:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12961:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12961:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12567:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12612:9:19",
														"nodeType": "YulTypedName",
														"src": "12612:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12623:7:19",
														"nodeType": "YulTypedName",
														"src": "12623:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12635:6:19",
														"nodeType": "YulTypedName",
														"src": "12635:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12643:6:19",
														"nodeType": "YulTypedName",
														"src": "12643:6:19",
														"type": ""
													}
												],
												"src": "12567:474:19"
											},
											{
												"body": {
													"nativeSrc": "13075:152:19",
													"nodeType": "YulBlock",
													"src": "13075:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13092:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13092:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13095:77:19",
																		"nodeType": "YulLiteral",
																		"src": "13095:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13085:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:19"
																},
																"nativeSrc": "13085:88:19",
																"nodeType": "YulFunctionCall",
																"src": "13085:88:19"
															},
															"nativeSrc": "13085:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "13085:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13189:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13189:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13192:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13182:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:19"
																},
																"nativeSrc": "13182:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13182:15:19"
															},
															"nativeSrc": "13182:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13182:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13213:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13213:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13216:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13216:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13206:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13206:6:19"
																},
																"nativeSrc": "13206:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13206:15:19"
															},
															"nativeSrc": "13206:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13206:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13047:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "13047:180:19"
											},
											{
												"body": {
													"nativeSrc": "13284:269:19",
													"nodeType": "YulBlock",
													"src": "13284:269:19",
													"statements": [
														{
															"nativeSrc": "13294:22:19",
															"nodeType": "YulAssignment",
															"src": "13294:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13308:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13308:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13314:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13314:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13304:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13304:3:19"
																},
																"nativeSrc": "13304:12:19",
																"nodeType": "YulFunctionCall",
																"src": "13304:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13294:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13294:6:19"
																}
															]
														},
														{
															"nativeSrc": "13325:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "13325:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13355:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13355:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13361:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13361:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13351:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13351:3:19"
																},
																"nativeSrc": "13351:12:19",
																"nodeType": "YulFunctionCall",
																"src": "13351:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13329:18:19",
																	"nodeType": "YulTypedName",
																	"src": "13329:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13402:51:19",
																"nodeType": "YulBlock",
																"src": "13402:51:19",
																"statements": [
																	{
																		"nativeSrc": "13416:27:19",
																		"nodeType": "YulAssignment",
																		"src": "13416:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13430:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "13430:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13438:4:19",
																					"nodeType": "YulLiteral",
																					"src": "13438:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13426:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "13426:3:19"
																			},
																			"nativeSrc": "13426:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13426:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13416:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13416:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13382:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "13382:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13375:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13375:6:19"
																},
																"nativeSrc": "13375:26:19",
																"nodeType": "YulFunctionCall",
																"src": "13375:26:19"
															},
															"nativeSrc": "13372:81:19",
															"nodeType": "YulIf",
															"src": "13372:81:19"
														},
														{
															"body": {
																"nativeSrc": "13505:42:19",
																"nodeType": "YulBlock",
																"src": "13505:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13519:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "13519:16:19"
																			},
																			"nativeSrc": "13519:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13519:18:19"
																		},
																		"nativeSrc": "13519:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13519:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13469:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "13469:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13492:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13492:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13500:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13500:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13489:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "13489:2:19"
																		},
																		"nativeSrc": "13489:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13489:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13466:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13466:2:19"
																},
																"nativeSrc": "13466:38:19",
																"nodeType": "YulFunctionCall",
																"src": "13466:38:19"
															},
															"nativeSrc": "13463:84:19",
															"nodeType": "YulIf",
															"src": "13463:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13233:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13268:4:19",
														"nodeType": "YulTypedName",
														"src": "13268:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13277:6:19",
														"nodeType": "YulTypedName",
														"src": "13277:6:19",
														"type": ""
													}
												],
												"src": "13233:320:19"
											},
											{
												"body": {
													"nativeSrc": "13713:288:19",
													"nodeType": "YulBlock",
													"src": "13713:288:19",
													"statements": [
														{
															"nativeSrc": "13723:26:19",
															"nodeType": "YulAssignment",
															"src": "13723:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13735:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13735:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13746:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13746:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13731:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13731:3:19"
																},
																"nativeSrc": "13731:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13731:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13723:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13723:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13803:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13803:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13816:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13816:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13827:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13827:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13812:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13812:3:19"
																		},
																		"nativeSrc": "13812:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13812:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13759:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13759:43:19"
																},
																"nativeSrc": "13759:71:19",
																"nodeType": "YulFunctionCall",
																"src": "13759:71:19"
															},
															"nativeSrc": "13759:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "13759:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13884:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13884:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13897:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13897:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13908:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13908:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13893:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13893:3:19"
																		},
																		"nativeSrc": "13893:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13893:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13840:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13840:43:19"
																},
																"nativeSrc": "13840:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13840:72:19"
															},
															"nativeSrc": "13840:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13840:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13966:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13966:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13979:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13979:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13990:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13990:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13975:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13975:3:19"
																		},
																		"nativeSrc": "13975:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13975:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13922:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13922:43:19"
																},
																"nativeSrc": "13922:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13922:72:19"
															},
															"nativeSrc": "13922:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13922:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13559:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13669:9:19",
														"nodeType": "YulTypedName",
														"src": "13669:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13681:6:19",
														"nodeType": "YulTypedName",
														"src": "13681:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13689:6:19",
														"nodeType": "YulTypedName",
														"src": "13689:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13697:6:19",
														"nodeType": "YulTypedName",
														"src": "13697:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13708:4:19",
														"nodeType": "YulTypedName",
														"src": "13708:4:19",
														"type": ""
													}
												],
												"src": "13559:442:19"
											},
											{
												"body": {
													"nativeSrc": "14113:71:19",
													"nodeType": "YulBlock",
													"src": "14113:71:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14135:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14135:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14143:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14143:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14131:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14131:3:19"
																		},
																		"nativeSrc": "14131:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14131:14:19"
																	},
																	{
																		"hexValue": "45737465204e4654206e6f20657374612061206c612076656e7461",
																		"kind": "string",
																		"nativeSrc": "14147:29:19",
																		"nodeType": "YulLiteral",
																		"src": "14147:29:19",
																		"type": "",
																		"value": "Este NFT no esta a la venta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14124:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14124:6:19"
																},
																"nativeSrc": "14124:53:19",
																"nodeType": "YulFunctionCall",
																"src": "14124:53:19"
															},
															"nativeSrc": "14124:53:19",
															"nodeType": "YulExpressionStatement",
															"src": "14124:53:19"
														}
													]
												},
												"name": "store_literal_in_memory_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140",
												"nativeSrc": "14007:177:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14105:6:19",
														"nodeType": "YulTypedName",
														"src": "14105:6:19",
														"type": ""
													}
												],
												"src": "14007:177:19"
											},
											{
												"body": {
													"nativeSrc": "14336:220:19",
													"nodeType": "YulBlock",
													"src": "14336:220:19",
													"statements": [
														{
															"nativeSrc": "14346:74:19",
															"nodeType": "YulAssignment",
															"src": "14346:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14412:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14412:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14417:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14417:2:19",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14353:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "14353:58:19"
																},
																"nativeSrc": "14353:67:19",
																"nodeType": "YulFunctionCall",
																"src": "14353:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14346:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14346:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14518:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14518:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140",
																	"nativeSrc": "14429:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "14429:88:19"
																},
																"nativeSrc": "14429:93:19",
																"nodeType": "YulFunctionCall",
																"src": "14429:93:19"
															},
															"nativeSrc": "14429:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "14429:93:19"
														},
														{
															"nativeSrc": "14531:19:19",
															"nodeType": "YulAssignment",
															"src": "14531:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14542:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14542:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14547:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14547:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14538:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14538:3:19"
																},
																"nativeSrc": "14538:12:19",
																"nodeType": "YulFunctionCall",
																"src": "14538:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14531:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14531:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14190:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14324:3:19",
														"nodeType": "YulTypedName",
														"src": "14324:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14332:3:19",
														"nodeType": "YulTypedName",
														"src": "14332:3:19",
														"type": ""
													}
												],
												"src": "14190:366:19"
											},
											{
												"body": {
													"nativeSrc": "14733:248:19",
													"nodeType": "YulBlock",
													"src": "14733:248:19",
													"statements": [
														{
															"nativeSrc": "14743:26:19",
															"nodeType": "YulAssignment",
															"src": "14743:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14755:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14755:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14766:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14766:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14751:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14751:3:19"
																},
																"nativeSrc": "14751:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14751:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14743:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14743:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14790:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14790:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14801:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14801:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14786:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14786:3:19"
																		},
																		"nativeSrc": "14786:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14786:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14809:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "14809:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14815:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14815:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14805:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14805:3:19"
																		},
																		"nativeSrc": "14805:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14805:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14779:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14779:6:19"
																},
																"nativeSrc": "14779:47:19",
																"nodeType": "YulFunctionCall",
																"src": "14779:47:19"
															},
															"nativeSrc": "14779:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "14779:47:19"
														},
														{
															"nativeSrc": "14835:139:19",
															"nodeType": "YulAssignment",
															"src": "14835:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14969:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14969:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14843:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "14843:124:19"
																},
																"nativeSrc": "14843:131:19",
																"nodeType": "YulFunctionCall",
																"src": "14843:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14835:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14835:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14562:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14713:9:19",
														"nodeType": "YulTypedName",
														"src": "14713:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14728:4:19",
														"nodeType": "YulTypedName",
														"src": "14728:4:19",
														"type": ""
													}
												],
												"src": "14562:419:19"
											},
											{
												"body": {
													"nativeSrc": "15141:288:19",
													"nodeType": "YulBlock",
													"src": "15141:288:19",
													"statements": [
														{
															"nativeSrc": "15151:26:19",
															"nodeType": "YulAssignment",
															"src": "15151:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15163:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15163:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15174:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15174:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15159:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15159:3:19"
																},
																"nativeSrc": "15159:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15159:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15151:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15151:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15231:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15231:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15244:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15244:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15255:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15255:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15240:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15240:3:19"
																		},
																		"nativeSrc": "15240:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15240:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15187:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15187:43:19"
																},
																"nativeSrc": "15187:71:19",
																"nodeType": "YulFunctionCall",
																"src": "15187:71:19"
															},
															"nativeSrc": "15187:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "15187:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15312:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15312:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15325:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15325:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15336:2:19",
																				"nodeType": "YulLiteral",
																				"src": "15336:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15321:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15321:3:19"
																		},
																		"nativeSrc": "15321:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15321:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15268:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15268:43:19"
																},
																"nativeSrc": "15268:72:19",
																"nodeType": "YulFunctionCall",
																"src": "15268:72:19"
															},
															"nativeSrc": "15268:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "15268:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15394:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15394:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15407:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15407:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15418:2:19",
																				"nodeType": "YulLiteral",
																				"src": "15418:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15403:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15403:3:19"
																		},
																		"nativeSrc": "15403:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15403:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15350:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15350:43:19"
																},
																"nativeSrc": "15350:72:19",
																"nodeType": "YulFunctionCall",
																"src": "15350:72:19"
															},
															"nativeSrc": "15350:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "15350:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14987:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15097:9:19",
														"nodeType": "YulTypedName",
														"src": "15097:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15109:6:19",
														"nodeType": "YulTypedName",
														"src": "15109:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15117:6:19",
														"nodeType": "YulTypedName",
														"src": "15117:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15125:6:19",
														"nodeType": "YulTypedName",
														"src": "15125:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15136:4:19",
														"nodeType": "YulTypedName",
														"src": "15136:4:19",
														"type": ""
													}
												],
												"src": "14987:442:19"
											},
											{
												"body": {
													"nativeSrc": "15495:77:19",
													"nodeType": "YulBlock",
													"src": "15495:77:19",
													"statements": [
														{
															"nativeSrc": "15505:22:19",
															"nodeType": "YulAssignment",
															"src": "15505:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15520:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15520:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15514:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15514:5:19"
																},
																"nativeSrc": "15514:13:19",
																"nodeType": "YulFunctionCall",
																"src": "15514:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15505:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15505:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15560:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15560:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15536:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "15536:23:19"
																},
																"nativeSrc": "15536:30:19",
																"nodeType": "YulFunctionCall",
																"src": "15536:30:19"
															},
															"nativeSrc": "15536:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "15536:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "15435:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15473:6:19",
														"nodeType": "YulTypedName",
														"src": "15473:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15481:3:19",
														"nodeType": "YulTypedName",
														"src": "15481:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15489:5:19",
														"nodeType": "YulTypedName",
														"src": "15489:5:19",
														"type": ""
													}
												],
												"src": "15435:137:19"
											},
											{
												"body": {
													"nativeSrc": "15652:271:19",
													"nodeType": "YulBlock",
													"src": "15652:271:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "15698:83:19",
																"nodeType": "YulBlock",
																"src": "15698:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15700:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "15700:77:19"
																			},
																			"nativeSrc": "15700:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15700:79:19"
																		},
																		"nativeSrc": "15700:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15700:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15673:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "15673:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15682:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15682:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15669:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15669:3:19"
																		},
																		"nativeSrc": "15669:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15669:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15694:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15694:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15665:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15665:3:19"
																},
																"nativeSrc": "15665:32:19",
																"nodeType": "YulFunctionCall",
																"src": "15665:32:19"
															},
															"nativeSrc": "15662:119:19",
															"nodeType": "YulIf",
															"src": "15662:119:19"
														},
														{
															"nativeSrc": "15791:125:19",
															"nodeType": "YulBlock",
															"src": "15791:125:19",
															"statements": [
																{
																	"nativeSrc": "15806:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15806:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15820:1:19",
																		"nodeType": "YulLiteral",
																		"src": "15820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15810:6:19",
																			"nodeType": "YulTypedName",
																			"src": "15810:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15835:71:19",
																	"nodeType": "YulAssignment",
																	"src": "15835:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15878:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "15878:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15889:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "15889:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15874:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "15874:3:19"
																				},
																				"nativeSrc": "15874:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "15874:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15898:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "15898:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15845:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "15845:28:19"
																		},
																		"nativeSrc": "15845:61:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15845:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15835:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "15835:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15578:345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15622:9:19",
														"nodeType": "YulTypedName",
														"src": "15622:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15633:7:19",
														"nodeType": "YulTypedName",
														"src": "15633:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15645:6:19",
														"nodeType": "YulTypedName",
														"src": "15645:6:19",
														"type": ""
													}
												],
												"src": "15578:345:19"
											},
											{
												"body": {
													"nativeSrc": "16035:56:19",
													"nodeType": "YulBlock",
													"src": "16035:56:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16057:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16057:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16065:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16065:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16053:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16053:3:19"
																		},
																		"nativeSrc": "16053:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16053:14:19"
																	},
																	{
																		"hexValue": "5061676f2066616c6c69646f",
																		"kind": "string",
																		"nativeSrc": "16069:14:19",
																		"nodeType": "YulLiteral",
																		"src": "16069:14:19",
																		"type": "",
																		"value": "Pago fallido"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16046:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16046:6:19"
																},
																"nativeSrc": "16046:38:19",
																"nodeType": "YulFunctionCall",
																"src": "16046:38:19"
															},
															"nativeSrc": "16046:38:19",
															"nodeType": "YulExpressionStatement",
															"src": "16046:38:19"
														}
													]
												},
												"name": "store_literal_in_memory_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3",
												"nativeSrc": "15929:162:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16027:6:19",
														"nodeType": "YulTypedName",
														"src": "16027:6:19",
														"type": ""
													}
												],
												"src": "15929:162:19"
											},
											{
												"body": {
													"nativeSrc": "16243:220:19",
													"nodeType": "YulBlock",
													"src": "16243:220:19",
													"statements": [
														{
															"nativeSrc": "16253:74:19",
															"nodeType": "YulAssignment",
															"src": "16253:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16319:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16319:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16324:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16324:2:19",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16260:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "16260:58:19"
																},
																"nativeSrc": "16260:67:19",
																"nodeType": "YulFunctionCall",
																"src": "16260:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16253:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16253:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16425:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16425:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3",
																	"nativeSrc": "16336:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "16336:88:19"
																},
																"nativeSrc": "16336:93:19",
																"nodeType": "YulFunctionCall",
																"src": "16336:93:19"
															},
															"nativeSrc": "16336:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "16336:93:19"
														},
														{
															"nativeSrc": "16438:19:19",
															"nodeType": "YulAssignment",
															"src": "16438:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16449:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16449:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16454:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16454:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16445:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16445:3:19"
																},
																"nativeSrc": "16445:12:19",
																"nodeType": "YulFunctionCall",
																"src": "16445:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16438:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16438:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16097:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16231:3:19",
														"nodeType": "YulTypedName",
														"src": "16231:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16239:3:19",
														"nodeType": "YulTypedName",
														"src": "16239:3:19",
														"type": ""
													}
												],
												"src": "16097:366:19"
											},
											{
												"body": {
													"nativeSrc": "16640:248:19",
													"nodeType": "YulBlock",
													"src": "16640:248:19",
													"statements": [
														{
															"nativeSrc": "16650:26:19",
															"nodeType": "YulAssignment",
															"src": "16650:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16662:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16662:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16673:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16673:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16658:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16658:3:19"
																},
																"nativeSrc": "16658:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16658:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16650:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16650:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16697:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16697:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16708:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16708:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16693:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16693:3:19"
																		},
																		"nativeSrc": "16693:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16693:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16716:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16716:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16722:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16722:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16712:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16712:3:19"
																		},
																		"nativeSrc": "16712:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16712:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16686:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16686:6:19"
																},
																"nativeSrc": "16686:47:19",
																"nodeType": "YulFunctionCall",
																"src": "16686:47:19"
															},
															"nativeSrc": "16686:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "16686:47:19"
														},
														{
															"nativeSrc": "16742:139:19",
															"nodeType": "YulAssignment",
															"src": "16742:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16876:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16876:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16750:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "16750:124:19"
																},
																"nativeSrc": "16750:131:19",
																"nodeType": "YulFunctionCall",
																"src": "16750:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16742:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16742:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16469:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16620:9:19",
														"nodeType": "YulTypedName",
														"src": "16620:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16635:4:19",
														"nodeType": "YulTypedName",
														"src": "16635:4:19",
														"type": ""
													}
												],
												"src": "16469:419:19"
											},
											{
												"body": {
													"nativeSrc": "17020:206:19",
													"nodeType": "YulBlock",
													"src": "17020:206:19",
													"statements": [
														{
															"nativeSrc": "17030:26:19",
															"nodeType": "YulAssignment",
															"src": "17030:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17042:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "17042:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17053:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17053:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17038:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17038:3:19"
																},
																"nativeSrc": "17038:18:19",
																"nodeType": "YulFunctionCall",
																"src": "17038:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17030:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17030:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17110:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17110:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17123:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17123:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17134:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17134:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17119:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17119:3:19"
																		},
																		"nativeSrc": "17119:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17119:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17066:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "17066:43:19"
																},
																"nativeSrc": "17066:71:19",
																"nodeType": "YulFunctionCall",
																"src": "17066:71:19"
															},
															"nativeSrc": "17066:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "17066:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17191:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17191:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17204:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17204:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17215:2:19",
																				"nodeType": "YulLiteral",
																				"src": "17215:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17200:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17200:3:19"
																		},
																		"nativeSrc": "17200:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17200:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17147:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "17147:43:19"
																},
																"nativeSrc": "17147:72:19",
																"nodeType": "YulFunctionCall",
																"src": "17147:72:19"
															},
															"nativeSrc": "17147:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "17147:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16894:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16984:9:19",
														"nodeType": "YulTypedName",
														"src": "16984:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16996:6:19",
														"nodeType": "YulTypedName",
														"src": "16996:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17004:6:19",
														"nodeType": "YulTypedName",
														"src": "17004:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17015:4:19",
														"nodeType": "YulTypedName",
														"src": "17015:4:19",
														"type": ""
													}
												],
												"src": "16894:332:19"
											},
											{
												"body": {
													"nativeSrc": "17338:134:19",
													"nodeType": "YulBlock",
													"src": "17338:134:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17360:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17360:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17368:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17368:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17356:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17356:3:19"
																		},
																		"nativeSrc": "17356:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17356:14:19"
																	},
																	{
																		"hexValue": "536f6c6f20656c2070726f706965746172696f207075656465206c6973746172",
																		"kind": "string",
																		"nativeSrc": "17372:34:19",
																		"nodeType": "YulLiteral",
																		"src": "17372:34:19",
																		"type": "",
																		"value": "Solo el propietario puede listar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17349:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17349:6:19"
																},
																"nativeSrc": "17349:58:19",
																"nodeType": "YulFunctionCall",
																"src": "17349:58:19"
															},
															"nativeSrc": "17349:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "17349:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17428:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17428:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17436:2:19",
																				"nodeType": "YulLiteral",
																				"src": "17436:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17424:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17424:3:19"
																		},
																		"nativeSrc": "17424:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17424:15:19"
																	},
																	{
																		"hexValue": "20656c204e46542070617261206c612076656e7461",
																		"kind": "string",
																		"nativeSrc": "17441:23:19",
																		"nodeType": "YulLiteral",
																		"src": "17441:23:19",
																		"type": "",
																		"value": " el NFT para la venta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17417:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17417:6:19"
																},
																"nativeSrc": "17417:48:19",
																"nodeType": "YulFunctionCall",
																"src": "17417:48:19"
															},
															"nativeSrc": "17417:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "17417:48:19"
														}
													]
												},
												"name": "store_literal_in_memory_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032",
												"nativeSrc": "17232:240:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17330:6:19",
														"nodeType": "YulTypedName",
														"src": "17330:6:19",
														"type": ""
													}
												],
												"src": "17232:240:19"
											},
											{
												"body": {
													"nativeSrc": "17624:220:19",
													"nodeType": "YulBlock",
													"src": "17624:220:19",
													"statements": [
														{
															"nativeSrc": "17634:74:19",
															"nodeType": "YulAssignment",
															"src": "17634:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17700:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17700:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17705:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17705:2:19",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17641:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "17641:58:19"
																},
																"nativeSrc": "17641:67:19",
																"nodeType": "YulFunctionCall",
																"src": "17641:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17634:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17634:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17806:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17806:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032",
																	"nativeSrc": "17717:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "17717:88:19"
																},
																"nativeSrc": "17717:93:19",
																"nodeType": "YulFunctionCall",
																"src": "17717:93:19"
															},
															"nativeSrc": "17717:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "17717:93:19"
														},
														{
															"nativeSrc": "17819:19:19",
															"nodeType": "YulAssignment",
															"src": "17819:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17830:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17830:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17835:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17835:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17826:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17826:3:19"
																},
																"nativeSrc": "17826:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17826:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17819:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17819:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17478:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17612:3:19",
														"nodeType": "YulTypedName",
														"src": "17612:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17620:3:19",
														"nodeType": "YulTypedName",
														"src": "17620:3:19",
														"type": ""
													}
												],
												"src": "17478:366:19"
											},
											{
												"body": {
													"nativeSrc": "18021:248:19",
													"nodeType": "YulBlock",
													"src": "18021:248:19",
													"statements": [
														{
															"nativeSrc": "18031:26:19",
															"nodeType": "YulAssignment",
															"src": "18031:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18043:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18043:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18054:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18054:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18039:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18039:3:19"
																},
																"nativeSrc": "18039:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18039:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18031:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18031:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18078:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18078:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18089:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18089:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18074:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18074:3:19"
																		},
																		"nativeSrc": "18074:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18074:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18097:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "18097:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18103:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18103:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18093:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18093:3:19"
																		},
																		"nativeSrc": "18093:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18093:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18067:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18067:6:19"
																},
																"nativeSrc": "18067:47:19",
																"nodeType": "YulFunctionCall",
																"src": "18067:47:19"
															},
															"nativeSrc": "18067:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "18067:47:19"
														},
														{
															"nativeSrc": "18123:139:19",
															"nodeType": "YulAssignment",
															"src": "18123:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18257:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "18257:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18131:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "18131:124:19"
																},
																"nativeSrc": "18131:131:19",
																"nodeType": "YulFunctionCall",
																"src": "18131:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18123:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18123:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17850:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18001:9:19",
														"nodeType": "YulTypedName",
														"src": "18001:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18016:4:19",
														"nodeType": "YulTypedName",
														"src": "18016:4:19",
														"type": ""
													}
												],
												"src": "17850:419:19"
											},
											{
												"body": {
													"nativeSrc": "18381:74:19",
													"nodeType": "YulBlock",
													"src": "18381:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18403:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "18403:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18411:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18411:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18399:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18399:3:19"
																		},
																		"nativeSrc": "18399:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18399:14:19"
																	},
																	{
																		"hexValue": "456c2070726563696f206465626520736572206d61796f72207175652030",
																		"kind": "string",
																		"nativeSrc": "18415:32:19",
																		"nodeType": "YulLiteral",
																		"src": "18415:32:19",
																		"type": "",
																		"value": "El precio debe ser mayor que 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18392:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18392:6:19"
																},
																"nativeSrc": "18392:56:19",
																"nodeType": "YulFunctionCall",
																"src": "18392:56:19"
															},
															"nativeSrc": "18392:56:19",
															"nodeType": "YulExpressionStatement",
															"src": "18392:56:19"
														}
													]
												},
												"name": "store_literal_in_memory_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c",
												"nativeSrc": "18275:180:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18373:6:19",
														"nodeType": "YulTypedName",
														"src": "18373:6:19",
														"type": ""
													}
												],
												"src": "18275:180:19"
											},
											{
												"body": {
													"nativeSrc": "18607:220:19",
													"nodeType": "YulBlock",
													"src": "18607:220:19",
													"statements": [
														{
															"nativeSrc": "18617:74:19",
															"nodeType": "YulAssignment",
															"src": "18617:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18683:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18683:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18688:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18688:2:19",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18624:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "18624:58:19"
																},
																"nativeSrc": "18624:67:19",
																"nodeType": "YulFunctionCall",
																"src": "18624:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18617:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18617:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18789:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18789:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c",
																	"nativeSrc": "18700:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "18700:88:19"
																},
																"nativeSrc": "18700:93:19",
																"nodeType": "YulFunctionCall",
																"src": "18700:93:19"
															},
															"nativeSrc": "18700:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "18700:93:19"
														},
														{
															"nativeSrc": "18802:19:19",
															"nodeType": "YulAssignment",
															"src": "18802:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18813:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18813:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18818:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18818:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18809:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18809:3:19"
																},
																"nativeSrc": "18809:12:19",
																"nodeType": "YulFunctionCall",
																"src": "18809:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18802:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18802:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18461:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18595:3:19",
														"nodeType": "YulTypedName",
														"src": "18595:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18603:3:19",
														"nodeType": "YulTypedName",
														"src": "18603:3:19",
														"type": ""
													}
												],
												"src": "18461:366:19"
											},
											{
												"body": {
													"nativeSrc": "19004:248:19",
													"nodeType": "YulBlock",
													"src": "19004:248:19",
													"statements": [
														{
															"nativeSrc": "19014:26:19",
															"nodeType": "YulAssignment",
															"src": "19014:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19026:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "19026:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19037:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19037:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19022:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19022:3:19"
																},
																"nativeSrc": "19022:18:19",
																"nodeType": "YulFunctionCall",
																"src": "19022:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19014:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19014:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19061:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19061:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19072:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19072:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19057:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19057:3:19"
																		},
																		"nativeSrc": "19057:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19057:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19080:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19080:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19086:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19086:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19076:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19076:3:19"
																		},
																		"nativeSrc": "19076:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19076:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19050:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19050:6:19"
																},
																"nativeSrc": "19050:47:19",
																"nodeType": "YulFunctionCall",
																"src": "19050:47:19"
															},
															"nativeSrc": "19050:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "19050:47:19"
														},
														{
															"nativeSrc": "19106:139:19",
															"nodeType": "YulAssignment",
															"src": "19106:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19240:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19240:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19114:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "19114:124:19"
																},
																"nativeSrc": "19114:131:19",
																"nodeType": "YulFunctionCall",
																"src": "19114:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19106:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19106:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18833:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18984:9:19",
														"nodeType": "YulTypedName",
														"src": "18984:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18999:4:19",
														"nodeType": "YulTypedName",
														"src": "18999:4:19",
														"type": ""
													}
												],
												"src": "18833:419:19"
											},
											{
												"body": {
													"nativeSrc": "19372:34:19",
													"nodeType": "YulBlock",
													"src": "19372:34:19",
													"statements": [
														{
															"nativeSrc": "19382:18:19",
															"nodeType": "YulAssignment",
															"src": "19382:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "19397:3:19",
																"nodeType": "YulIdentifier",
																"src": "19397:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19382:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "19382:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19258:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19344:3:19",
														"nodeType": "YulTypedName",
														"src": "19344:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19349:6:19",
														"nodeType": "YulTypedName",
														"src": "19349:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19360:11:19",
														"nodeType": "YulTypedName",
														"src": "19360:11:19",
														"type": ""
													}
												],
												"src": "19258:148:19"
											},
											{
												"body": {
													"nativeSrc": "19522:280:19",
													"nodeType": "YulBlock",
													"src": "19522:280:19",
													"statements": [
														{
															"nativeSrc": "19532:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "19532:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19579:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19579:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19546:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "19546:32:19"
																},
																"nativeSrc": "19546:39:19",
																"nodeType": "YulFunctionCall",
																"src": "19546:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19536:6:19",
																	"nodeType": "YulTypedName",
																	"src": "19536:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19594:96:19",
															"nodeType": "YulAssignment",
															"src": "19594:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19678:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19678:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19683:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19683:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19601:76:19",
																	"nodeType": "YulIdentifier",
																	"src": "19601:76:19"
																},
																"nativeSrc": "19601:89:19",
																"nodeType": "YulFunctionCall",
																"src": "19601:89:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19594:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19594:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19738:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "19738:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19745:4:19",
																				"nodeType": "YulLiteral",
																				"src": "19745:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19734:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19734:3:19"
																		},
																		"nativeSrc": "19734:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19734:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19752:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19752:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19757:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19757:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19699:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "19699:34:19"
																},
																"nativeSrc": "19699:65:19",
																"nodeType": "YulFunctionCall",
																"src": "19699:65:19"
															},
															"nativeSrc": "19699:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "19699:65:19"
														},
														{
															"nativeSrc": "19773:23:19",
															"nodeType": "YulAssignment",
															"src": "19773:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19784:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19784:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19789:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19789:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19780:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19780:3:19"
																},
																"nativeSrc": "19780:16:19",
																"nodeType": "YulFunctionCall",
																"src": "19780:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19773:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19773:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19412:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19503:5:19",
														"nodeType": "YulTypedName",
														"src": "19503:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19510:3:19",
														"nodeType": "YulTypedName",
														"src": "19510:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19518:3:19",
														"nodeType": "YulTypedName",
														"src": "19518:3:19",
														"type": ""
													}
												],
												"src": "19412:390:19"
											},
											{
												"body": {
													"nativeSrc": "19992:251:19",
													"nodeType": "YulBlock",
													"src": "19992:251:19",
													"statements": [
														{
															"nativeSrc": "20003:102:19",
															"nodeType": "YulAssignment",
															"src": "20003:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20092:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20092:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20101:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20101:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20010:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "20010:81:19"
																},
																"nativeSrc": "20010:95:19",
																"nodeType": "YulFunctionCall",
																"src": "20010:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20003:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20003:3:19"
																}
															]
														},
														{
															"nativeSrc": "20115:102:19",
															"nodeType": "YulAssignment",
															"src": "20115:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20204:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20204:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20213:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20213:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20122:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "20122:81:19"
																},
																"nativeSrc": "20122:95:19",
																"nodeType": "YulFunctionCall",
																"src": "20122:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20115:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20115:3:19"
																}
															]
														},
														{
															"nativeSrc": "20227:10:19",
															"nodeType": "YulAssignment",
															"src": "20227:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "20234:3:19",
																"nodeType": "YulIdentifier",
																"src": "20234:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20227:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20227:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19808:435:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19963:3:19",
														"nodeType": "YulTypedName",
														"src": "19963:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19969:6:19",
														"nodeType": "YulTypedName",
														"src": "19969:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19977:6:19",
														"nodeType": "YulTypedName",
														"src": "19977:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19988:3:19",
														"nodeType": "YulTypedName",
														"src": "19988:3:19",
														"type": ""
													}
												],
												"src": "19808:435:19"
											},
											{
												"body": {
													"nativeSrc": "20303:87:19",
													"nodeType": "YulBlock",
													"src": "20303:87:19",
													"statements": [
														{
															"nativeSrc": "20313:11:19",
															"nodeType": "YulAssignment",
															"src": "20313:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "20321:3:19",
																"nodeType": "YulIdentifier",
																"src": "20321:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20313:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20313:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20341:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20341:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "20344:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20344:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20334:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20334:6:19"
																},
																"nativeSrc": "20334:14:19",
																"nodeType": "YulFunctionCall",
																"src": "20334:14:19"
															},
															"nativeSrc": "20334:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "20334:14:19"
														},
														{
															"nativeSrc": "20357:26:19",
															"nodeType": "YulAssignment",
															"src": "20357:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20375:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20375:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20378:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20378:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "20365:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "20365:9:19"
																},
																"nativeSrc": "20365:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20365:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20357:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20357:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "20249:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "20290:3:19",
														"nodeType": "YulTypedName",
														"src": "20290:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "20298:4:19",
														"nodeType": "YulTypedName",
														"src": "20298:4:19",
														"type": ""
													}
												],
												"src": "20249:141:19"
											},
											{
												"body": {
													"nativeSrc": "20440:49:19",
													"nodeType": "YulBlock",
													"src": "20440:49:19",
													"statements": [
														{
															"nativeSrc": "20450:33:19",
															"nodeType": "YulAssignment",
															"src": "20450:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20468:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "20468:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20475:2:19",
																				"nodeType": "YulLiteral",
																				"src": "20475:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20464:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20464:3:19"
																		},
																		"nativeSrc": "20464:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20464:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20480:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20480:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20460:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20460:3:19"
																},
																"nativeSrc": "20460:23:19",
																"nodeType": "YulFunctionCall",
																"src": "20460:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20450:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20450:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "20396:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20423:5:19",
														"nodeType": "YulTypedName",
														"src": "20423:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20433:6:19",
														"nodeType": "YulTypedName",
														"src": "20433:6:19",
														"type": ""
													}
												],
												"src": "20396:93:19"
											},
											{
												"body": {
													"nativeSrc": "20548:54:19",
													"nodeType": "YulBlock",
													"src": "20548:54:19",
													"statements": [
														{
															"nativeSrc": "20558:37:19",
															"nodeType": "YulAssignment",
															"src": "20558:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20583:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "20583:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20589:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20589:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "20579:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20579:3:19"
																},
																"nativeSrc": "20579:16:19",
																"nodeType": "YulFunctionCall",
																"src": "20579:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20558:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "20558:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "20495:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20523:4:19",
														"nodeType": "YulTypedName",
														"src": "20523:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20529:5:19",
														"nodeType": "YulTypedName",
														"src": "20529:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20539:8:19",
														"nodeType": "YulTypedName",
														"src": "20539:8:19",
														"type": ""
													}
												],
												"src": "20495:107:19"
											},
											{
												"body": {
													"nativeSrc": "20684:317:19",
													"nodeType": "YulBlock",
													"src": "20684:317:19",
													"statements": [
														{
															"nativeSrc": "20694:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20694:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "20715:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "20715:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20727:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20727:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20711:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20711:3:19"
																},
																"nativeSrc": "20711:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20711:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "20698:9:19",
																	"nodeType": "YulTypedName",
																	"src": "20698:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20738:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20738:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20769:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20769:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20780:66:19",
																		"nodeType": "YulLiteral",
																		"src": "20780:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20750:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "20750:18:19"
																},
																"nativeSrc": "20750:97:19",
																"nodeType": "YulFunctionCall",
																"src": "20750:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20742:4:19",
																	"nodeType": "YulTypedName",
																	"src": "20742:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20856:51:19",
															"nodeType": "YulAssignment",
															"src": "20856:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20887:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20887:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "20898:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "20898:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20868:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "20868:18:19"
																},
																"nativeSrc": "20868:39:19",
																"nodeType": "YulFunctionCall",
																"src": "20868:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "20856:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "20856:8:19"
																}
															]
														},
														{
															"nativeSrc": "20916:30:19",
															"nodeType": "YulAssignment",
															"src": "20916:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20929:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20929:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "20940:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "20940:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "20936:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20936:3:19"
																		},
																		"nativeSrc": "20936:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20936:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20925:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20925:3:19"
																},
																"nativeSrc": "20925:21:19",
																"nodeType": "YulFunctionCall",
																"src": "20925:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20916:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "20916:5:19"
																}
															]
														},
														{
															"nativeSrc": "20955:40:19",
															"nodeType": "YulAssignment",
															"src": "20955:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20968:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20968:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "20979:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "20979:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "20989:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "20989:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20975:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20975:3:19"
																		},
																		"nativeSrc": "20975:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20975:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20965:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "20965:2:19"
																},
																"nativeSrc": "20965:30:19",
																"nodeType": "YulFunctionCall",
																"src": "20965:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20955:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20955:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "20608:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20645:5:19",
														"nodeType": "YulTypedName",
														"src": "20645:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "20652:10:19",
														"nodeType": "YulTypedName",
														"src": "20652:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "20664:8:19",
														"nodeType": "YulTypedName",
														"src": "20664:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20677:6:19",
														"nodeType": "YulTypedName",
														"src": "20677:6:19",
														"type": ""
													}
												],
												"src": "20608:393:19"
											},
											{
												"body": {
													"nativeSrc": "21039:28:19",
													"nodeType": "YulBlock",
													"src": "21039:28:19",
													"statements": [
														{
															"nativeSrc": "21049:12:19",
															"nodeType": "YulAssignment",
															"src": "21049:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "21056:5:19",
																"nodeType": "YulIdentifier",
																"src": "21056:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21049:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21049:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "21007:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21025:5:19",
														"nodeType": "YulTypedName",
														"src": "21025:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21035:3:19",
														"nodeType": "YulTypedName",
														"src": "21035:3:19",
														"type": ""
													}
												],
												"src": "21007:60:19"
											},
											{
												"body": {
													"nativeSrc": "21133:82:19",
													"nodeType": "YulBlock",
													"src": "21133:82:19",
													"statements": [
														{
															"nativeSrc": "21143:66:19",
															"nodeType": "YulAssignment",
															"src": "21143:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21201:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "21201:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "21183:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "21183:17:19"
																				},
																				"nativeSrc": "21183:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21183:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "21174:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "21174:8:19"
																		},
																		"nativeSrc": "21174:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21174:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21156:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "21156:17:19"
																},
																"nativeSrc": "21156:53:19",
																"nodeType": "YulFunctionCall",
																"src": "21156:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21143:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "21143:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "21073:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21113:5:19",
														"nodeType": "YulTypedName",
														"src": "21113:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21123:9:19",
														"nodeType": "YulTypedName",
														"src": "21123:9:19",
														"type": ""
													}
												],
												"src": "21073:142:19"
											},
											{
												"body": {
													"nativeSrc": "21268:28:19",
													"nodeType": "YulBlock",
													"src": "21268:28:19",
													"statements": [
														{
															"nativeSrc": "21278:12:19",
															"nodeType": "YulAssignment",
															"src": "21278:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "21285:5:19",
																"nodeType": "YulIdentifier",
																"src": "21285:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21278:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21278:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "21221:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21254:5:19",
														"nodeType": "YulTypedName",
														"src": "21254:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21264:3:19",
														"nodeType": "YulTypedName",
														"src": "21264:3:19",
														"type": ""
													}
												],
												"src": "21221:75:19"
											},
											{
												"body": {
													"nativeSrc": "21378:193:19",
													"nodeType": "YulBlock",
													"src": "21378:193:19",
													"statements": [
														{
															"nativeSrc": "21388:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21388:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "21443:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "21443:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "21412:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "21412:30:19"
																},
																"nativeSrc": "21412:39:19",
																"nodeType": "YulFunctionCall",
																"src": "21412:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "21392:16:19",
																	"nodeType": "YulTypedName",
																	"src": "21392:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21467:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21467:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "21507:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "21507:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "21501:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "21501:5:19"
																				},
																				"nativeSrc": "21501:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21501:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "21514:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "21514:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "21546:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "21546:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "21522:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "21522:23:19"
																				},
																				"nativeSrc": "21522:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21522:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "21473:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "21473:27:19"
																		},
																		"nativeSrc": "21473:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21473:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "21460:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21460:6:19"
																},
																"nativeSrc": "21460:105:19",
																"nodeType": "YulFunctionCall",
																"src": "21460:105:19"
															},
															"nativeSrc": "21460:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "21460:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "21302:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21355:4:19",
														"nodeType": "YulTypedName",
														"src": "21355:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21361:6:19",
														"nodeType": "YulTypedName",
														"src": "21361:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "21369:7:19",
														"nodeType": "YulTypedName",
														"src": "21369:7:19",
														"type": ""
													}
												],
												"src": "21302:269:19"
											},
											{
												"body": {
													"nativeSrc": "21626:24:19",
													"nodeType": "YulBlock",
													"src": "21626:24:19",
													"statements": [
														{
															"nativeSrc": "21636:8:19",
															"nodeType": "YulAssignment",
															"src": "21636:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "21643:1:19",
																"nodeType": "YulLiteral",
																"src": "21643:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21636:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21636:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "21577:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21622:3:19",
														"nodeType": "YulTypedName",
														"src": "21622:3:19",
														"type": ""
													}
												],
												"src": "21577:73:19"
											},
											{
												"body": {
													"nativeSrc": "21709:136:19",
													"nodeType": "YulBlock",
													"src": "21709:136:19",
													"statements": [
														{
															"nativeSrc": "21719:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21719:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "21733:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "21733:30:19"
																},
																"nativeSrc": "21733:32:19",
																"nodeType": "YulFunctionCall",
																"src": "21733:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "21723:6:19",
																	"nodeType": "YulTypedName",
																	"src": "21723:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21818:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21818:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "21824:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21824:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "21832:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21832:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "21774:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "21774:43:19"
																},
																"nativeSrc": "21774:65:19",
																"nodeType": "YulFunctionCall",
																"src": "21774:65:19"
															},
															"nativeSrc": "21774:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "21774:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "21656:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21695:4:19",
														"nodeType": "YulTypedName",
														"src": "21695:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21701:6:19",
														"nodeType": "YulTypedName",
														"src": "21701:6:19",
														"type": ""
													}
												],
												"src": "21656:189:19"
											},
											{
												"body": {
													"nativeSrc": "21901:136:19",
													"nodeType": "YulBlock",
													"src": "21901:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "21968:63:19",
																"nodeType": "YulBlock",
																"src": "21968:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22012:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "22012:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22019:1:19",
																					"nodeType": "YulLiteral",
																					"src": "22019:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "21982:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "21982:29:19"
																			},
																			"nativeSrc": "21982:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21982:39:19"
																		},
																		"nativeSrc": "21982:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "21982:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "21921:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "21921:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "21928:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21928:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "21918:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21918:2:19"
																},
																"nativeSrc": "21918:14:19",
																"nodeType": "YulFunctionCall",
																"src": "21918:14:19"
															},
															"nativeSrc": "21911:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "21933:26:19",
																"nodeType": "YulBlock",
																"src": "21933:26:19",
																"statements": [
																	{
																		"nativeSrc": "21935:22:19",
																		"nodeType": "YulAssignment",
																		"src": "21935:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21948:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "21948:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21955:1:19",
																					"nodeType": "YulLiteral",
																					"src": "21955:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21944:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "21944:3:19"
																			},
																			"nativeSrc": "21944:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21944:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "21935:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "21935:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "21915:2:19",
																"nodeType": "YulBlock",
																"src": "21915:2:19",
																"statements": []
															},
															"src": "21911:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "21851:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "21889:5:19",
														"nodeType": "YulTypedName",
														"src": "21889:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21896:3:19",
														"nodeType": "YulTypedName",
														"src": "21896:3:19",
														"type": ""
													}
												],
												"src": "21851:186:19"
											},
											{
												"body": {
													"nativeSrc": "22122:464:19",
													"nodeType": "YulBlock",
													"src": "22122:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "22148:431:19",
																"nodeType": "YulBlock",
																"src": "22148:431:19",
																"statements": [
																	{
																		"nativeSrc": "22162:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22162:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "22210:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "22210:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "22178:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "22178:31:19"
																			},
																			"nativeSrc": "22178:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22178:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "22166:8:19",
																				"nodeType": "YulTypedName",
																				"src": "22166:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "22229:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22229:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "22252:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "22252:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "22280:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "22280:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "22262:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "22262:17:19"
																					},
																					"nativeSrc": "22262:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22262:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22248:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "22248:3:19"
																			},
																			"nativeSrc": "22248:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22248:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "22233:11:19",
																				"nodeType": "YulTypedName",
																				"src": "22233:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "22449:27:19",
																			"nodeType": "YulBlock",
																			"src": "22449:27:19",
																			"statements": [
																				{
																					"nativeSrc": "22451:23:19",
																					"nodeType": "YulAssignment",
																					"src": "22451:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "22466:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "22466:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "22451:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "22451:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "22433:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "22433:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22445:2:19",
																					"nodeType": "YulLiteral",
																					"src": "22445:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "22430:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "22430:2:19"
																			},
																			"nativeSrc": "22430:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22430:18:19"
																		},
																		"nativeSrc": "22427:49:19",
																		"nodeType": "YulIf",
																		"src": "22427:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "22518:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "22518:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "22535:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "22535:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "22563:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "22563:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "22545:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "22545:17:19"
																							},
																							"nativeSrc": "22545:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "22545:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "22531:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "22531:3:19"
																					},
																					"nativeSrc": "22531:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22531:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "22489:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "22489:28:19"
																			},
																			"nativeSrc": "22489:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22489:80:19"
																		},
																		"nativeSrc": "22489:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "22489:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "22139:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22139:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22144:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22144:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22136:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "22136:2:19"
																},
																"nativeSrc": "22136:11:19",
																"nodeType": "YulFunctionCall",
																"src": "22136:11:19"
															},
															"nativeSrc": "22133:446:19",
															"nodeType": "YulIf",
															"src": "22133:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "22043:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "22098:5:19",
														"nodeType": "YulTypedName",
														"src": "22098:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22105:3:19",
														"nodeType": "YulTypedName",
														"src": "22105:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "22110:10:19",
														"nodeType": "YulTypedName",
														"src": "22110:10:19",
														"type": ""
													}
												],
												"src": "22043:543:19"
											},
											{
												"body": {
													"nativeSrc": "22655:54:19",
													"nodeType": "YulBlock",
													"src": "22655:54:19",
													"statements": [
														{
															"nativeSrc": "22665:37:19",
															"nodeType": "YulAssignment",
															"src": "22665:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22690:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22690:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22696:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22696:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "22686:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22686:3:19"
																},
																"nativeSrc": "22686:16:19",
																"nodeType": "YulFunctionCall",
																"src": "22686:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22665:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "22665:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "22592:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22630:4:19",
														"nodeType": "YulTypedName",
														"src": "22630:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22636:5:19",
														"nodeType": "YulTypedName",
														"src": "22636:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22646:8:19",
														"nodeType": "YulTypedName",
														"src": "22646:8:19",
														"type": ""
													}
												],
												"src": "22592:117:19"
											},
											{
												"body": {
													"nativeSrc": "22766:118:19",
													"nodeType": "YulBlock",
													"src": "22766:118:19",
													"statements": [
														{
															"nativeSrc": "22776:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22776:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22825:1:19",
																						"nodeType": "YulLiteral",
																						"src": "22825:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "22828:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "22828:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "22821:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "22821:3:19"
																				},
																				"nativeSrc": "22821:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22821:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22840:1:19",
																						"nodeType": "YulLiteral",
																						"src": "22840:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "22836:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "22836:3:19"
																				},
																				"nativeSrc": "22836:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22836:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "22792:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "22792:28:19"
																		},
																		"nativeSrc": "22792:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22792:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "22788:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22788:3:19"
																},
																"nativeSrc": "22788:56:19",
																"nodeType": "YulFunctionCall",
																"src": "22788:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22780:4:19",
																	"nodeType": "YulTypedName",
																	"src": "22780:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22853:25:19",
															"nodeType": "YulAssignment",
															"src": "22853:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22867:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22867:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "22873:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22873:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22863:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22863:3:19"
																},
																"nativeSrc": "22863:15:19",
																"nodeType": "YulFunctionCall",
																"src": "22863:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22853:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22853:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "22715:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22743:4:19",
														"nodeType": "YulTypedName",
														"src": "22743:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "22749:5:19",
														"nodeType": "YulTypedName",
														"src": "22749:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22759:6:19",
														"nodeType": "YulTypedName",
														"src": "22759:6:19",
														"type": ""
													}
												],
												"src": "22715:169:19"
											},
											{
												"body": {
													"nativeSrc": "22970:214:19",
													"nodeType": "YulBlock",
													"src": "22970:214:19",
													"statements": [
														{
															"nativeSrc": "23103:37:19",
															"nodeType": "YulAssignment",
															"src": "23103:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23130:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23130:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "23136:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "23136:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "23111:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "23111:18:19"
																},
																"nativeSrc": "23111:29:19",
																"nodeType": "YulFunctionCall",
																"src": "23111:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23103:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "23103:4:19"
																}
															]
														},
														{
															"nativeSrc": "23149:29:19",
															"nodeType": "YulAssignment",
															"src": "23149:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23160:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23160:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23170:1:19",
																				"nodeType": "YulLiteral",
																				"src": "23170:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "23173:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "23173:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "23166:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23166:3:19"
																		},
																		"nativeSrc": "23166:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23166:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23157:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23157:2:19"
																},
																"nativeSrc": "23157:21:19",
																"nodeType": "YulFunctionCall",
																"src": "23157:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "23149:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "23149:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "22889:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22951:4:19",
														"nodeType": "YulTypedName",
														"src": "22951:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22957:3:19",
														"nodeType": "YulTypedName",
														"src": "22957:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "22965:4:19",
														"nodeType": "YulTypedName",
														"src": "22965:4:19",
														"type": ""
													}
												],
												"src": "22889:295:19"
											},
											{
												"body": {
													"nativeSrc": "23281:1303:19",
													"nodeType": "YulBlock",
													"src": "23281:1303:19",
													"statements": [
														{
															"nativeSrc": "23292:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23292:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23339:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "23339:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "23306:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "23306:32:19"
																},
																"nativeSrc": "23306:37:19",
																"nodeType": "YulFunctionCall",
																"src": "23306:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "23296:6:19",
																	"nodeType": "YulTypedName",
																	"src": "23296:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23428:22:19",
																"nodeType": "YulBlock",
																"src": "23428:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "23430:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "23430:16:19"
																			},
																			"nativeSrc": "23430:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23430:18:19"
																		},
																		"nativeSrc": "23430:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "23430:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23400:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23400:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23408:18:19",
																		"nodeType": "YulLiteral",
																		"src": "23408:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23397:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23397:2:19"
																},
																"nativeSrc": "23397:30:19",
																"nodeType": "YulFunctionCall",
																"src": "23397:30:19"
															},
															"nativeSrc": "23394:56:19",
															"nodeType": "YulIf",
															"src": "23394:56:19"
														},
														{
															"nativeSrc": "23460:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23460:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "23506:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "23506:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "23500:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "23500:5:19"
																		},
																		"nativeSrc": "23500:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23500:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23474:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "23474:25:19"
																},
																"nativeSrc": "23474:38:19",
																"nodeType": "YulFunctionCall",
																"src": "23474:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "23464:6:19",
																	"nodeType": "YulTypedName",
																	"src": "23464:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23605:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23605:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "23611:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23611:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "23619:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23619:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "23559:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "23559:45:19"
																},
																"nativeSrc": "23559:67:19",
																"nodeType": "YulFunctionCall",
																"src": "23559:67:19"
															},
															"nativeSrc": "23559:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "23559:67:19"
														},
														{
															"nativeSrc": "23636:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23636:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "23653:1:19",
																"nodeType": "YulLiteral",
																"src": "23653:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23640:9:19",
																	"nodeType": "YulTypedName",
																	"src": "23640:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23664:17:19",
															"nodeType": "YulAssignment",
															"src": "23664:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "23677:4:19",
																"nodeType": "YulLiteral",
																"src": "23677:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23664:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "23664:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "23728:611:19",
																		"nodeType": "YulBlock",
																		"src": "23728:611:19",
																		"statements": [
																			{
																				"nativeSrc": "23742:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23742:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "23761:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "23761:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "23773:4:19",
																									"nodeType": "YulLiteral",
																									"src": "23773:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "23769:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "23769:3:19"
																							},
																							"nativeSrc": "23769:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "23769:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "23757:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "23757:3:19"
																					},
																					"nativeSrc": "23757:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23757:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "23746:7:19",
																						"nodeType": "YulTypedName",
																						"src": "23746:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23793:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23793:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23839:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "23839:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23807:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "23807:31:19"
																					},
																					"nativeSrc": "23807:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23807:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "23797:6:19",
																						"nodeType": "YulTypedName",
																						"src": "23797:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23857:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23857:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23866:1:19",
																					"nodeType": "YulLiteral",
																					"src": "23866:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "23861:1:19",
																						"nodeType": "YulTypedName",
																						"src": "23861:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23925:163:19",
																					"nodeType": "YulBlock",
																					"src": "23925:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23950:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "23950:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "23968:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "23968:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "23973:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "23973:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "23964:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "23964:3:19"
																												},
																												"nativeSrc": "23964:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "23964:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "23958:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "23958:5:19"
																										},
																										"nativeSrc": "23958:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "23958:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23943:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "23943:6:19"
																								},
																								"nativeSrc": "23943:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23943:42:19"
																							},
																							"nativeSrc": "23943:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "23943:42:19"
																						},
																						{
																							"nativeSrc": "24002:24:19",
																							"nodeType": "YulAssignment",
																							"src": "24002:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24016:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "24016:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24024:1:19",
																										"nodeType": "YulLiteral",
																										"src": "24024:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24012:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24012:3:19"
																								},
																								"nativeSrc": "24012:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24012:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24002:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "24002:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24043:31:19",
																							"nodeType": "YulAssignment",
																							"src": "24043:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24060:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "24060:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24071:2:19",
																										"nodeType": "YulLiteral",
																										"src": "24071:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24056:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24056:3:19"
																								},
																								"nativeSrc": "24056:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24056:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24043:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "24043:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "23891:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "23891:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23894:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "23894:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23888:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "23888:2:19"
																					},
																					"nativeSrc": "23888:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23888:14:19"
																				},
																				"nativeSrc": "23880:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "23903:21:19",
																					"nodeType": "YulBlock",
																					"src": "23903:21:19",
																					"statements": [
																						{
																							"nativeSrc": "23905:17:19",
																							"nodeType": "YulAssignment",
																							"src": "23905:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "23914:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "23914:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23917:4:19",
																										"nodeType": "YulLiteral",
																										"src": "23917:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23910:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "23910:3:19"
																								},
																								"nativeSrc": "23910:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "23910:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "23905:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "23905:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "23884:3:19",
																					"nodeType": "YulBlock",
																					"src": "23884:3:19",
																					"statements": []
																				},
																				"src": "23880:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "24124:156:19",
																					"nodeType": "YulBlock",
																					"src": "24124:156:19",
																					"statements": [
																						{
																							"nativeSrc": "24142:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "24142:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24169:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "24169:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24174:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "24174:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24165:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "24165:3:19"
																										},
																										"nativeSrc": "24165:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "24165:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24159:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24159:5:19"
																								},
																								"nativeSrc": "24159:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24159:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "24146:9:19",
																									"nodeType": "YulTypedName",
																									"src": "24146:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24209:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "24209:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "24236:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "24236:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "24251:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "24251:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "24259:4:19",
																														"nodeType": "YulLiteral",
																														"src": "24259:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "24247:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "24247:3:19"
																												},
																												"nativeSrc": "24247:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "24247:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "24217:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "24217:18:19"
																										},
																										"nativeSrc": "24217:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "24217:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24202:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "24202:6:19"
																								},
																								"nativeSrc": "24202:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24202:64:19"
																							},
																							"nativeSrc": "24202:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "24202:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24107:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "24107:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24116:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "24116:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24104:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "24104:2:19"
																					},
																					"nativeSrc": "24104:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24104:19:19"
																				},
																				"nativeSrc": "24101:179:19",
																				"nodeType": "YulIf",
																				"src": "24101:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24300:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "24300:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "24314:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "24314:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24322:1:19",
																											"nodeType": "YulLiteral",
																											"src": "24322:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "24310:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "24310:3:19"
																									},
																									"nativeSrc": "24310:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "24310:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24326:1:19",
																									"nodeType": "YulLiteral",
																									"src": "24326:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24306:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "24306:3:19"
																							},
																							"nativeSrc": "24306:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "24306:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24293:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "24293:6:19"
																					},
																					"nativeSrc": "24293:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24293:36:19"
																				},
																				"nativeSrc": "24293:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "24293:36:19"
																			}
																		]
																	},
																	"nativeSrc": "23721:618:19",
																	"nodeType": "YulCase",
																	"src": "23721:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23726:1:19",
																		"nodeType": "YulLiteral",
																		"src": "23726:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24356:222:19",
																		"nodeType": "YulBlock",
																		"src": "24356:222:19",
																		"statements": [
																			{
																				"nativeSrc": "24370:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24370:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24383:1:19",
																					"nodeType": "YulLiteral",
																					"src": "24383:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "24374:5:19",
																						"nodeType": "YulTypedName",
																						"src": "24374:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24407:67:19",
																					"nodeType": "YulBlock",
																					"src": "24407:67:19",
																					"statements": [
																						{
																							"nativeSrc": "24425:35:19",
																							"nodeType": "YulAssignment",
																							"src": "24425:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24444:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "24444:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24449:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "24449:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24440:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "24440:3:19"
																										},
																										"nativeSrc": "24440:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "24440:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24434:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24434:5:19"
																								},
																								"nativeSrc": "24434:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24434:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24425:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24425:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "24400:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "24400:6:19"
																				},
																				"nativeSrc": "24397:77:19",
																				"nodeType": "YulIf",
																				"src": "24397:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24494:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "24494:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "24553:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "24553:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "24560:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "24560:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "24500:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "24500:52:19"
																							},
																							"nativeSrc": "24500:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "24500:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24487:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "24487:6:19"
																					},
																					"nativeSrc": "24487:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24487:81:19"
																				},
																				"nativeSrc": "24487:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "24487:81:19"
																			}
																		]
																	},
																	"nativeSrc": "24348:230:19",
																	"nodeType": "YulCase",
																	"src": "24348:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23701:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23701:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23709:2:19",
																		"nodeType": "YulLiteral",
																		"src": "23709:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23698:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23698:2:19"
																},
																"nativeSrc": "23698:14:19",
																"nodeType": "YulFunctionCall",
																"src": "23698:14:19"
															},
															"nativeSrc": "23691:887:19",
															"nodeType": "YulSwitch",
															"src": "23691:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "23189:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23270:4:19",
														"nodeType": "YulTypedName",
														"src": "23270:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "23276:3:19",
														"nodeType": "YulTypedName",
														"src": "23276:3:19",
														"type": ""
													}
												],
												"src": "23189:1395:19"
											},
											{
												"body": {
													"nativeSrc": "24648:40:19",
													"nodeType": "YulBlock",
													"src": "24648:40:19",
													"statements": [
														{
															"nativeSrc": "24659:22:19",
															"nodeType": "YulAssignment",
															"src": "24659:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24675:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "24675:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24669:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "24669:5:19"
																},
																"nativeSrc": "24669:12:19",
																"nodeType": "YulFunctionCall",
																"src": "24669:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "24659:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24659:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24590:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24631:5:19",
														"nodeType": "YulTypedName",
														"src": "24631:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24641:6:19",
														"nodeType": "YulTypedName",
														"src": "24641:6:19",
														"type": ""
													}
												],
												"src": "24590:98:19"
											},
											{
												"body": {
													"nativeSrc": "24789:73:19",
													"nodeType": "YulBlock",
													"src": "24789:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24806:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24806:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24811:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24811:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24799:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24799:6:19"
																},
																"nativeSrc": "24799:19:19",
																"nodeType": "YulFunctionCall",
																"src": "24799:19:19"
															},
															"nativeSrc": "24799:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "24799:19:19"
														},
														{
															"nativeSrc": "24827:29:19",
															"nodeType": "YulAssignment",
															"src": "24827:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24846:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24846:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24851:4:19",
																		"nodeType": "YulLiteral",
																		"src": "24851:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24842:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24842:3:19"
																},
																"nativeSrc": "24842:14:19",
																"nodeType": "YulFunctionCall",
																"src": "24842:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24827:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "24827:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24694:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24761:3:19",
														"nodeType": "YulTypedName",
														"src": "24761:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24766:6:19",
														"nodeType": "YulTypedName",
														"src": "24766:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24777:11:19",
														"nodeType": "YulTypedName",
														"src": "24777:11:19",
														"type": ""
													}
												],
												"src": "24694:168:19"
											},
											{
												"body": {
													"nativeSrc": "24958:283:19",
													"nodeType": "YulBlock",
													"src": "24958:283:19",
													"statements": [
														{
															"nativeSrc": "24968:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24968:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25014:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "25014:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24982:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "24982:31:19"
																},
																"nativeSrc": "24982:38:19",
																"nodeType": "YulFunctionCall",
																"src": "24982:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24972:6:19",
																	"nodeType": "YulTypedName",
																	"src": "24972:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25029:77:19",
															"nodeType": "YulAssignment",
															"src": "25029:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25094:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "25094:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25099:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25099:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25036:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "25036:57:19"
																},
																"nativeSrc": "25036:70:19",
																"nodeType": "YulFunctionCall",
																"src": "25036:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25029:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25029:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25154:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "25154:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25161:4:19",
																				"nodeType": "YulLiteral",
																				"src": "25161:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25150:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25150:3:19"
																		},
																		"nativeSrc": "25150:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25150:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25168:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "25168:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25173:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25173:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25115:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "25115:34:19"
																},
																"nativeSrc": "25115:65:19",
																"nodeType": "YulFunctionCall",
																"src": "25115:65:19"
															},
															"nativeSrc": "25115:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "25115:65:19"
														},
														{
															"nativeSrc": "25189:46:19",
															"nodeType": "YulAssignment",
															"src": "25189:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25200:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "25200:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "25227:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "25227:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "25205:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "25205:21:19"
																		},
																		"nativeSrc": "25205:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25205:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25196:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25196:3:19"
																},
																"nativeSrc": "25196:39:19",
																"nodeType": "YulFunctionCall",
																"src": "25196:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25189:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25189:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24868:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24939:5:19",
														"nodeType": "YulTypedName",
														"src": "24939:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24946:3:19",
														"nodeType": "YulTypedName",
														"src": "24946:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24954:3:19",
														"nodeType": "YulTypedName",
														"src": "24954:3:19",
														"type": ""
													}
												],
												"src": "24868:373:19"
											},
											{
												"body": {
													"nativeSrc": "25447:440:19",
													"nodeType": "YulBlock",
													"src": "25447:440:19",
													"statements": [
														{
															"nativeSrc": "25457:27:19",
															"nodeType": "YulAssignment",
															"src": "25457:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25469:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "25469:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25480:3:19",
																		"nodeType": "YulLiteral",
																		"src": "25480:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25465:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25465:3:19"
																},
																"nativeSrc": "25465:19:19",
																"nodeType": "YulFunctionCall",
																"src": "25465:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25457:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25457:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25538:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25538:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25551:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25551:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25562:1:19",
																				"nodeType": "YulLiteral",
																				"src": "25562:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25547:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25547:3:19"
																		},
																		"nativeSrc": "25547:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25547:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25494:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25494:43:19"
																},
																"nativeSrc": "25494:71:19",
																"nodeType": "YulFunctionCall",
																"src": "25494:71:19"
															},
															"nativeSrc": "25494:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "25494:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25619:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25619:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25632:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25632:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25643:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25643:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25628:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25628:3:19"
																		},
																		"nativeSrc": "25628:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25628:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25575:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25575:43:19"
																},
																"nativeSrc": "25575:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25575:72:19"
															},
															"nativeSrc": "25575:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25575:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25701:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25701:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25714:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25714:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25725:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25725:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25710:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25710:3:19"
																		},
																		"nativeSrc": "25710:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25710:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25657:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25657:43:19"
																},
																"nativeSrc": "25657:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25657:72:19"
															},
															"nativeSrc": "25657:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25657:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25750:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25750:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25761:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25761:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25746:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25746:3:19"
																		},
																		"nativeSrc": "25746:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25746:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25770:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "25770:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25776:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25776:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25766:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25766:3:19"
																		},
																		"nativeSrc": "25766:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25766:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25739:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "25739:6:19"
																},
																"nativeSrc": "25739:48:19",
																"nodeType": "YulFunctionCall",
																"src": "25739:48:19"
															},
															"nativeSrc": "25739:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "25739:48:19"
														},
														{
															"nativeSrc": "25796:84:19",
															"nodeType": "YulAssignment",
															"src": "25796:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25866:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25866:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25875:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "25875:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25804:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "25804:61:19"
																},
																"nativeSrc": "25804:76:19",
																"nodeType": "YulFunctionCall",
																"src": "25804:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25796:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25796:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25247:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25395:9:19",
														"nodeType": "YulTypedName",
														"src": "25395:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25407:6:19",
														"nodeType": "YulTypedName",
														"src": "25407:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25415:6:19",
														"nodeType": "YulTypedName",
														"src": "25415:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25423:6:19",
														"nodeType": "YulTypedName",
														"src": "25423:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25431:6:19",
														"nodeType": "YulTypedName",
														"src": "25431:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25442:4:19",
														"nodeType": "YulTypedName",
														"src": "25442:4:19",
														"type": ""
													}
												],
												"src": "25247:640:19"
											},
											{
												"body": {
													"nativeSrc": "25955:79:19",
													"nodeType": "YulBlock",
													"src": "25955:79:19",
													"statements": [
														{
															"nativeSrc": "25965:22:19",
															"nodeType": "YulAssignment",
															"src": "25965:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "25980:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25980:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25974:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "25974:5:19"
																},
																"nativeSrc": "25974:13:19",
																"nodeType": "YulFunctionCall",
																"src": "25974:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25965:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "25965:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26022:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "26022:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "25996:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "25996:25:19"
																},
																"nativeSrc": "25996:32:19",
																"nodeType": "YulFunctionCall",
																"src": "25996:32:19"
															},
															"nativeSrc": "25996:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "25996:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "25893:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "25933:6:19",
														"nodeType": "YulTypedName",
														"src": "25933:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25941:3:19",
														"nodeType": "YulTypedName",
														"src": "25941:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "25949:5:19",
														"nodeType": "YulTypedName",
														"src": "25949:5:19",
														"type": ""
													}
												],
												"src": "25893:141:19"
											},
											{
												"body": {
													"nativeSrc": "26116:273:19",
													"nodeType": "YulBlock",
													"src": "26116:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "26162:83:19",
																"nodeType": "YulBlock",
																"src": "26162:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "26164:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "26164:77:19"
																			},
																			"nativeSrc": "26164:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "26164:79:19"
																		},
																		"nativeSrc": "26164:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "26164:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26137:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "26137:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26146:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "26146:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26133:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "26133:3:19"
																		},
																		"nativeSrc": "26133:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "26133:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26158:2:19",
																		"nodeType": "YulLiteral",
																		"src": "26158:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26129:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26129:3:19"
																},
																"nativeSrc": "26129:32:19",
																"nodeType": "YulFunctionCall",
																"src": "26129:32:19"
															},
															"nativeSrc": "26126:119:19",
															"nodeType": "YulIf",
															"src": "26126:119:19"
														},
														{
															"nativeSrc": "26255:127:19",
															"nodeType": "YulBlock",
															"src": "26255:127:19",
															"statements": [
																{
																	"nativeSrc": "26270:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26270:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26284:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26284:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "26274:6:19",
																			"nodeType": "YulTypedName",
																			"src": "26274:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "26299:73:19",
																	"nodeType": "YulAssignment",
																	"src": "26299:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26344:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "26344:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26355:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "26355:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26340:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "26340:3:19"
																				},
																				"nativeSrc": "26340:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "26340:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26364:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "26364:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "26309:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "26309:30:19"
																		},
																		"nativeSrc": "26309:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "26309:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "26299:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "26299:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "26040:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26086:9:19",
														"nodeType": "YulTypedName",
														"src": "26086:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26097:7:19",
														"nodeType": "YulTypedName",
														"src": "26097:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26109:6:19",
														"nodeType": "YulTypedName",
														"src": "26109:6:19",
														"type": ""
													}
												],
												"src": "26040:349:19"
											},
											{
												"body": {
													"nativeSrc": "26423:152:19",
													"nodeType": "YulBlock",
													"src": "26423:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26440:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26440:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26443:77:19",
																		"nodeType": "YulLiteral",
																		"src": "26443:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26433:6:19"
																},
																"nativeSrc": "26433:88:19",
																"nodeType": "YulFunctionCall",
																"src": "26433:88:19"
															},
															"nativeSrc": "26433:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "26433:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26537:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26537:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26540:4:19",
																		"nodeType": "YulLiteral",
																		"src": "26540:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26530:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26530:6:19"
																},
																"nativeSrc": "26530:15:19",
																"nodeType": "YulFunctionCall",
																"src": "26530:15:19"
															},
															"nativeSrc": "26530:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "26530:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26561:1:19",
																		"nodeType": "YulLiteral",
																		"src": "26561:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26564:4:19",
																		"nodeType": "YulLiteral",
																		"src": "26564:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "26554:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26554:6:19"
																},
																"nativeSrc": "26554:15:19",
																"nodeType": "YulFunctionCall",
																"src": "26554:15:19"
															},
															"nativeSrc": "26554:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "26554:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "26395:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "26395:180:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140(memPtr) {\n\n        mstore(add(memPtr, 0), \"Este NFT no esta a la venta\")\n\n    }\n\n    function abi_encode_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pago fallido\")\n\n    }\n\n    function abi_encode_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032(memPtr) {\n\n        mstore(add(memPtr, 0), \"Solo el propietario puede listar\")\n\n        mstore(add(memPtr, 32), \" el NFT para la venta\")\n\n    }\n\n    function abi_encode_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c(memPtr) {\n\n        mstore(add(memPtr, 0), \"El precio debe ser mayor que 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c80636352211e116100a0578063a22cb4651161006f578063a22cb465146102b1578063b5f522f7146102cd578063b88d4fde146102ff578063c87b56dd1461031b578063e985e9c51461034b57610109565b80636352211e1461021757806370a082311461024757806394383f141461027757806395d89b411461029357610109565b806323b872dd116100dc57806323b872dd146101a75780632cb2f52e146101c357806342842e0e146101df57806351ed8288146101fb57610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611ca2565b61037b565b6040516101349190611ce7565b60405180910390f35b6101456103db565b6040516101529190611d70565b60405180910390f35b61017560048036038101906101709190611dc3565b61046a565b6040516101829190611e2d565b60405180910390f35b6101a560048036038101906101a09190611e70565b610485565b005b6101c160048036038101906101bc9190611eae565b61049b565b005b6101dd60048036038101906101d8919061202a565b61059a565b005b6101f960048036038101906101f49190611eae565b6105a8565b005b61021560048036038101906102109190611dc3565b6105c7565b005b610231600480360381019061022c9190611dc3565b610801565b60405161023e9190611e2d565b60405180910390f35b610261600480360381019061025c9190612084565b610812565b60405161026e91906120be565b60405180910390f35b610291600480360381019061028c91906120d7565b6108c8565b005b61029b610a73565b6040516102a89190611d70565b60405180910390f35b6102cb60048036038101906102c6919061213f565b610b03565b005b6102e760048036038101906102e29190611dc3565b610b19565b6040516102f69392919061217d565b60405180910390f35b61031960048036038101906103149190612250565b610b6a565b005b61033560048036038101906103309190611dc3565b610b87565b6040516103429190611d70565b60405180910390f35b610365600480360381019061036091906122d0565b610c92565b6040516103729190611ce7565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d457506103d382610d20565b5b9050919050565b60605f80546103e99061233b565b80601f01602080910402602001604051908101604052809291908181526020018280546104159061233b565b80156104605780601f1061043757610100808354040283529160200191610460565b820191905f5260205f20905b81548152906001019060200180831161044357829003601f168201915b5050505050905090565b5f61047482610e01565b5061047e82610e87565b9050919050565b6104978282610492610ec0565b610ec7565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050b575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105029190611e2d565b60405180910390fd5b5f61051e8383610519610ec0565b610ed9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610594578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058b9392919061236b565b60405180910390fd5b50505050565b6105a482826110e4565b5050565b6105c283838360405180602001604052805f815250610b6a565b505050565b5f60095f8381526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900460ff161515151581525050905080604001516106a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610699906123ea565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33835f015184602001516040518463ffffffff1660e01b815260040161070793929190612408565b6020604051808303815f875af1158015610723573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107479190612451565b610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d906124c6565b60405180910390fd5b610794815f0151338461113e565b5f60095f8481526020019081526020015f206002015f6101000a81548160ff021916908315150217905550817f6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a3383602001516040516107f59291906124e4565b60405180910390a25050565b5f61080b82610e01565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610883575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161087a9190611e2d565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166108e883610801565b73ffffffffffffffffffffffffffffffffffffffff161461093e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109359061257b565b60405180910390fd5b5f8111610980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610977906125e3565b60405180910390fd5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016001151581525060095f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548160ff021916908315150217905550905050817f5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a23383604051610a679291906124e4565b60405180910390a25050565b606060018054610a829061233b565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae9061233b565b8015610af95780601f10610ad057610100808354040283529160200191610af9565b820191905f5260205f20905b815481529060010190602001808311610adc57829003601f168201915b5050505050905090565b610b15610b0e610ec0565b83836112a6565b5050565b6009602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900460ff16905083565b610b7584848461049b565b610b818484848461140f565b50505050565b6060610b9282610e01565b505f60065f8481526020019081526020015f208054610bb09061233b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdc9061233b565b8015610c275780601f10610bfe57610100808354040283529160200191610c27565b820191905f5260205f20905b815481529060010190602001808311610c0a57829003601f168201915b505050505090505f610c376115c1565b90505f815103610c4b578192505050610c8d565b5f82511115610c7f578082604051602001610c6792919061263b565b60405160208183030381529060405292505050610c8d565b610c88846115d7565b925050505b919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610dea57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610dfa5750610df98261163d565b5b9050919050565b5f80610e0c836116a6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e7e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e7591906120be565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ed483838360016116df565b505050565b5f80610ee4846116a6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f2557610f2481848661189e565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fb057610f645f855f806116df565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461102f57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b8060065f8481526020019081526020015f20908161110291906127fb565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161113291906120be565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ae575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111a59190611e2d565b60405180910390fd5b5f6111ba83835f610ed9565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361122c57816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161122391906120be565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112a0578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016112979392919061236b565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131657816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161130d9190611e2d565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114029190611ce7565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156115bb578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611452610ec0565b8685856040518563ffffffff1660e01b8152600401611474949392919061291c565b6020604051808303815f875af19250505080156114af57506040513d601f19601f820116820180604052508101906114ac919061297a565b60015b611530573d805f81146114dd576040519150601f19603f3d011682016040523d82523d5f602084013e6114e2565b606091505b505f81510361152857836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161151f9190611e2d565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115b957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115b09190611e2d565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606115e282610e01565b505f6115ec6115c1565b90505f81511161160a5760405180602001604052805f815250611635565b8061161484611961565b60405160200161162592919061263b565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061171757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611849575f61172684610e01565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561179057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117a357506117a18184610c92565b155b156117e557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117dc9190611e2d565b60405180910390fd5b811561184757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118a9838383611a2b565b61195c575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361191d57806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161191491906120be565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119539291906124e4565b60405180910390fd5b505050565b60605f600161196f84611aeb565b0190505f8167ffffffffffffffff81111561198d5761198c611f06565b5b6040519080825280601f01601f1916602001820160405280156119bf5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a20578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a1557611a146129a5565b5b0494505f85036119cc575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ae257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611aa35750611aa28484610c92565b5b80611ae157508273ffffffffffffffffffffffffffffffffffffffff16611ac983610e87565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b47577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b3d57611b3c6129a5565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b84576d04ee2d6d415b85acef81000000008381611b7a57611b796129a5565b5b0492506020810190505b662386f26fc100008310611bb357662386f26fc100008381611ba957611ba86129a5565b5b0492506010810190505b6305f5e1008310611bdc576305f5e1008381611bd257611bd16129a5565b5b0492506008810190505b6127108310611c01576127108381611bf757611bf66129a5565b5b0492506004810190505b60648310611c245760648381611c1a57611c196129a5565b5b0492506002810190505b600a8310611c33576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c8181611c4d565b8114611c8b575f80fd5b50565b5f81359050611c9c81611c78565b92915050565b5f60208284031215611cb757611cb6611c45565b5b5f611cc484828501611c8e565b91505092915050565b5f8115159050919050565b611ce181611ccd565b82525050565b5f602082019050611cfa5f830184611cd8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d4282611d00565b611d4c8185611d0a565b9350611d5c818560208601611d1a565b611d6581611d28565b840191505092915050565b5f6020820190508181035f830152611d888184611d38565b905092915050565b5f819050919050565b611da281611d90565b8114611dac575f80fd5b50565b5f81359050611dbd81611d99565b92915050565b5f60208284031215611dd857611dd7611c45565b5b5f611de584828501611daf565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e1782611dee565b9050919050565b611e2781611e0d565b82525050565b5f602082019050611e405f830184611e1e565b92915050565b611e4f81611e0d565b8114611e59575f80fd5b50565b5f81359050611e6a81611e46565b92915050565b5f8060408385031215611e8657611e85611c45565b5b5f611e9385828601611e5c565b9250506020611ea485828601611daf565b9150509250929050565b5f805f60608486031215611ec557611ec4611c45565b5b5f611ed286828701611e5c565b9350506020611ee386828701611e5c565b9250506040611ef486828701611daf565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f3c82611d28565b810181811067ffffffffffffffff82111715611f5b57611f5a611f06565b5b80604052505050565b5f611f6d611c3c565b9050611f798282611f33565b919050565b5f67ffffffffffffffff821115611f9857611f97611f06565b5b611fa182611d28565b9050602081019050919050565b828183375f83830152505050565b5f611fce611fc984611f7e565b611f64565b905082815260208101848484011115611fea57611fe9611f02565b5b611ff5848285611fae565b509392505050565b5f82601f83011261201157612010611efe565b5b8135612021848260208601611fbc565b91505092915050565b5f80604083850312156120405761203f611c45565b5b5f61204d85828601611daf565b925050602083013567ffffffffffffffff81111561206e5761206d611c49565b5b61207a85828601611ffd565b9150509250929050565b5f6020828403121561209957612098611c45565b5b5f6120a684828501611e5c565b91505092915050565b6120b881611d90565b82525050565b5f6020820190506120d15f8301846120af565b92915050565b5f80604083850312156120ed576120ec611c45565b5b5f6120fa85828601611daf565b925050602061210b85828601611daf565b9150509250929050565b61211e81611ccd565b8114612128575f80fd5b50565b5f8135905061213981612115565b92915050565b5f806040838503121561215557612154611c45565b5b5f61216285828601611e5c565b92505060206121738582860161212b565b9150509250929050565b5f6060820190506121905f830186611e1e565b61219d60208301856120af565b6121aa6040830184611cd8565b949350505050565b5f67ffffffffffffffff8211156121cc576121cb611f06565b5b6121d582611d28565b9050602081019050919050565b5f6121f46121ef846121b2565b611f64565b9050828152602081018484840111156122105761220f611f02565b5b61221b848285611fae565b509392505050565b5f82601f83011261223757612236611efe565b5b81356122478482602086016121e2565b91505092915050565b5f805f806080858703121561226857612267611c45565b5b5f61227587828801611e5c565b945050602061228687828801611e5c565b935050604061229787828801611daf565b925050606085013567ffffffffffffffff8111156122b8576122b7611c49565b5b6122c487828801612223565b91505092959194509250565b5f80604083850312156122e6576122e5611c45565b5b5f6122f385828601611e5c565b925050602061230485828601611e5c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061235257607f821691505b6020821081036123655761236461230e565b5b50919050565b5f60608201905061237e5f830186611e1e565b61238b60208301856120af565b6123986040830184611e1e565b949350505050565b7f45737465204e4654206e6f20657374612061206c612076656e746100000000005f82015250565b5f6123d4601b83611d0a565b91506123df826123a0565b602082019050919050565b5f6020820190508181035f830152612401816123c8565b9050919050565b5f60608201905061241b5f830186611e1e565b6124286020830185611e1e565b61243560408301846120af565b949350505050565b5f8151905061244b81612115565b92915050565b5f6020828403121561246657612465611c45565b5b5f6124738482850161243d565b91505092915050565b7f5061676f2066616c6c69646f00000000000000000000000000000000000000005f82015250565b5f6124b0600c83611d0a565b91506124bb8261247c565b602082019050919050565b5f6020820190508181035f8301526124dd816124a4565b9050919050565b5f6040820190506124f75f830185611e1e565b61250460208301846120af565b9392505050565b7f536f6c6f20656c2070726f706965746172696f207075656465206c69737461725f8201527f20656c204e46542070617261206c612076656e74610000000000000000000000602082015250565b5f612565603583611d0a565b91506125708261250b565b604082019050919050565b5f6020820190508181035f83015261259281612559565b9050919050565b7f456c2070726563696f206465626520736572206d61796f7220717565203000005f82015250565b5f6125cd601e83611d0a565b91506125d882612599565b602082019050919050565b5f6020820190508181035f8301526125fa816125c1565b9050919050565b5f81905092915050565b5f61261582611d00565b61261f8185612601565b935061262f818560208601611d1a565b80840191505092915050565b5f612646828561260b565b9150612652828461260b565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261267f565b6126c4868361267f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6126ff6126fa6126f584611d90565b6126dc565b611d90565b9050919050565b5f819050919050565b612718836126e5565b61272c61272482612706565b84845461268b565b825550505050565b5f90565b612740612734565b61274b81848461270f565b505050565b5b8181101561276e576127635f82612738565b600181019050612751565b5050565b601f8211156127b3576127848161265e565b61278d84612670565b8101602085101561279c578190505b6127b06127a885612670565b830182612750565b50505b505050565b5f82821c905092915050565b5f6127d35f19846008026127b8565b1980831691505092915050565b5f6127eb83836127c4565b9150826002028217905092915050565b61280482611d00565b67ffffffffffffffff81111561281d5761281c611f06565b5b612827825461233b565b612832828285612772565b5f60209050601f831160018114612863575f8415612851578287015190505b61285b85826127e0565b8655506128c2565b601f1984166128718661265e565b5f5b8281101561289857848901518255600182019150602085019450602081019050612873565b868310156128b557848901516128b1601f8916826127c4565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128ee826128ca565b6128f881856128d4565b9350612908818560208601611d1a565b61291181611d28565b840191505092915050565b5f60808201905061292f5f830187611e1e565b61293c6020830186611e1e565b61294960408301856120af565b818103606083015261295b81846128e4565b905095945050505050565b5f8151905061297481611c78565b92915050565b5f6020828403121561298f5761298e611c45565b5b5f61299c84828501612966565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220408c0974f48abade34b815cadd2eaf6e972d115e4599f2b9e79c26ddcc4ca38164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x34B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x94383F14 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x293 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2CB2F52E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3D4 JUMPI POP PUSH2 0x3D3 DUP3 PUSH2 0xD20 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3E9 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x415 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x460 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x437 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x460 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x443 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x474 DUP3 PUSH2 0xE01 JUMP JUMPDEST POP PUSH2 0x47E DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x497 DUP3 DUP3 PUSH2 0x492 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x51E DUP4 DUP4 PUSH2 0x519 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x594 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5A4 DUP3 DUP3 PUSH2 0x10E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 PUSH0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x747 SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77D SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x794 DUP2 PUSH0 ADD MLOAD CALLER DUP5 PUSH2 0x113E JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x6329E40C0365262EBBFF5CA819385C2B9713DCAA050ED07866D72C441395699A CALLER DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7F5 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80B DUP3 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 DUP4 PUSH2 0x801 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH32 0x5F9C03DE076F5063CD3EBCFE8EF7AA8AF378E4B35A83C77BA9777E97083879A2 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xA67 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA82 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAE SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB15 PUSH2 0xB0E PUSH2 0xEC0 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xB75 DUP5 DUP5 DUP5 PUSH2 0x49B JUMP JUMPDEST PUSH2 0xB81 DUP5 DUP5 DUP5 DUP5 PUSH2 0x140F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB92 DUP3 PUSH2 0xE01 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBB0 SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBDC SWAP1 PUSH2 0x233B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xC37 PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xC4B JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xC8D JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xC7F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC67 SWAP3 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xC88 DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDEA JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xDFA JUMPI POP PUSH2 0xDF9 DUP3 PUSH2 0x163D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE0C DUP4 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEE4 DUP5 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF25 JUMPI PUSH2 0xF24 DUP2 DUP5 DUP7 PUSH2 0x189E JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB0 JUMPI PUSH2 0xF64 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x102F JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x27FB JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11BA DUP4 DUP4 PUSH0 PUSH2 0xED9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1316 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130D SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15BB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1452 PUSH2 0xEC0 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x297A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1530 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1528 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15B9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B0 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15E2 DUP3 PUSH2 0xE01 JUMP JUMPDEST POP PUSH0 PUSH2 0x15EC PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1635 JUMP JUMPDEST DUP1 PUSH2 0x1614 DUP5 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1625 SWAP3 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1717 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1849 JUMPI PUSH0 PUSH2 0x1726 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1790 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17A3 JUMPI POP PUSH2 0x17A1 DUP2 DUP5 PUSH2 0xC92 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x17E5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1847 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18A9 DUP4 DUP4 DUP4 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x195C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1914 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1953 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x196F DUP5 PUSH2 0x1AEB JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x198D JUMPI PUSH2 0x198C PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A20 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A15 JUMPI PUSH2 0x1A14 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x19CC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1AE2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AA3 JUMPI POP PUSH2 0x1AA2 DUP5 DUP5 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1AE1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AC9 DUP4 PUSH2 0xE87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B47 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B84 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BB3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1BDC JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C01 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C24 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x29A5 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C33 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C81 DUP2 PUSH2 0x1C4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9C DUP2 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC4 DUP5 DUP3 DUP6 ADD PUSH2 0x1C8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE1 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CFA PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D42 DUP3 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x1D4C DUP2 DUP6 PUSH2 0x1D0A JUMP JUMPDEST SWAP4 POP PUSH2 0x1D5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x1D65 DUP2 PUSH2 0x1D28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D88 DUP2 DUP5 PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA2 DUP2 PUSH2 0x1D90 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DAC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DBD DUP2 PUSH2 0x1D99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE5 DUP5 DUP3 DUP6 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E17 DUP3 PUSH2 0x1DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E27 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E40 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E85 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E93 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED2 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EE3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EF4 DUP7 DUP3 DUP8 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F3C DUP3 PUSH2 0x1D28 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6D PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP PUSH2 0x1F79 DUP3 DUP3 PUSH2 0x1F33 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F97 PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH2 0x1FA1 DUP3 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FCE PUSH2 0x1FC9 DUP5 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FEA JUMPI PUSH2 0x1FE9 PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x1FF5 DUP5 DUP3 DUP6 PUSH2 0x1FAE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1EFE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2021 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x204D DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x206E JUMPI PUSH2 0x206D PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH2 0x207A DUP6 DUP3 DUP7 ADD PUSH2 0x1FFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH2 0x2098 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A6 DUP5 DUP3 DUP6 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20B8 DUP2 PUSH2 0x1D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20ED JUMPI PUSH2 0x20EC PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20FA DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210B DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x211E DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x2128 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2139 DUP2 PUSH2 0x2115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2162 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2173 DUP6 DUP3 DUP7 ADD PUSH2 0x212B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2190 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x219D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x21AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH2 0x21D5 DUP3 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F4 PUSH2 0x21EF DUP5 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x221B DUP5 DUP3 DUP6 PUSH2 0x1FAE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2237 JUMPI PUSH2 0x2236 PUSH2 0x1EFE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2247 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2268 JUMPI PUSH2 0x2267 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2275 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2286 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2297 DUP8 DUP3 DUP9 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH2 0x22C4 DUP8 DUP3 DUP9 ADD PUSH2 0x2223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22E5 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2304 DUP6 DUP3 DUP7 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2352 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x230E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x237E PUSH0 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x238B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x2398 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E1E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45737465204E4654206E6F20657374612061206C612076656E74610000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D4 PUSH1 0x1B DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x23DF DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2401 DUP2 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x241B PUSH0 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2428 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2435 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x244B DUP2 PUSH2 0x2115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2473 DUP5 DUP3 DUP6 ADD PUSH2 0x243D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061676F2066616C6C69646F0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24B0 PUSH1 0xC DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x24BB DUP3 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24DD DUP2 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24F7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2504 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x536F6C6F20656C2070726F706965746172696F207075656465206C6973746172 PUSH0 DUP3 ADD MSTORE PUSH32 0x20656C204E46542070617261206C612076656E74610000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2565 PUSH1 0x35 DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x2570 DUP3 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2592 DUP2 PUSH2 0x2559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456C2070726563696F206465626520736572206D61796F722071756520300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25CD PUSH1 0x1E DUP4 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP PUSH2 0x25D8 DUP3 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25FA DUP2 PUSH2 0x25C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2615 DUP3 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x261F DUP2 DUP6 PUSH2 0x2601 JUMP JUMPDEST SWAP4 POP PUSH2 0x262F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2646 DUP3 DUP6 PUSH2 0x260B JUMP JUMPDEST SWAP2 POP PUSH2 0x2652 DUP3 DUP5 PUSH2 0x260B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26BA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x267F JUMP JUMPDEST PUSH2 0x26C4 DUP7 DUP4 PUSH2 0x267F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26FF PUSH2 0x26FA PUSH2 0x26F5 DUP5 PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x26DC JUMP JUMPDEST PUSH2 0x1D90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2718 DUP4 PUSH2 0x26E5 JUMP JUMPDEST PUSH2 0x272C PUSH2 0x2724 DUP3 PUSH2 0x2706 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x268B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2740 PUSH2 0x2734 JUMP JUMPDEST PUSH2 0x274B DUP2 DUP5 DUP5 PUSH2 0x270F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x276E JUMPI PUSH2 0x2763 PUSH0 DUP3 PUSH2 0x2738 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2751 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27B3 JUMPI PUSH2 0x2784 DUP2 PUSH2 0x265E JUMP JUMPDEST PUSH2 0x278D DUP5 PUSH2 0x2670 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x279C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27B0 PUSH2 0x27A8 DUP6 PUSH2 0x2670 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2750 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27D3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27B8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27EB DUP4 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2804 DUP3 PUSH2 0x1D00 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x281D JUMPI PUSH2 0x281C PUSH2 0x1F06 JUMP JUMPDEST JUMPDEST PUSH2 0x2827 DUP3 SLOAD PUSH2 0x233B JUMP JUMPDEST PUSH2 0x2832 DUP3 DUP3 DUP6 PUSH2 0x2772 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2863 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2851 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x285B DUP6 DUP3 PUSH2 0x27E0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28C2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2871 DUP7 PUSH2 0x265E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2898 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2873 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28B5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28B1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27C4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28EE DUP3 PUSH2 0x28CA JUMP JUMPDEST PUSH2 0x28F8 DUP2 DUP6 PUSH2 0x28D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2908 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x2911 DUP2 PUSH2 0x1D28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x292F PUSH0 DUP4 ADD DUP8 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x293C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x2949 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x295B DUP2 DUP5 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2974 DUP2 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298F JUMPI PUSH2 0x298E PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x299C DUP5 DUP3 DUP6 ADD PUSH2 0x2966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH DUP13 MULMOD PUSH21 0xF48ABADE34B815CADD2EAF6E972D115E4599F2B9E7 SWAP13 0x26 0xDD 0xCC 0x4C LOG3 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "310:2369:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2166:128:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1468:549:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1089:348:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;675:37:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4985:208:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:9;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:6:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;2166:128:18:-;2255:31;2268:7;2277:8;2255:12;:31::i;:::-;2166:128;;:::o;4787:132:6:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1468:549:18:-;1519:16;1538:5;:14;1544:7;1538:14;;;;;;;;;;;1519:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1571:4;:14;;;1563:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1685:12;;;;;;;;;;;:25;;;1711:10;1723:4;:11;;;1736:4;:10;;;1685:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1677:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1821:43;1831:4;:11;;;1844:10;1856:7;1821:9;:43::i;:::-;1946:5;1919;:14;1925:7;1919:14;;;;;;;;;;;:24;;;:32;;;;;;;;;;;;;;;;;;1977:7;1969:40;1986:10;1998:4;:10;;;1969:40;;;;;;;:::i;:::-;;;;;;;;1508:509;1468:549;:::o;2185:118:6:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1089:348:18:-;1184:10;1164:30;;:16;1172:7;1164;:16::i;:::-;:30;;;1156:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;1279:1;1271:5;:9;1263:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1345:29;;;;;;;;1350:10;1345:29;;;;;;1362:5;1345:29;;;;1369:4;1345:29;;;;;1328:5;:14;1334:7;1328:14;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:7;1392:37;1411:10;1423:5;1392:37;;;;;;;:::i;:::-;;;;;;;;1089:348;;:::o;2518:93:6:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;675:37:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4985:208:6:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;3928:153:6:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14418:120:6:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1922:167:9:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;12013:460:6:-;12112:1;12098:16;;:2;:16;;;12094:87;;12167:1;12137:33;;;;;;;;;;;:::i;:::-;;;;;;;;12094:87;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;;12285:1;12260:27;;:13;:27;;;12256:211;;12333:7;12310:31;;;;;;;;;;;:::i;:::-;;;;;;;;12256:211;12379:4;12362:21;;:13;:21;;;12358:109;;12427:4;12433:7;12442:13;12406:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12358:109;12084:389;12013:460;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:14:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:6:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:13:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:6:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:16:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:117;5640:1;5637;5630:12;5654:180;5702:77;5699:1;5692:88;5799:4;5796:1;5789:15;5823:4;5820:1;5813:15;5840:281;5923:27;5945:4;5923:27;:::i;:::-;5915:6;5911:40;6053:6;6041:10;6038:22;6017:18;6005:10;6002:34;5999:62;5996:88;;;6064:18;;:::i;:::-;5996:88;6104:10;6100:2;6093:22;5883:238;5840:281;;:::o;6127:129::-;6161:6;6188:20;;:::i;:::-;6178:30;;6217:33;6245:4;6237:6;6217:33;:::i;:::-;6127:129;;;:::o;6262:308::-;6324:4;6414:18;6406:6;6403:30;6400:56;;;6436:18;;:::i;:::-;6400:56;6474:29;6496:6;6474:29;:::i;:::-;6466:37;;6558:4;6552;6548:15;6540:23;;6262:308;;;:::o;6576:148::-;6674:6;6669:3;6664;6651:30;6715:1;6706:6;6701:3;6697:16;6690:27;6576:148;;;:::o;6730:425::-;6808:5;6833:66;6849:49;6891:6;6849:49;:::i;:::-;6833:66;:::i;:::-;6824:75;;6922:6;6915:5;6908:21;6960:4;6953:5;6949:16;6998:3;6989:6;6984:3;6980:16;6977:25;6974:112;;;7005:79;;:::i;:::-;6974:112;7095:54;7142:6;7137:3;7132;7095:54;:::i;:::-;6814:341;6730:425;;;;;:::o;7175:340::-;7231:5;7280:3;7273:4;7265:6;7261:17;7257:27;7247:122;;7288:79;;:::i;:::-;7247:122;7405:6;7392:20;7430:79;7505:3;7497:6;7490:4;7482:6;7478:17;7430:79;:::i;:::-;7421:88;;7237:278;7175:340;;;;:::o;7521:654::-;7599:6;7607;7656:2;7644:9;7635:7;7631:23;7627:32;7624:119;;;7662:79;;:::i;:::-;7624:119;7782:1;7807:53;7852:7;7843:6;7832:9;7828:22;7807:53;:::i;:::-;7797:63;;7753:117;7937:2;7926:9;7922:18;7909:32;7968:18;7960:6;7957:30;7954:117;;;7990:79;;:::i;:::-;7954:117;8095:63;8150:7;8141:6;8130:9;8126:22;8095:63;:::i;:::-;8085:73;;7880:288;7521:654;;;;;:::o;8181:329::-;8240:6;8289:2;8277:9;8268:7;8264:23;8260:32;8257:119;;;8295:79;;:::i;:::-;8257:119;8415:1;8440:53;8485:7;8476:6;8465:9;8461:22;8440:53;:::i;:::-;8430:63;;8386:117;8181:329;;;;:::o;8516:118::-;8603:24;8621:5;8603:24;:::i;:::-;8598:3;8591:37;8516:118;;:::o;8640:222::-;8733:4;8771:2;8760:9;8756:18;8748:26;;8784:71;8852:1;8841:9;8837:17;8828:6;8784:71;:::i;:::-;8640:222;;;;:::o;8868:474::-;8936:6;8944;8993:2;8981:9;8972:7;8968:23;8964:32;8961:119;;;8999:79;;:::i;:::-;8961:119;9119:1;9144:53;9189:7;9180:6;9169:9;9165:22;9144:53;:::i;:::-;9134:63;;9090:117;9246:2;9272:53;9317:7;9308:6;9297:9;9293:22;9272:53;:::i;:::-;9262:63;;9217:118;8868:474;;;;;:::o;9348:116::-;9418:21;9433:5;9418:21;:::i;:::-;9411:5;9408:32;9398:60;;9454:1;9451;9444:12;9398:60;9348:116;:::o;9470:133::-;9513:5;9551:6;9538:20;9529:29;;9567:30;9591:5;9567:30;:::i;:::-;9470:133;;;;:::o;9609:468::-;9674:6;9682;9731:2;9719:9;9710:7;9706:23;9702:32;9699:119;;;9737:79;;:::i;:::-;9699:119;9857:1;9882:53;9927:7;9918:6;9907:9;9903:22;9882:53;:::i;:::-;9872:63;;9828:117;9984:2;10010:50;10052:7;10043:6;10032:9;10028:22;10010:50;:::i;:::-;10000:60;;9955:115;9609:468;;;;;:::o;10083:430::-;10226:4;10264:2;10253:9;10249:18;10241:26;;10277:71;10345:1;10334:9;10330:17;10321:6;10277:71;:::i;:::-;10358:72;10426:2;10415:9;10411:18;10402:6;10358:72;:::i;:::-;10440:66;10502:2;10491:9;10487:18;10478:6;10440:66;:::i;:::-;10083:430;;;;;;:::o;10519:307::-;10580:4;10670:18;10662:6;10659:30;10656:56;;;10692:18;;:::i;:::-;10656:56;10730:29;10752:6;10730:29;:::i;:::-;10722:37;;10814:4;10808;10804:15;10796:23;;10519:307;;;:::o;10832:423::-;10909:5;10934:65;10950:48;10991:6;10950:48;:::i;:::-;10934:65;:::i;:::-;10925:74;;11022:6;11015:5;11008:21;11060:4;11053:5;11049:16;11098:3;11089:6;11084:3;11080:16;11077:25;11074:112;;;11105:79;;:::i;:::-;11074:112;11195:54;11242:6;11237:3;11232;11195:54;:::i;:::-;10915:340;10832:423;;;;;:::o;11274:338::-;11329:5;11378:3;11371:4;11363:6;11359:17;11355:27;11345:122;;11386:79;;:::i;:::-;11345:122;11503:6;11490:20;11528:78;11602:3;11594:6;11587:4;11579:6;11575:17;11528:78;:::i;:::-;11519:87;;11335:277;11274:338;;;;:::o;11618:943::-;11713:6;11721;11729;11737;11786:3;11774:9;11765:7;11761:23;11757:33;11754:120;;;11793:79;;:::i;:::-;11754:120;11913:1;11938:53;11983:7;11974:6;11963:9;11959:22;11938:53;:::i;:::-;11928:63;;11884:117;12040:2;12066:53;12111:7;12102:6;12091:9;12087:22;12066:53;:::i;:::-;12056:63;;12011:118;12168:2;12194:53;12239:7;12230:6;12219:9;12215:22;12194:53;:::i;:::-;12184:63;;12139:118;12324:2;12313:9;12309:18;12296:32;12355:18;12347:6;12344:30;12341:117;;;12377:79;;:::i;:::-;12341:117;12482:62;12536:7;12527:6;12516:9;12512:22;12482:62;:::i;:::-;12472:72;;12267:287;11618:943;;;;;;;:::o;12567:474::-;12635:6;12643;12692:2;12680:9;12671:7;12667:23;12663:32;12660:119;;;12698:79;;:::i;:::-;12660:119;12818:1;12843:53;12888:7;12879:6;12868:9;12864:22;12843:53;:::i;:::-;12833:63;;12789:117;12945:2;12971:53;13016:7;13007:6;12996:9;12992:22;12971:53;:::i;:::-;12961:63;;12916:118;12567:474;;;;;:::o;13047:180::-;13095:77;13092:1;13085:88;13192:4;13189:1;13182:15;13216:4;13213:1;13206:15;13233:320;13277:6;13314:1;13308:4;13304:12;13294:22;;13361:1;13355:4;13351:12;13382:18;13372:81;;13438:4;13430:6;13426:17;13416:27;;13372:81;13500:2;13492:6;13489:14;13469:18;13466:38;13463:84;;13519:18;;:::i;:::-;13463:84;13284:269;13233:320;;;:::o;13559:442::-;13708:4;13746:2;13735:9;13731:18;13723:26;;13759:71;13827:1;13816:9;13812:17;13803:6;13759:71;:::i;:::-;13840:72;13908:2;13897:9;13893:18;13884:6;13840:72;:::i;:::-;13922;13990:2;13979:9;13975:18;13966:6;13922:72;:::i;:::-;13559:442;;;;;;:::o;14007:177::-;14147:29;14143:1;14135:6;14131:14;14124:53;14007:177;:::o;14190:366::-;14332:3;14353:67;14417:2;14412:3;14353:67;:::i;:::-;14346:74;;14429:93;14518:3;14429:93;:::i;:::-;14547:2;14542:3;14538:12;14531:19;;14190:366;;;:::o;14562:419::-;14728:4;14766:2;14755:9;14751:18;14743:26;;14815:9;14809:4;14805:20;14801:1;14790:9;14786:17;14779:47;14843:131;14969:4;14843:131;:::i;:::-;14835:139;;14562:419;;;:::o;14987:442::-;15136:4;15174:2;15163:9;15159:18;15151:26;;15187:71;15255:1;15244:9;15240:17;15231:6;15187:71;:::i;:::-;15268:72;15336:2;15325:9;15321:18;15312:6;15268:72;:::i;:::-;15350;15418:2;15407:9;15403:18;15394:6;15350:72;:::i;:::-;14987:442;;;;;;:::o;15435:137::-;15489:5;15520:6;15514:13;15505:22;;15536:30;15560:5;15536:30;:::i;:::-;15435:137;;;;:::o;15578:345::-;15645:6;15694:2;15682:9;15673:7;15669:23;15665:32;15662:119;;;15700:79;;:::i;:::-;15662:119;15820:1;15845:61;15898:7;15889:6;15878:9;15874:22;15845:61;:::i;:::-;15835:71;;15791:125;15578:345;;;;:::o;15929:162::-;16069:14;16065:1;16057:6;16053:14;16046:38;15929:162;:::o;16097:366::-;16239:3;16260:67;16324:2;16319:3;16260:67;:::i;:::-;16253:74;;16336:93;16425:3;16336:93;:::i;:::-;16454:2;16449:3;16445:12;16438:19;;16097:366;;;:::o;16469:419::-;16635:4;16673:2;16662:9;16658:18;16650:26;;16722:9;16716:4;16712:20;16708:1;16697:9;16693:17;16686:47;16750:131;16876:4;16750:131;:::i;:::-;16742:139;;16469:419;;;:::o;16894:332::-;17015:4;17053:2;17042:9;17038:18;17030:26;;17066:71;17134:1;17123:9;17119:17;17110:6;17066:71;:::i;:::-;17147:72;17215:2;17204:9;17200:18;17191:6;17147:72;:::i;:::-;16894:332;;;;;:::o;17232:240::-;17372:34;17368:1;17360:6;17356:14;17349:58;17441:23;17436:2;17428:6;17424:15;17417:48;17232:240;:::o;17478:366::-;17620:3;17641:67;17705:2;17700:3;17641:67;:::i;:::-;17634:74;;17717:93;17806:3;17717:93;:::i;:::-;17835:2;17830:3;17826:12;17819:19;;17478:366;;;:::o;17850:419::-;18016:4;18054:2;18043:9;18039:18;18031:26;;18103:9;18097:4;18093:20;18089:1;18078:9;18074:17;18067:47;18131:131;18257:4;18131:131;:::i;:::-;18123:139;;17850:419;;;:::o;18275:180::-;18415:32;18411:1;18403:6;18399:14;18392:56;18275:180;:::o;18461:366::-;18603:3;18624:67;18688:2;18683:3;18624:67;:::i;:::-;18617:74;;18700:93;18789:3;18700:93;:::i;:::-;18818:2;18813:3;18809:12;18802:19;;18461:366;;;:::o;18833:419::-;18999:4;19037:2;19026:9;19022:18;19014:26;;19086:9;19080:4;19076:20;19072:1;19061:9;19057:17;19050:47;19114:131;19240:4;19114:131;:::i;:::-;19106:139;;18833:419;;;:::o;19258:148::-;19360:11;19397:3;19382:18;;19258:148;;;;:::o;19412:390::-;19518:3;19546:39;19579:5;19546:39;:::i;:::-;19601:89;19683:6;19678:3;19601:89;:::i;:::-;19594:96;;19699:65;19757:6;19752:3;19745:4;19738:5;19734:16;19699:65;:::i;:::-;19789:6;19784:3;19780:16;19773:23;;19522:280;19412:390;;;;:::o;19808:435::-;19988:3;20010:95;20101:3;20092:6;20010:95;:::i;:::-;20003:102;;20122:95;20213:3;20204:6;20122:95;:::i;:::-;20115:102;;20234:3;20227:10;;19808:435;;;;;:::o;20249:141::-;20298:4;20321:3;20313:11;;20344:3;20341:1;20334:14;20378:4;20375:1;20365:18;20357:26;;20249:141;;;:::o;20396:93::-;20433:6;20480:2;20475;20468:5;20464:14;20460:23;20450:33;;20396:93;;;:::o;20495:107::-;20539:8;20589:5;20583:4;20579:16;20558:37;;20495:107;;;;:::o;20608:393::-;20677:6;20727:1;20715:10;20711:18;20750:97;20780:66;20769:9;20750:97;:::i;:::-;20868:39;20898:8;20887:9;20868:39;:::i;:::-;20856:51;;20940:4;20936:9;20929:5;20925:21;20916:30;;20989:4;20979:8;20975:19;20968:5;20965:30;20955:40;;20684:317;;20608:393;;;;;:::o;21007:60::-;21035:3;21056:5;21049:12;;21007:60;;;:::o;21073:142::-;21123:9;21156:53;21174:34;21183:24;21201:5;21183:24;:::i;:::-;21174:34;:::i;:::-;21156:53;:::i;:::-;21143:66;;21073:142;;;:::o;21221:75::-;21264:3;21285:5;21278:12;;21221:75;;;:::o;21302:269::-;21412:39;21443:7;21412:39;:::i;:::-;21473:91;21522:41;21546:16;21522:41;:::i;:::-;21514:6;21507:4;21501:11;21473:91;:::i;:::-;21467:4;21460:105;21378:193;21302:269;;;:::o;21577:73::-;21622:3;21577:73;:::o;21656:189::-;21733:32;;:::i;:::-;21774:65;21832:6;21824;21818:4;21774:65;:::i;:::-;21709:136;21656:189;;:::o;21851:186::-;21911:120;21928:3;21921:5;21918:14;21911:120;;;21982:39;22019:1;22012:5;21982:39;:::i;:::-;21955:1;21948:5;21944:13;21935:22;;21911:120;;;21851:186;;:::o;22043:543::-;22144:2;22139:3;22136:11;22133:446;;;22178:38;22210:5;22178:38;:::i;:::-;22262:29;22280:10;22262:29;:::i;:::-;22252:8;22248:44;22445:2;22433:10;22430:18;22427:49;;;22466:8;22451:23;;22427:49;22489:80;22545:22;22563:3;22545:22;:::i;:::-;22535:8;22531:37;22518:11;22489:80;:::i;:::-;22148:431;;22133:446;22043:543;;;:::o;22592:117::-;22646:8;22696:5;22690:4;22686:16;22665:37;;22592:117;;;;:::o;22715:169::-;22759:6;22792:51;22840:1;22836:6;22828:5;22825:1;22821:13;22792:51;:::i;:::-;22788:56;22873:4;22867;22863:15;22853:25;;22766:118;22715:169;;;;:::o;22889:295::-;22965:4;23111:29;23136:3;23130:4;23111:29;:::i;:::-;23103:37;;23173:3;23170:1;23166:11;23160:4;23157:21;23149:29;;22889:295;;;;:::o;23189:1395::-;23306:37;23339:3;23306:37;:::i;:::-;23408:18;23400:6;23397:30;23394:56;;;23430:18;;:::i;:::-;23394:56;23474:38;23506:4;23500:11;23474:38;:::i;:::-;23559:67;23619:6;23611;23605:4;23559:67;:::i;:::-;23653:1;23677:4;23664:17;;23709:2;23701:6;23698:14;23726:1;23721:618;;;;24383:1;24400:6;24397:77;;;24449:9;24444:3;24440:19;24434:26;24425:35;;24397:77;24500:67;24560:6;24553:5;24500:67;:::i;:::-;24494:4;24487:81;24356:222;23691:887;;23721:618;23773:4;23769:9;23761:6;23757:22;23807:37;23839:4;23807:37;:::i;:::-;23866:1;23880:208;23894:7;23891:1;23888:14;23880:208;;;23973:9;23968:3;23964:19;23958:26;23950:6;23943:42;24024:1;24016:6;24012:14;24002:24;;24071:2;24060:9;24056:18;24043:31;;23917:4;23914:1;23910:12;23905:17;;23880:208;;;24116:6;24107:7;24104:19;24101:179;;;24174:9;24169:3;24165:19;24159:26;24217:48;24259:4;24251:6;24247:17;24236:9;24217:48;:::i;:::-;24209:6;24202:64;24124:156;24101:179;24326:1;24322;24314:6;24310:14;24306:22;24300:4;24293:36;23728:611;;;23691:887;;23281:1303;;;23189:1395;;:::o;24590:98::-;24641:6;24675:5;24669:12;24659:22;;24590:98;;;:::o;24694:168::-;24777:11;24811:6;24806:3;24799:19;24851:4;24846:3;24842:14;24827:29;;24694:168;;;;:::o;24868:373::-;24954:3;24982:38;25014:5;24982:38;:::i;:::-;25036:70;25099:6;25094:3;25036:70;:::i;:::-;25029:77;;25115:65;25173:6;25168:3;25161:4;25154:5;25150:16;25115:65;:::i;:::-;25205:29;25227:6;25205:29;:::i;:::-;25200:3;25196:39;25189:46;;24958:283;24868:373;;;;:::o;25247:640::-;25442:4;25480:3;25469:9;25465:19;25457:27;;25494:71;25562:1;25551:9;25547:17;25538:6;25494:71;:::i;:::-;25575:72;25643:2;25632:9;25628:18;25619:6;25575:72;:::i;:::-;25657;25725:2;25714:9;25710:18;25701:6;25657:72;:::i;:::-;25776:9;25770:4;25766:20;25761:2;25750:9;25746:18;25739:48;25804:76;25875:4;25866:6;25804:76;:::i;:::-;25796:84;;25247:640;;;;;;;:::o;25893:141::-;25949:5;25980:6;25974:13;25965:22;;25996:32;26022:5;25996:32;:::i;:::-;25893:141;;;;:::o;26040:349::-;26109:6;26158:2;26146:9;26137:7;26133:23;26129:32;26126:119;;;26164:79;;:::i;:::-;26126:119;26284:1;26309:63;26364:7;26355:6;26344:9;26340:22;26309:63;:::i;:::-;26299:73;;26255:127;26040:349;;;;:::o;26395:180::-;26443:77;26440:1;26433:88;26540:4;26537:1;26530:15;26564:4;26561:1;26554:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2152000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"buyNFT(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"listNFT(uint256,uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"sales(uint256)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"updateTokenMetadata(uint256,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 924,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "4D69417274654469676974616C00000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "4D41440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1036,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1013,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1001,
									"end": 1013,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1001,
									"end": 1037,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 924,
									"end": 1045,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 19,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "13"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "71"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 19,
									"value": "71"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "tag",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2679,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220408c0974f48abade34b815cadd2eaf6e972d115e4599f2b9e79c26ddcc4ca38164736f6c63430008190033",
									".code": [
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "B5F522F7"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "94383F14"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "2CB2F52E"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "51ED8288"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 2679,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 2166,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "tag",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 2166,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1468,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1468,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1089,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1089,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 675,
											"end": 712,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 675,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 675,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 675,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2255,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 2255,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2255,
											"end": 2286,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 2255,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2166,
											"end": 2294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1535,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1519,
											"end": 1552,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1575,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1585,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1585,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1585,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 1563,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 1563,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1710,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1710,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1710,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 1711,
											"end": 1721,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1740,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 1685,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "tag",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1685,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 1677,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 1677,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1842,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1842,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1842,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1844,
											"end": 1854,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1856,
											"end": 1863,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 1821,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "PUSH",
											"source": 18,
											"value": "6329E40C0365262EBBFF5CA819385C2B9713DCAA050ED07866D72C441395699A"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1998,
											"end": 2002,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1998,
											"end": 2008,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2008,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1998,
											"end": 2008,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 1969,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 2009,
											"name": "LOG2",
											"source": 18
										},
										{
											"begin": 1508,
											"end": 2017,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1468,
											"end": 2017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1164,
											"end": 1194,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1194,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1172,
											"end": 1179,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1164,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1164,
											"end": 1194,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1194,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1164,
											"end": 1194,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 1156,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1156,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1276,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1271,
											"end": 1280,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 1263,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "tag",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 1263,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1350,
											"end": 1360,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1373,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1341,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 1409,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "5F9C03DE076F5063CD3EBCFE8EF7AA8AF378E4B35A83C77BA9777E97083879A2"
										},
										{
											"begin": 1411,
											"end": 1421,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 1392,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1392,
											"end": 1429,
											"name": "LOG2",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 675,
											"end": 712,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 12137,
											"end": 12170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 12214,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12260,
											"end": 12273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12333,
											"end": 12340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12310,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12427,
											"end": 12431,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12442,
											"end": 12455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 12406,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12084,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "tag",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5702,
											"end": 5779,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5780,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5804,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 5923,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5911,
											"end": 5951,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6017,
											"end": 6035,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6005,
											"end": 6015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 6064,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5883,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 6217,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 6436,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 6474,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6651,
											"end": 6681,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6717,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 6849,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "tag",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 6833,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6908,
											"end": 6929,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6977,
											"end": 7002,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 7095,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7257,
											"end": 7284,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 7430,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7237,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "tag",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7635,
											"end": 7642,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7631,
											"end": 7654,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7627,
											"end": 7659,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 7662,
											"end": 7741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 7852,
											"end": 7859,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7832,
											"end": 7841,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7828,
											"end": 7850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 7807,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 7807,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7797,
											"end": 7860,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7797,
											"end": 7860,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7753,
											"end": 7870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7957,
											"end": 7987,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 7990,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 7954,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8141,
											"end": 8147,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8126,
											"end": 8148,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 8095,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8085,
											"end": 8158,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8085,
											"end": 8158,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7880,
											"end": 8168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8240,
											"end": 8246,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8286,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8268,
											"end": 8275,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8264,
											"end": 8287,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8260,
											"end": 8292,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 8295,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 8295,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 8257,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8415,
											"end": 8416,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 8485,
											"end": 8492,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8476,
											"end": 8482,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8465,
											"end": 8474,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8461,
											"end": 8483,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 8440,
											"end": 8493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "tag",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 8440,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8430,
											"end": 8493,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8430,
											"end": 8493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 8621,
											"end": 8626,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 8603,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 8603,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8598,
											"end": 8601,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8591,
											"end": 8628,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8516,
											"end": 8634,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8516,
											"end": 8634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8733,
											"end": 8737,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8769,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8850,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8837,
											"end": 8854,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8828,
											"end": 8834,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 8784,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8640,
											"end": 8862,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8640,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "tag",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8936,
											"end": 8942,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8950,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8981,
											"end": 8990,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8972,
											"end": 8979,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8968,
											"end": 8991,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 8999,
											"end": 9078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9169,
											"end": 9178,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9165,
											"end": 9187,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 9144,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "tag",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9134,
											"end": 9197,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9134,
											"end": 9197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9090,
											"end": 9207,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 9317,
											"end": 9324,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9308,
											"end": 9314,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9297,
											"end": 9306,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9293,
											"end": 9315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9272,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 9272,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9272,
											"end": 9325,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 9272,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9262,
											"end": 9325,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9262,
											"end": 9325,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9217,
											"end": 9335,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 9342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9348,
											"end": 9464,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 9348,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 9433,
											"end": 9438,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 9418,
											"end": 9439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 9418,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9408,
											"end": 9440,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9444,
											"end": 9456,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 9398,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9348,
											"end": 9464,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9348,
											"end": 9464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9513,
											"end": 9518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9538,
											"end": 9558,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9558,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 9591,
											"end": 9596,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 9567,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9470,
											"end": 9603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "tag",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9688,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9728,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9702,
											"end": 9734,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 9737,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "tag",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 9699,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 9927,
											"end": 9934,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9907,
											"end": 9916,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9903,
											"end": 9925,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 9882,
											"end": 9935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 9935,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 9935,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9828,
											"end": 9945,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9984,
											"end": 9986,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 10052,
											"end": 10059,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10043,
											"end": 10049,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 10010,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 10010,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10000,
											"end": 10060,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10000,
											"end": 10060,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9955,
											"end": 10070,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9609,
											"end": 10077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "tag",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10226,
											"end": 10230,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10249,
											"end": 10267,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10241,
											"end": 10267,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10241,
											"end": 10267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10277,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 10345,
											"end": 10346,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10330,
											"end": 10347,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10321,
											"end": 10327,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10277,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 10277,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10277,
											"end": 10348,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 10277,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10358,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 10426,
											"end": 10428,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10415,
											"end": 10424,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10358,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 10358,
											"end": 10430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10358,
											"end": 10430,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 10358,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10440,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 10502,
											"end": 10504,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10491,
											"end": 10500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10478,
											"end": 10484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10440,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 10440,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10440,
											"end": 10506,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 10440,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10083,
											"end": 10513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10826,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 10519,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10584,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10662,
											"end": 10668,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10659,
											"end": 10689,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10656,
											"end": 10712,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10656,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 10656,
											"end": 10712,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 10692,
											"end": 10710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10656,
											"end": 10712,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 10656,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10730,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10730,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 10730,
											"end": 10759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10730,
											"end": 10759,
											"name": "tag",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 10730,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10722,
											"end": 10759,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10722,
											"end": 10759,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10812,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10804,
											"end": 10819,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10796,
											"end": 10819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10796,
											"end": 10819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10826,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10826,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10826,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10909,
											"end": 10914,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 10950,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 10991,
											"end": 10997,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10950,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 10950,
											"end": 10998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10950,
											"end": 10998,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 10950,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10934,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 10934,
											"end": 10999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10934,
											"end": 10999,
											"name": "tag",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 10934,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10925,
											"end": 10999,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10925,
											"end": 10999,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11022,
											"end": 11028,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11015,
											"end": 11020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11008,
											"end": 11029,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11060,
											"end": 11064,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11053,
											"end": 11058,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11049,
											"end": 11065,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11098,
											"end": 11101,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11089,
											"end": 11095,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11084,
											"end": 11087,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11080,
											"end": 11096,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11077,
											"end": 11102,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11074,
											"end": 11186,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11074,
											"end": 11186,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 11074,
											"end": 11186,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11105,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 11105,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 11105,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11105,
											"end": 11184,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 11105,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11074,
											"end": 11186,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 11074,
											"end": 11186,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11195,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 11242,
											"end": 11248,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11237,
											"end": 11240,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11232,
											"end": 11235,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11195,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 11195,
											"end": 11249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11195,
											"end": 11249,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 11195,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10915,
											"end": 11255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 11255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11612,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 11274,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11329,
											"end": 11334,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11378,
											"end": 11381,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11371,
											"end": 11375,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 11363,
											"end": 11369,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11359,
											"end": 11376,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11355,
											"end": 11382,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11345,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 11345,
											"end": 11467,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11386,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 11386,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 11386,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11386,
											"end": 11465,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 11386,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11345,
											"end": 11467,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 11345,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11503,
											"end": 11509,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11490,
											"end": 11510,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11528,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 11602,
											"end": 11605,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11594,
											"end": 11600,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11587,
											"end": 11591,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11575,
											"end": 11592,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11528,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 11528,
											"end": 11606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11528,
											"end": 11606,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 11528,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11519,
											"end": 11606,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11519,
											"end": 11606,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11335,
											"end": 11612,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11612,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11612,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11612,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11612,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "tag",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11713,
											"end": 11719,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11721,
											"end": 11727,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11729,
											"end": 11735,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 11743,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11786,
											"end": 11789,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11765,
											"end": 11772,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11761,
											"end": 11784,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11757,
											"end": 11790,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11874,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 11754,
											"end": 11874,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11793,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 11793,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 11793,
											"end": 11872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11793,
											"end": 11872,
											"name": "tag",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 11793,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11754,
											"end": 11874,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 11754,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 11983,
											"end": 11990,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11974,
											"end": 11980,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11963,
											"end": 11972,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 11959,
											"end": 11981,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11938,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 11938,
											"end": 11991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11938,
											"end": 11991,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 11938,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11928,
											"end": 11991,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11928,
											"end": 11991,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11884,
											"end": 12001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12040,
											"end": 12042,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12066,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 12111,
											"end": 12118,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12102,
											"end": 12108,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12087,
											"end": 12109,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12066,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 12066,
											"end": 12119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12066,
											"end": 12119,
											"name": "tag",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 12066,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12056,
											"end": 12119,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12056,
											"end": 12119,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12011,
											"end": 12129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12168,
											"end": 12170,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12194,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12230,
											"end": 12236,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12219,
											"end": 12228,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12215,
											"end": 12237,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12194,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 12194,
											"end": 12247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12194,
											"end": 12247,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 12194,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12184,
											"end": 12247,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12184,
											"end": 12247,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12324,
											"end": 12326,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12313,
											"end": 12322,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12296,
											"end": 12328,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12355,
											"end": 12373,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12347,
											"end": 12353,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12344,
											"end": 12374,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 12341,
											"end": 12458,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12341,
											"end": 12458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 12341,
											"end": 12458,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12377,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 12377,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 12377,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12377,
											"end": 12456,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 12377,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12341,
											"end": 12458,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 12341,
											"end": 12458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12482,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 12536,
											"end": 12543,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12527,
											"end": 12533,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12516,
											"end": 12525,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12512,
											"end": 12534,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12482,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 12482,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12482,
											"end": 12544,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 12482,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12472,
											"end": 12544,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12472,
											"end": 12544,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12267,
											"end": 12554,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11618,
											"end": 12561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "tag",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12635,
											"end": 12641,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12643,
											"end": 12649,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12692,
											"end": 12694,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12689,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12671,
											"end": 12678,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12667,
											"end": 12690,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12663,
											"end": 12695,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12660,
											"end": 12779,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12660,
											"end": 12779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 12660,
											"end": 12779,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12698,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 12698,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 12698,
											"end": 12777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12698,
											"end": 12777,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 12698,
											"end": 12777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12660,
											"end": 12779,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 12660,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12843,
											"end": 12896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 12888,
											"end": 12895,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12879,
											"end": 12885,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12868,
											"end": 12877,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12864,
											"end": 12886,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12843,
											"end": 12896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 12843,
											"end": 12896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12843,
											"end": 12896,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 12843,
											"end": 12896,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12833,
											"end": 12896,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12833,
											"end": 12896,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12789,
											"end": 12906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12945,
											"end": 12947,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13007,
											"end": 13013,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12996,
											"end": 13005,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12992,
											"end": 13014,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 12971,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12961,
											"end": 13024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12961,
											"end": 13024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12916,
											"end": 13034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 13041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13047,
											"end": 13227,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 13047,
											"end": 13227,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13095,
											"end": 13172,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13092,
											"end": 13093,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13085,
											"end": 13173,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 13182,
											"end": 13197,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13216,
											"end": 13220,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13221,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 13233,
											"end": 13553,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 13233,
											"end": 13553,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13315,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 13308,
											"end": 13312,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13304,
											"end": 13316,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13361,
											"end": 13362,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 13359,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13372,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 13372,
											"end": 13453,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13438,
											"end": 13442,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 13430,
											"end": 13436,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13426,
											"end": 13443,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13416,
											"end": 13443,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13416,
											"end": 13443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13372,
											"end": 13453,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 13372,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13500,
											"end": 13502,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13492,
											"end": 13498,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13489,
											"end": 13503,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13466,
											"end": 13504,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13463,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 13463,
											"end": 13547,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13519,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 13519,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 13519,
											"end": 13537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13519,
											"end": 13537,
											"name": "tag",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 13519,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13463,
											"end": 13547,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 13463,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13284,
											"end": 13553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13233,
											"end": 13553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13233,
											"end": 13553,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13233,
											"end": 13553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13233,
											"end": 13553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "tag",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13708,
											"end": 13712,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13746,
											"end": 13748,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13735,
											"end": 13744,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13723,
											"end": 13749,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13723,
											"end": 13749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13759,
											"end": 13830,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 13827,
											"end": 13828,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13816,
											"end": 13825,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13812,
											"end": 13829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13803,
											"end": 13809,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13759,
											"end": 13830,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 13759,
											"end": 13830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13759,
											"end": 13830,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 13759,
											"end": 13830,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13840,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 13908,
											"end": 13910,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13897,
											"end": 13906,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13893,
											"end": 13911,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13884,
											"end": 13890,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13840,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 13840,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13840,
											"end": 13912,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 13840,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13922,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 13990,
											"end": 13992,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13979,
											"end": 13988,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13975,
											"end": 13993,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13966,
											"end": 13972,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13922,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 13922,
											"end": 13994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13922,
											"end": 13994,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 13922,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 14001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14007,
											"end": 14184,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 14007,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14147,
											"end": 14176,
											"name": "PUSH",
											"source": 19,
											"value": "45737465204E4654206E6F20657374612061206C612076656E74610000000000"
										},
										{
											"begin": 14143,
											"end": 14144,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14131,
											"end": 14145,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14124,
											"end": 14177,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14007,
											"end": 14184,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14007,
											"end": 14184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14190,
											"end": 14556,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 14190,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14332,
											"end": 14335,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14353,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 14417,
											"end": 14419,
											"name": "PUSH",
											"source": 19,
											"value": "1B"
										},
										{
											"begin": 14412,
											"end": 14415,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14353,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 14353,
											"end": 14420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14353,
											"end": 14420,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 14353,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14346,
											"end": 14420,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14346,
											"end": 14420,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14429,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 14518,
											"end": 14521,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14429,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 14429,
											"end": 14522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14429,
											"end": 14522,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 14429,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14547,
											"end": 14549,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14542,
											"end": 14545,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14538,
											"end": 14550,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14531,
											"end": 14550,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14531,
											"end": 14550,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14190,
											"end": 14556,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14190,
											"end": 14556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14190,
											"end": 14556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14190,
											"end": 14556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14562,
											"end": 14981,
											"name": "tag",
											"source": 19,
											"value": "134"
										},
										{
											"begin": 14562,
											"end": 14981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14728,
											"end": 14732,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14768,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14755,
											"end": 14764,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14751,
											"end": 14769,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14743,
											"end": 14769,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14743,
											"end": 14769,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14815,
											"end": 14824,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14809,
											"end": 14813,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14805,
											"end": 14825,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14801,
											"end": 14802,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14790,
											"end": 14799,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14786,
											"end": 14803,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14779,
											"end": 14826,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14843,
											"end": 14974,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 14969,
											"end": 14973,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14843,
											"end": 14974,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 14843,
											"end": 14974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14843,
											"end": 14974,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 14843,
											"end": 14974,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14835,
											"end": 14974,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14835,
											"end": 14974,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14562,
											"end": 14981,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14562,
											"end": 14981,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14562,
											"end": 14981,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14562,
											"end": 14981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "tag",
											"source": 19,
											"value": "136"
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15136,
											"end": 15140,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15176,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 15163,
											"end": 15172,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15159,
											"end": 15177,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15151,
											"end": 15177,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15151,
											"end": 15177,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15187,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 15255,
											"end": 15256,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15244,
											"end": 15253,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15240,
											"end": 15257,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15237,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15187,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 15187,
											"end": 15258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15187,
											"end": 15258,
											"name": "tag",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 15187,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15268,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 15336,
											"end": 15338,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15325,
											"end": 15334,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15312,
											"end": 15318,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15268,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 15268,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15268,
											"end": 15340,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 15268,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15350,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 15418,
											"end": 15420,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 15407,
											"end": 15416,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15394,
											"end": 15400,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15350,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 15350,
											"end": 15422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15350,
											"end": 15422,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 15350,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14987,
											"end": 15429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15435,
											"end": 15572,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 15435,
											"end": 15572,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15489,
											"end": 15494,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15520,
											"end": 15526,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15514,
											"end": 15527,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15505,
											"end": 15527,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15505,
											"end": 15527,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15536,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 15560,
											"end": 15565,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15536,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 15536,
											"end": 15566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15536,
											"end": 15566,
											"name": "tag",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 15536,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15435,
											"end": 15572,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15435,
											"end": 15572,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15435,
											"end": 15572,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15435,
											"end": 15572,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15435,
											"end": 15572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15923,
											"name": "tag",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 15578,
											"end": 15923,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15645,
											"end": 15651,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15694,
											"end": 15696,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15682,
											"end": 15691,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15673,
											"end": 15680,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15669,
											"end": 15692,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15665,
											"end": 15697,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 15662,
											"end": 15781,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15662,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 15662,
											"end": 15781,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15700,
											"end": 15779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 15700,
											"end": 15779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 15700,
											"end": 15779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15700,
											"end": 15779,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 15700,
											"end": 15779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15662,
											"end": 15781,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 15662,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15820,
											"end": 15821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15845,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 15898,
											"end": 15905,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15889,
											"end": 15895,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15878,
											"end": 15887,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15874,
											"end": 15896,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15845,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 15845,
											"end": 15906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15845,
											"end": 15906,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 15845,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15835,
											"end": 15906,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15835,
											"end": 15906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15791,
											"end": 15916,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15923,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15923,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15923,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15923,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15578,
											"end": 15923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15929,
											"end": 16091,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 15929,
											"end": 16091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16069,
											"end": 16083,
											"name": "PUSH",
											"source": 19,
											"value": "5061676F2066616C6C69646F0000000000000000000000000000000000000000"
										},
										{
											"begin": 16065,
											"end": 16066,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16057,
											"end": 16063,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16053,
											"end": 16067,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15929,
											"end": 16091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15929,
											"end": 16091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16097,
											"end": 16463,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 16097,
											"end": 16463,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16239,
											"end": 16242,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16260,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 16324,
											"end": 16326,
											"name": "PUSH",
											"source": 19,
											"value": "C"
										},
										{
											"begin": 16319,
											"end": 16322,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16260,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 16260,
											"end": 16327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16260,
											"end": 16327,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 16260,
											"end": 16327,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16253,
											"end": 16327,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16253,
											"end": 16327,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 16425,
											"end": 16428,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 16336,
											"end": 16429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16429,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 16336,
											"end": 16429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16454,
											"end": 16456,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16449,
											"end": 16452,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16445,
											"end": 16457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16438,
											"end": 16457,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16438,
											"end": 16457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16097,
											"end": 16463,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16097,
											"end": 16463,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16097,
											"end": 16463,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16097,
											"end": 16463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16888,
											"name": "tag",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 16469,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16635,
											"end": 16639,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16673,
											"end": 16675,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16662,
											"end": 16671,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16658,
											"end": 16676,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16650,
											"end": 16676,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16650,
											"end": 16676,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16722,
											"end": 16731,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16716,
											"end": 16720,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16712,
											"end": 16732,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16708,
											"end": 16709,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16697,
											"end": 16706,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16693,
											"end": 16710,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16686,
											"end": 16733,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16750,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 16876,
											"end": 16880,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16750,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 16750,
											"end": 16881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16750,
											"end": 16881,
											"name": "tag",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 16750,
											"end": 16881,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16742,
											"end": 16881,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16742,
											"end": 16881,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16888,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16888,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16888,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17015,
											"end": 17019,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17053,
											"end": 17055,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 17042,
											"end": 17051,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17038,
											"end": 17056,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17030,
											"end": 17056,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17030,
											"end": 17056,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17066,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 17134,
											"end": 17135,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17123,
											"end": 17132,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17119,
											"end": 17136,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17110,
											"end": 17116,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17066,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 17066,
											"end": 17137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17066,
											"end": 17137,
											"name": "tag",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 17066,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17147,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 17215,
											"end": 17217,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17204,
											"end": 17213,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17200,
											"end": 17218,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17191,
											"end": 17197,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17147,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 17147,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17147,
											"end": 17219,
											"name": "tag",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 17147,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 17226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17232,
											"end": 17472,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 17232,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17372,
											"end": 17406,
											"name": "PUSH",
											"source": 19,
											"value": "536F6C6F20656C2070726F706965746172696F207075656465206C6973746172"
										},
										{
											"begin": 17368,
											"end": 17369,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17360,
											"end": 17366,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17356,
											"end": 17370,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17349,
											"end": 17407,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17441,
											"end": 17464,
											"name": "PUSH",
											"source": 19,
											"value": "20656C204E46542070617261206C612076656E74610000000000000000000000"
										},
										{
											"begin": 17436,
											"end": 17438,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17428,
											"end": 17434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17424,
											"end": 17439,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17417,
											"end": 17465,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17232,
											"end": 17472,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17232,
											"end": 17472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17620,
											"end": 17623,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 17705,
											"end": 17707,
											"name": "PUSH",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 17700,
											"end": 17703,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 17641,
											"end": 17708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "tag",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17634,
											"end": 17708,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17634,
											"end": 17708,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 17806,
											"end": 17809,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 17717,
											"end": 17810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "tag",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17835,
											"end": 17837,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 17830,
											"end": 17833,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17826,
											"end": 17838,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17819,
											"end": 17838,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17819,
											"end": 17838,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17478,
											"end": 17844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17850,
											"end": 18269,
											"name": "tag",
											"source": 19,
											"value": "157"
										},
										{
											"begin": 17850,
											"end": 18269,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18016,
											"end": 18020,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18054,
											"end": 18056,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18043,
											"end": 18052,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18039,
											"end": 18057,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18031,
											"end": 18057,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18031,
											"end": 18057,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18103,
											"end": 18112,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18097,
											"end": 18101,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18093,
											"end": 18113,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18089,
											"end": 18090,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18078,
											"end": 18087,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18074,
											"end": 18091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18067,
											"end": 18114,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18131,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 18257,
											"end": 18261,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18131,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 18131,
											"end": 18262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18131,
											"end": 18262,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 18131,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18123,
											"end": 18262,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18123,
											"end": 18262,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17850,
											"end": 18269,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17850,
											"end": 18269,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17850,
											"end": 18269,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17850,
											"end": 18269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18275,
											"end": 18455,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 18275,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18415,
											"end": 18447,
											"name": "PUSH",
											"source": 19,
											"value": "456C2070726563696F206465626520736572206D61796F722071756520300000"
										},
										{
											"begin": 18411,
											"end": 18412,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18403,
											"end": 18409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18399,
											"end": 18413,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18392,
											"end": 18448,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18275,
											"end": 18455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18275,
											"end": 18455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18461,
											"end": 18827,
											"name": "tag",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 18461,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18603,
											"end": 18606,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18624,
											"end": 18691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 18688,
											"end": 18690,
											"name": "PUSH",
											"source": 19,
											"value": "1E"
										},
										{
											"begin": 18683,
											"end": 18686,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18624,
											"end": 18691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 18624,
											"end": 18691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18624,
											"end": 18691,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 18624,
											"end": 18691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18617,
											"end": 18691,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18617,
											"end": 18691,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18700,
											"end": 18793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 18789,
											"end": 18792,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18700,
											"end": 18793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 18700,
											"end": 18793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18700,
											"end": 18793,
											"name": "tag",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 18700,
											"end": 18793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18818,
											"end": 18820,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18813,
											"end": 18816,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18809,
											"end": 18821,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18802,
											"end": 18821,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18802,
											"end": 18821,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18461,
											"end": 18827,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18461,
											"end": 18827,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18461,
											"end": 18827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18461,
											"end": 18827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18833,
											"end": 19252,
											"name": "tag",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 18833,
											"end": 19252,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18999,
											"end": 19003,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19037,
											"end": 19039,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19026,
											"end": 19035,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19022,
											"end": 19040,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19014,
											"end": 19040,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19014,
											"end": 19040,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19086,
											"end": 19095,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19080,
											"end": 19084,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19076,
											"end": 19096,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19072,
											"end": 19073,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19061,
											"end": 19070,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19057,
											"end": 19074,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19050,
											"end": 19097,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19114,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 19240,
											"end": 19244,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19114,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 19114,
											"end": 19245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19114,
											"end": 19245,
											"name": "tag",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 19114,
											"end": 19245,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19106,
											"end": 19245,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19106,
											"end": 19245,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18833,
											"end": 19252,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18833,
											"end": 19252,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18833,
											"end": 19252,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18833,
											"end": 19252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19406,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 19258,
											"end": 19406,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19360,
											"end": 19371,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19397,
											"end": 19400,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19382,
											"end": 19400,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19382,
											"end": 19400,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19406,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19406,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19406,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19406,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19802,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 19412,
											"end": 19802,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19518,
											"end": 19521,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19546,
											"end": 19585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 19579,
											"end": 19584,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19546,
											"end": 19585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 19546,
											"end": 19585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19546,
											"end": 19585,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 19546,
											"end": 19585,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19601,
											"end": 19690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 19683,
											"end": 19689,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19678,
											"end": 19681,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19601,
											"end": 19690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 19601,
											"end": 19690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19601,
											"end": 19690,
											"name": "tag",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 19601,
											"end": 19690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19594,
											"end": 19690,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 19594,
											"end": 19690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19699,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "586"
										},
										{
											"begin": 19757,
											"end": 19763,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19752,
											"end": 19755,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19745,
											"end": 19749,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19738,
											"end": 19743,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19734,
											"end": 19750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19699,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 19699,
											"end": 19764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19699,
											"end": 19764,
											"name": "tag",
											"source": 19,
											"value": "586"
										},
										{
											"begin": 19699,
											"end": 19764,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19789,
											"end": 19795,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19784,
											"end": 19787,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19780,
											"end": 19796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19773,
											"end": 19796,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19773,
											"end": 19796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19522,
											"end": 19802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19802,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19802,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "tag",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19988,
											"end": 19991,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20010,
											"end": 20105,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 20101,
											"end": 20104,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20098,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20105,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 20010,
											"end": 20105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20105,
											"name": "tag",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 20010,
											"end": 20105,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20003,
											"end": 20105,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20003,
											"end": 20105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20122,
											"end": 20217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 20213,
											"end": 20216,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20204,
											"end": 20210,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20122,
											"end": 20217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 20122,
											"end": 20217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20122,
											"end": 20217,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 20122,
											"end": 20217,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20115,
											"end": 20217,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20115,
											"end": 20217,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20234,
											"end": 20237,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20227,
											"end": 20237,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20227,
											"end": 20237,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19808,
											"end": 20243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20249,
											"end": 20390,
											"name": "tag",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 20249,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20298,
											"end": 20302,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20321,
											"end": 20324,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20313,
											"end": 20324,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20313,
											"end": 20324,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20344,
											"end": 20347,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20341,
											"end": 20342,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20334,
											"end": 20348,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20378,
											"end": 20382,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20375,
											"end": 20376,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20365,
											"end": 20383,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 20357,
											"end": 20383,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20357,
											"end": 20383,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20249,
											"end": 20390,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20249,
											"end": 20390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20249,
											"end": 20390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20249,
											"end": 20390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20396,
											"end": 20489,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 20396,
											"end": 20489,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20433,
											"end": 20439,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20480,
											"end": 20482,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20475,
											"end": 20477,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 20468,
											"end": 20473,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20464,
											"end": 20478,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20460,
											"end": 20483,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 20450,
											"end": 20483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20450,
											"end": 20483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20396,
											"end": 20489,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20396,
											"end": 20489,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20396,
											"end": 20489,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20396,
											"end": 20489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20495,
											"end": 20602,
											"name": "tag",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 20495,
											"end": 20602,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20539,
											"end": 20547,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20589,
											"end": 20594,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20583,
											"end": 20587,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20579,
											"end": 20595,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 20558,
											"end": 20595,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20558,
											"end": 20595,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20495,
											"end": 20602,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20495,
											"end": 20602,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20495,
											"end": 20602,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20495,
											"end": 20602,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20495,
											"end": 20602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20677,
											"end": 20683,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20727,
											"end": 20728,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 20715,
											"end": 20725,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20711,
											"end": 20729,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 20750,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 20780,
											"end": 20846,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20769,
											"end": 20778,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20750,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 20750,
											"end": 20847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20750,
											"end": 20847,
											"name": "tag",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 20750,
											"end": 20847,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20868,
											"end": 20907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 20898,
											"end": 20906,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 20887,
											"end": 20896,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20868,
											"end": 20907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 20868,
											"end": 20907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20868,
											"end": 20907,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 20868,
											"end": 20907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20856,
											"end": 20907,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 20856,
											"end": 20907,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20940,
											"end": 20944,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 20936,
											"end": 20945,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 20929,
											"end": 20934,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20925,
											"end": 20946,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20916,
											"end": 20946,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 20916,
											"end": 20946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20989,
											"end": 20993,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 20979,
											"end": 20987,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 20975,
											"end": 20994,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20968,
											"end": 20973,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20965,
											"end": 20995,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 20955,
											"end": 20995,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20955,
											"end": 20995,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20684,
											"end": 21001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20684,
											"end": 21001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 21001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21007,
											"end": 21067,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 21007,
											"end": 21067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21035,
											"end": 21038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21056,
											"end": 21061,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21049,
											"end": 21061,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21049,
											"end": 21061,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21007,
											"end": 21067,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21007,
											"end": 21067,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21007,
											"end": 21067,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21007,
											"end": 21067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21073,
											"end": 21215,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 21073,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21123,
											"end": 21132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21156,
											"end": 21209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 21174,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 21183,
											"end": 21207,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 21201,
											"end": 21206,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21183,
											"end": 21207,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 21183,
											"end": 21207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21183,
											"end": 21207,
											"name": "tag",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 21183,
											"end": 21207,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21174,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 21174,
											"end": 21208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21174,
											"end": 21208,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 21174,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21156,
											"end": 21209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 21156,
											"end": 21209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21156,
											"end": 21209,
											"name": "tag",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 21156,
											"end": 21209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21143,
											"end": 21209,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21143,
											"end": 21209,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21073,
											"end": 21215,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21073,
											"end": 21215,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21073,
											"end": 21215,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21073,
											"end": 21215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21221,
											"end": 21296,
											"name": "tag",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 21221,
											"end": 21296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21264,
											"end": 21267,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21285,
											"end": 21290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21278,
											"end": 21290,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21278,
											"end": 21290,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21221,
											"end": 21296,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21221,
											"end": 21296,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21221,
											"end": 21296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21221,
											"end": 21296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21302,
											"end": 21571,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 21302,
											"end": 21571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21412,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 21443,
											"end": 21450,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21412,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 21412,
											"end": 21451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21412,
											"end": 21451,
											"name": "tag",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 21412,
											"end": 21451,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21473,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 21522,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 21546,
											"end": 21562,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21522,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 21522,
											"end": 21563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21522,
											"end": 21563,
											"name": "tag",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 21522,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21514,
											"end": 21520,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21507,
											"end": 21511,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21501,
											"end": 21512,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 21473,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 21473,
											"end": 21564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21473,
											"end": 21564,
											"name": "tag",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 21473,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21467,
											"end": 21471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21460,
											"end": 21565,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 21378,
											"end": 21571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21302,
											"end": 21571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21302,
											"end": 21571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21302,
											"end": 21571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21302,
											"end": 21571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21577,
											"end": 21650,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 21577,
											"end": 21650,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21622,
											"end": 21625,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21577,
											"end": 21650,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21577,
											"end": 21650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21656,
											"end": 21845,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 21656,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21733,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 21733,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 21733,
											"end": 21765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21733,
											"end": 21765,
											"name": "tag",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 21733,
											"end": 21765,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21774,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 21832,
											"end": 21838,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21824,
											"end": 21830,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21818,
											"end": 21822,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21774,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 21774,
											"end": 21839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21774,
											"end": 21839,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 21774,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21709,
											"end": 21845,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21656,
											"end": 21845,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21656,
											"end": 21845,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21656,
											"end": 21845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21851,
											"end": 22037,
											"name": "tag",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 21851,
											"end": 22037,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "tag",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21928,
											"end": 21931,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21921,
											"end": 21926,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21918,
											"end": 21932,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21982,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 22019,
											"end": 22020,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22012,
											"end": 22017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21982,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 21982,
											"end": 22021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21982,
											"end": 22021,
											"name": "tag",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 21982,
											"end": 22021,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21955,
											"end": 21956,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 21948,
											"end": 21953,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21944,
											"end": 21957,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21935,
											"end": 21957,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21935,
											"end": 21957,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 21911,
											"end": 22031,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21851,
											"end": 22037,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21851,
											"end": 22037,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21851,
											"end": 22037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22043,
											"end": 22586,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 22043,
											"end": 22586,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22144,
											"end": 22146,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 22139,
											"end": 22142,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22136,
											"end": 22147,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 22133,
											"end": 22579,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22133,
											"end": 22579,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "616"
										},
										{
											"begin": 22133,
											"end": 22579,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22178,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 22210,
											"end": 22215,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22178,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 22178,
											"end": 22216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22178,
											"end": 22216,
											"name": "tag",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 22178,
											"end": 22216,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 22280,
											"end": 22290,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 22262,
											"end": 22291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22262,
											"end": 22291,
											"name": "tag",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 22262,
											"end": 22291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22252,
											"end": 22260,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22248,
											"end": 22292,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22445,
											"end": 22447,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22433,
											"end": 22443,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22430,
											"end": 22448,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 22427,
											"end": 22476,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22427,
											"end": 22476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 22427,
											"end": 22476,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22466,
											"end": 22474,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22451,
											"end": 22474,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22451,
											"end": 22474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22427,
											"end": 22476,
											"name": "tag",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 22427,
											"end": 22476,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22489,
											"end": 22569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 22563,
											"end": 22566,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 22545,
											"end": 22567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "tag",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22535,
											"end": 22543,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22531,
											"end": 22568,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22518,
											"end": 22529,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22489,
											"end": 22569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 22489,
											"end": 22569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22489,
											"end": 22569,
											"name": "tag",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 22489,
											"end": 22569,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22148,
											"end": 22579,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22148,
											"end": 22579,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22133,
											"end": 22579,
											"name": "tag",
											"source": 19,
											"value": "616"
										},
										{
											"begin": 22133,
											"end": 22579,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22043,
											"end": 22586,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22043,
											"end": 22586,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22043,
											"end": 22586,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22043,
											"end": 22586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22592,
											"end": 22709,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 22592,
											"end": 22709,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22646,
											"end": 22654,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22696,
											"end": 22701,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22690,
											"end": 22694,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22686,
											"end": 22702,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 22665,
											"end": 22702,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22665,
											"end": 22702,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22592,
											"end": 22709,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22592,
											"end": 22709,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22592,
											"end": 22709,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22592,
											"end": 22709,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22592,
											"end": 22709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22715,
											"end": 22884,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 22715,
											"end": 22884,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22759,
											"end": 22765,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22792,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 22840,
											"end": 22841,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22836,
											"end": 22842,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 22828,
											"end": 22833,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22825,
											"end": 22826,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 22821,
											"end": 22834,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 22792,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 22792,
											"end": 22843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22792,
											"end": 22843,
											"name": "tag",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 22792,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22788,
											"end": 22844,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 22873,
											"end": 22877,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22867,
											"end": 22871,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22863,
											"end": 22878,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 22853,
											"end": 22878,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22853,
											"end": 22878,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22766,
											"end": 22884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22715,
											"end": 22884,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22715,
											"end": 22884,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22715,
											"end": 22884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22715,
											"end": 22884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22715,
											"end": 22884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22889,
											"end": 23184,
											"name": "tag",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 22889,
											"end": 23184,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22965,
											"end": 22969,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23111,
											"end": 23140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 23136,
											"end": 23139,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23130,
											"end": 23134,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23111,
											"end": 23140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 23111,
											"end": 23140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23111,
											"end": 23140,
											"name": "tag",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 23111,
											"end": 23140,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23103,
											"end": 23140,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23103,
											"end": 23140,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23173,
											"end": 23176,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23170,
											"end": 23171,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 23166,
											"end": 23177,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 23160,
											"end": 23164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23157,
											"end": 23178,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 23149,
											"end": 23178,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23149,
											"end": 23178,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22889,
											"end": 23184,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22889,
											"end": 23184,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22889,
											"end": 23184,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22889,
											"end": 23184,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22889,
											"end": 23184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23189,
											"end": 24584,
											"name": "tag",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 23189,
											"end": 24584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23306,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 23339,
											"end": 23342,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23306,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 23306,
											"end": 23343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23306,
											"end": 23343,
											"name": "tag",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 23306,
											"end": 23343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23408,
											"end": 23426,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23400,
											"end": 23406,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23397,
											"end": 23427,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 23394,
											"end": 23450,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23394,
											"end": 23450,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 23394,
											"end": 23450,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 23430,
											"end": 23448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "tag",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23394,
											"end": 23450,
											"name": "tag",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 23394,
											"end": 23450,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23474,
											"end": 23512,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 23506,
											"end": 23510,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23500,
											"end": 23511,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 23474,
											"end": 23512,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 23474,
											"end": 23512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23474,
											"end": 23512,
											"name": "tag",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 23474,
											"end": 23512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23559,
											"end": 23626,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 23619,
											"end": 23625,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23611,
											"end": 23617,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23605,
											"end": 23609,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23559,
											"end": 23626,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 23559,
											"end": 23626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23559,
											"end": 23626,
											"name": "tag",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 23559,
											"end": 23626,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23653,
											"end": 23654,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23677,
											"end": 23681,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23664,
											"end": 23681,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23664,
											"end": 23681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23709,
											"end": 23711,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23701,
											"end": 23707,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23698,
											"end": 23712,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 23726,
											"end": 23727,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 23721,
											"end": 24339,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23721,
											"end": 24339,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 23721,
											"end": 24339,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 23721,
											"end": 24339,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24383,
											"end": 24384,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24400,
											"end": 24406,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24397,
											"end": 24474,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24397,
											"end": 24474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 24397,
											"end": 24474,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24449,
											"end": 24458,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24444,
											"end": 24447,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 24440,
											"end": 24459,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24434,
											"end": 24460,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24425,
											"end": 24460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24425,
											"end": 24460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24397,
											"end": 24474,
											"name": "tag",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 24397,
											"end": 24474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24500,
											"end": 24567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "636"
										},
										{
											"begin": 24560,
											"end": 24566,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24553,
											"end": 24558,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24500,
											"end": 24567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 24500,
											"end": 24567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24500,
											"end": 24567,
											"name": "tag",
											"source": 19,
											"value": "636"
										},
										{
											"begin": 24500,
											"end": 24567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24494,
											"end": 24498,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24487,
											"end": 24568,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24356,
											"end": 24578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23691,
											"end": 24578,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 23691,
											"end": 24578,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23721,
											"end": 24339,
											"name": "tag",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 23721,
											"end": 24339,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23773,
											"end": 23777,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23769,
											"end": 23778,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 23761,
											"end": 23767,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23757,
											"end": 23779,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23807,
											"end": 23844,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 23839,
											"end": 23843,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 23807,
											"end": 23844,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 23807,
											"end": 23844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23807,
											"end": 23844,
											"name": "tag",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 23807,
											"end": 23844,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23866,
											"end": 23867,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23894,
											"end": 23901,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23891,
											"end": 23892,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23888,
											"end": 23902,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "640"
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23973,
											"end": 23982,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23968,
											"end": 23971,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 23964,
											"end": 23983,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23958,
											"end": 23984,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 23950,
											"end": 23956,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23943,
											"end": 23985,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24024,
											"end": 24025,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 24016,
											"end": 24022,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24012,
											"end": 24026,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24002,
											"end": 24026,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24002,
											"end": 24026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24071,
											"end": 24073,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24060,
											"end": 24069,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24056,
											"end": 24074,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24043,
											"end": 24074,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 24043,
											"end": 24074,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23917,
											"end": 23921,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23914,
											"end": 23915,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23910,
											"end": 23922,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23905,
											"end": 23922,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23905,
											"end": 23922,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "tag",
											"source": 19,
											"value": "640"
										},
										{
											"begin": 23880,
											"end": 24088,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24116,
											"end": 24122,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24107,
											"end": 24114,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24104,
											"end": 24123,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 24101,
											"end": 24280,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24101,
											"end": 24280,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 24101,
											"end": 24280,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24174,
											"end": 24183,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24169,
											"end": 24172,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 24165,
											"end": 24184,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24159,
											"end": 24185,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24217,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 24259,
											"end": 24263,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 24251,
											"end": 24257,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 24247,
											"end": 24264,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 24236,
											"end": 24245,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24217,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 24217,
											"end": 24265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24217,
											"end": 24265,
											"name": "tag",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 24217,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24209,
											"end": 24215,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24202,
											"end": 24266,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24124,
											"end": 24280,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24101,
											"end": 24280,
											"name": "tag",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 24101,
											"end": 24280,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24326,
											"end": 24327,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 24322,
											"end": 24323,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 24314,
											"end": 24320,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 24310,
											"end": 24324,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 24306,
											"end": 24328,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24300,
											"end": 24304,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 24293,
											"end": 24329,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 23728,
											"end": 24339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23728,
											"end": 24339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23728,
											"end": 24339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23691,
											"end": 24578,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 23691,
											"end": 24578,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23691,
											"end": 24578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23281,
											"end": 24584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23281,
											"end": 24584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23281,
											"end": 24584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23189,
											"end": 24584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23189,
											"end": 24584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23189,
											"end": 24584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24590,
											"end": 24688,
											"name": "tag",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 24590,
											"end": 24688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24641,
											"end": 24647,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24675,
											"end": 24680,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24669,
											"end": 24681,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24659,
											"end": 24681,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24659,
											"end": 24681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24590,
											"end": 24688,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24590,
											"end": 24688,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24590,
											"end": 24688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24590,
											"end": 24688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24694,
											"end": 24862,
											"name": "tag",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 24694,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24777,
											"end": 24788,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24811,
											"end": 24817,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24806,
											"end": 24809,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24799,
											"end": 24818,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24851,
											"end": 24855,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24846,
											"end": 24849,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24842,
											"end": 24856,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24827,
											"end": 24856,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24827,
											"end": 24856,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24694,
											"end": 24862,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24694,
											"end": 24862,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24694,
											"end": 24862,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24694,
											"end": 24862,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24694,
											"end": 24862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24868,
											"end": 25241,
											"name": "tag",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 24868,
											"end": 25241,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24954,
											"end": 24957,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24982,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "646"
										},
										{
											"begin": 25014,
											"end": 25019,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24982,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 24982,
											"end": 25020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24982,
											"end": 25020,
											"name": "tag",
											"source": 19,
											"value": "646"
										},
										{
											"begin": 24982,
											"end": 25020,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25036,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 25099,
											"end": 25105,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25094,
											"end": 25097,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25036,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 25036,
											"end": 25106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25036,
											"end": 25106,
											"name": "tag",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 25036,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25029,
											"end": 25106,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 25029,
											"end": 25106,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25115,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 25173,
											"end": 25179,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25168,
											"end": 25171,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25161,
											"end": 25165,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25154,
											"end": 25159,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25150,
											"end": 25166,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25115,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 25115,
											"end": 25180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25115,
											"end": 25180,
											"name": "tag",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 25115,
											"end": 25180,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25205,
											"end": 25234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 25227,
											"end": 25233,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25205,
											"end": 25234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 25205,
											"end": 25234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25205,
											"end": 25234,
											"name": "tag",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 25205,
											"end": 25234,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25200,
											"end": 25203,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25196,
											"end": 25235,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25189,
											"end": 25235,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25189,
											"end": 25235,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24958,
											"end": 25241,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24868,
											"end": 25241,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24868,
											"end": 25241,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24868,
											"end": 25241,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24868,
											"end": 25241,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24868,
											"end": 25241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "tag",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25442,
											"end": 25446,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25483,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 25469,
											"end": 25478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25465,
											"end": 25484,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25457,
											"end": 25484,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25457,
											"end": 25484,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25494,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 25562,
											"end": 25563,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25551,
											"end": 25560,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25547,
											"end": 25564,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25538,
											"end": 25544,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25494,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 25494,
											"end": 25565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25494,
											"end": 25565,
											"name": "tag",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 25494,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25575,
											"end": 25647,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "652"
										},
										{
											"begin": 25643,
											"end": 25645,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25632,
											"end": 25641,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25628,
											"end": 25646,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25619,
											"end": 25625,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25575,
											"end": 25647,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 25575,
											"end": 25647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25575,
											"end": 25647,
											"name": "tag",
											"source": 19,
											"value": "652"
										},
										{
											"begin": 25575,
											"end": 25647,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25657,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 25725,
											"end": 25727,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 25714,
											"end": 25723,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25701,
											"end": 25707,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25657,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 25657,
											"end": 25729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25657,
											"end": 25729,
											"name": "tag",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 25657,
											"end": 25729,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25776,
											"end": 25785,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25770,
											"end": 25774,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25766,
											"end": 25786,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 25761,
											"end": 25763,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 25750,
											"end": 25759,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25746,
											"end": 25764,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25739,
											"end": 25787,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25804,
											"end": 25880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 25875,
											"end": 25879,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25866,
											"end": 25872,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25804,
											"end": 25880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 25804,
											"end": 25880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25804,
											"end": 25880,
											"name": "tag",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 25804,
											"end": 25880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25796,
											"end": 25880,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25796,
											"end": 25880,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25247,
											"end": 25887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25893,
											"end": 26034,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 25893,
											"end": 26034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25949,
											"end": 25954,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25980,
											"end": 25986,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25974,
											"end": 25987,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 25965,
											"end": 25987,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25965,
											"end": 25987,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25996,
											"end": 26028,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 26022,
											"end": 26027,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25996,
											"end": 26028,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 25996,
											"end": 26028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25996,
											"end": 26028,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 25996,
											"end": 26028,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25893,
											"end": 26034,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 25893,
											"end": 26034,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25893,
											"end": 26034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25893,
											"end": 26034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25893,
											"end": 26034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26389,
											"name": "tag",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 26040,
											"end": 26389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26109,
											"end": 26115,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26158,
											"end": 26160,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26146,
											"end": 26155,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26137,
											"end": 26144,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26133,
											"end": 26156,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 26129,
											"end": 26161,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 26126,
											"end": 26245,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 26126,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 26126,
											"end": 26245,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26164,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 26164,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 26164,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26164,
											"end": 26243,
											"name": "tag",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 26164,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26126,
											"end": 26245,
											"name": "tag",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 26126,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26284,
											"end": 26285,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26309,
											"end": 26372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 26364,
											"end": 26371,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26355,
											"end": 26361,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26344,
											"end": 26353,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26340,
											"end": 26362,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26309,
											"end": 26372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 26309,
											"end": 26372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26309,
											"end": 26372,
											"name": "tag",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 26309,
											"end": 26372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26299,
											"end": 26372,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26299,
											"end": 26372,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26255,
											"end": 26382,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26389,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26389,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26389,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26389,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26395,
											"end": 26575,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 26395,
											"end": 26575,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26443,
											"end": 26520,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26440,
											"end": 26441,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26433,
											"end": 26521,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26540,
											"end": 26544,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 26537,
											"end": 26538,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 26530,
											"end": 26545,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26564,
											"end": 26568,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 26561,
											"end": 26562,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26554,
											"end": 26569,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMarketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyNFT(uint256)": "51ed8288",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"listNFT(uint256,uint256)": "94383f14",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"sales(uint256)": "b5f522f7",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateTokenMetadata(uint256,string)": "2cb2f52e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"updateTokenMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTMarketplace.sol\":{\"keccak256\":\"0x5719514b4e6d5fa11371175a4e96a0d6965a699a5bd2559d06f8183d2e22dd1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb9bfe86c5f4fb27bbe34b8dbaf5e2cc93e460374347863d25da8677a78b9e92\",\"dweb:/ipfs/QmZvqf2WKMw7EBQBRaZEadCDGShXSw1RTfoPQAhAfFde7n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1566,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3261,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1728_storage"
							},
							{
								"astId": 3264,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "paymentToken",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IERC20)394"
							},
							{
								"astId": 3276,
								"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
								"label": "sales",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(Sale)3271_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)394": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(Sale)3271_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.Sale)",
								"numberOfBytes": "32",
								"value": "t_struct(Sale)3271_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1728_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1727,
										"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Sale)3271_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.Sale",
								"members": [
									{
										"astId": 3266,
										"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3268,
										"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3270,
										"contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
										"label": "isForSale",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1723,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1722,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1722
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2088,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1520
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1520,
								2087
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1520
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1521,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 328,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 337,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 394,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 394,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 394,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 394,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 394,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 394,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 395,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								328,
								337
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"ERC165": [
							2075
						],
						"ERC721": [
							1403
						],
						"IERC165": [
							2087
						],
						"IERC721": [
							1520
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1692
						],
						"IERC721Receiver": [
							1538
						],
						"Strings": [
							2051
						]
					},
					"id": 1404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1521,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1539,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1538,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1693,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1692,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1723,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 403,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1722,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 2052,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 405,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 2076,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 407,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 408,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2075,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 317,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 410,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "804:7:6"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 415,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "813:6:6"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 417,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "821:7:6"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1692,
										"src": "830:15:6"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 421,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:6"
									},
									"id": 422,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403,
								269,
								1692,
								1520,
								2075,
								2087,
								1722
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 425,
									"libraryName": {
										"id": 423,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 432,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 431,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 436,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 434,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 441,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 440,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 439,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 446,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 445,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 443,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 444,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 464,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1403,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2074,
										2086
									],
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 475,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 477,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 476,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1520",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 483,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1692_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1692_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 482,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1692",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 490,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 488,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1403_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2074,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 474,
												"id": 493,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 471,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 469,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2075,
												"src": "1637:6:6"
											},
											{
												"id": 470,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2087,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 466,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1403,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1445
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 503,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 504,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 510,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 509,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 502,
												"id": 521,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1403,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 530,
												"id": 534,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1403,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1677
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1403,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1683
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 551,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 550,
												"id": 552,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1403,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1691
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 566,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 568,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 573,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 571,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 581,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 582,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1864,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 578,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 561,
												"id": 588,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1403,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1403,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1493
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 610,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 607,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1206,
															1272
														],
														"referencedDeclaration": 1206,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1403,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 622,
												"id": 630,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1403,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1501
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 641,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 640,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1403,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1519
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 658,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 659,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 662,
													"indexExpression": {
														"id": 661,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 657,
												"id": 663,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1403,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 676,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 682,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 681,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 687,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 690,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 700,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 703,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 704,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 705,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 702,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 707,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1403,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1475
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 721,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															729,
															755
														],
														"referencedDeclaration": 755,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1403,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1403,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 763,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 765,
													"indexExpression": {
														"id": 764,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 766,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1403,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 776,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 778,
													"indexExpression": {
														"id": 777,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 775,
												"id": 779,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1403,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 793,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 799,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 800,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 803,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 804,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 786,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 802,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 808,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 807,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 810,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 792,
												"id": 815,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1403,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 828,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 829,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 830,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 827,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 849,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 845,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 846,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 844,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 848,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 850,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 843,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 840,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 839,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 842,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1403,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 868,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 862,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 864,
																"indexExpression": {
																	"id": 863,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 867,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 858,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1403,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 882,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 888,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 889,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 895,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 896,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 897,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 894,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 903,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 909,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 913,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 914,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 908,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1206,
																		1272
																	],
																	"referencedDeclaration": 1272,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 927,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 921,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 923,
																			"indexExpression": {
																				"id": 922,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 931,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 942,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 936,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 938,
																			"indexExpression": {
																				"id": 937,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 941,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 945,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 947,
														"indexExpression": {
															"id": 946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 948,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 952,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 951,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 957,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 881,
												"id": 958,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1403,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10008:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "10022:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 969,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "10018:87:6",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "10040:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 974,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "10054:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10114:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 983,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"id": 986,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "10146:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "10150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 985,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "10138:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "10184:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "10180:96:6",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "10213:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1001,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "10227:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9982:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:6"
									},
									"scope": 1403,
									"src": "9955:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "10690:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "10710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1018,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1025,
															1051
														],
														"referencedDeclaration": 1051,
														"src": "10700:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:6"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "10652:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "10664:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:6"
									},
									"scope": 1403,
									"src": "10633:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11038:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "11054:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "11058:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "11048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "11111:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "11115:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "11124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "11076:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:6"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10973:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:6"
									},
									"scope": 1403,
									"src": "10954:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "11503:186:6",
										"statements": [
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "11513:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1057,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "11557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1059,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "11537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "11591:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1072,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "11587:96:6",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "11620:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "11664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1077,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "11634:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "11477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:6"
									},
									"scope": 1403,
									"src": "11462:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "12084:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "12098:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "12094:87:6",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "12116:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1101,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1100,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "12130:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "12190:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "12222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "12226:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1111,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "12260:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1121,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1131,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "12362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1132,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "12379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1141,
													"nodeType": "IfStatement",
													"src": "12358:109:6",
													"trueBody": {
														"id": 1140,
														"nodeType": "Block",
														"src": "12385:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1135,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "12427:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1136,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "12433:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1137,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "12442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1134,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1139,
																"nodeType": "RevertStatement",
																"src": "12399:57:6"
															}
														]
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "12256:211:6",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "12289:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "12333:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1126,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "12303:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12046:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:6"
									},
									"scope": 1403,
									"src": "12013:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "13481:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1155,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "13511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "13515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1154,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1188
														],
														"referencedDeclaration": 1188,
														"src": "13491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:6"
									},
									"scope": 1403,
									"src": "13406:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "13873:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "13899:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "13903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "13950:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "13954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1184,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "13963:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1180,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "13921:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:6"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13808:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13820:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13837:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:6"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:6"
									},
									"scope": 1403,
									"src": "13771:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "14488:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "14507:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "14511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "14520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1198,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1206,
															1272
														],
														"referencedDeclaration": 1272,
														"src": "14498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:6"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14436:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:6"
									},
									"scope": 1403,
									"src": "14418:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "14814:568:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "14880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "14893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "14876:460:6",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "14913:423:6",
													"statements": [
														{
															"assignments": [
																1227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1227,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1263,
																	"src": "14927:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1226,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1231,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1229,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "14957:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1228,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "14943:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1232,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "15093:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1238,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "15115:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1239,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "15124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1243,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1227,
																				"src": "15150:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1244,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "15157:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1242,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "15133:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1253,
															"nodeType": "IfStatement",
															"src": "15089:142:6",
															"trueBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "15164:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1249,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "15211:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1248,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1251,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1254,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "15249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1262,
															"nodeType": "IfStatement",
															"src": "15245:81:6",
															"trueBody": {
																"id": 1261,
																"nodeType": "Block",
																"src": "15260:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1227,
																					"src": "15292:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1257,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "15299:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1258,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "15303:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1255,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "15283:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1260,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1265,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "15346:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "15362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1268,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "15373:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:6"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14738:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14750:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:6"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:6"
									},
									"scope": 1403,
									"src": "14720:662:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "15684:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "15698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1283,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "15694:91:6",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "15722:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1289,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "15765:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1288,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1291,
															"nodeType": "RevertStatement",
															"src": "15736:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1294,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "15794:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1297,
															"indexExpression": {
																"id": 1295,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "15813:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1298,
														"indexExpression": {
															"id": 1296,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "15832:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "15870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15877:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "15887:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1302,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "15855:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "EmitStatement",
												"src": "15850:46:6"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15634:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:6"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:6"
									},
									"scope": 1403,
									"src": "15591:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "16210:169:6",
										"statements": [
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "16220:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [
														{
															"id": 1320,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "16245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1319,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "16236:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "16267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "16263:88:6",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "16288:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1330,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "16332:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1329,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1332,
															"nodeType": "RevertStatement",
															"src": "16302:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1335,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1318,
													"src": "16367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1316,
												"id": 1336,
												"nodeType": "Return",
												"src": "16360:12:6"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "16161:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "16201:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:6"
									},
									"scope": 1403,
									"src": "16138:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "17020:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1350,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "17034:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "17030:664:6",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "17054:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1379,
																		"nodeType": "Block",
																		"src": "17168:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1368,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1366,
																						"src": "17190:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1369,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1538,
																								"src": "17200:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1538_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1537,
																							"src": "17200:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1378,
																				"nodeType": "IfStatement",
																				"src": "17186:130:6",
																				"trueBody": {
																					"id": 1377,
																					"nodeType": "Block",
																					"src": "17243:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1374,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1343,
																										"src": "17294:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1373,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1375,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1376,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1380,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1367,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1366,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1380,
																				"src": "17153:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1365,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:6"
																	},
																	"src": "17144:186:6"
																},
																{
																	"block": {
																		"id": 1396,
																		"nodeType": "Block",
																		"src": "17359:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1384,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1382,
																							"src": "17381:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1386,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1394,
																					"nodeType": "Block",
																					"src": "17480:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:6",
																								"nodeType": "YulBlock",
																								"src": "17566:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:6"
																													},
																													"nativeSrc": "17599:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:6"
																													},
																													"nativeSrc": "17616:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:6"
																											},
																											"nativeSrc": "17592:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:6"
																										},
																										"nativeSrc": "17592:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1382,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1382,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1393,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:6"
																						}
																					]
																				},
																				"id": 1395,
																				"nodeType": "IfStatement",
																				"src": "17377:293:6",
																				"trueBody": {
																					"id": 1392,
																					"nodeType": "Block",
																					"src": "17401:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1389,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1343,
																										"src": "17452:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1388,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1390,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1391,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1397,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1383,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1382,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1397,
																				"src": "17338:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1381,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:6"
																	},
																	"src": "17331:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1359,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "17109:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1361,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "17123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "17129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1363,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "17138:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1356,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "17088:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1355,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "17072:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1538_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1538",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "17072:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1398,
															"nodeType": "TryStatement",
															"src": "17068:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16950:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16976:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16993:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:6"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:6"
									},
									"scope": 1403,
									"src": "16918:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1404,
							"src": "776:16926:6",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "107:17596:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						],
						"IERC721": [
							1520
						]
					},
					"id": 1521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 2088,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1406,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1409,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "287:7:7"
									},
									"id": 1410,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1408,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1520,
							"linearizedBaseContracts": [
								1520,
								2087
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1419,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1428,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1437,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1520,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1520,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1520,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1520,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1520,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1520,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1520,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1520,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1520,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1521,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1538
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1538,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1539,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1403
						],
						"ERC721URIStorage": [
							1664
						],
						"IERC165": [
							2087
						],
						"IERC4906": [
							175
						],
						"Strings": [
							2051
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1542,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1404,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1541,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1403,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 2052,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1543,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 176,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1545,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 152,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1547,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1550,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:9"
									},
									"id": 1551,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:9"
								},
								{
									"baseName": {
										"id": 1552,
										"name": "ERC721",
										"nameLocations": [
											"479:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "479:6:9"
									},
									"id": 1553,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1549,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								1403,
								269,
								1692,
								175,
								1520,
								2075,
								2087,
								1722
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1556,
									"libraryName": {
										"id": 1554,
										"name": "Strings",
										"nameLocations": [
											"498:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "498:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:9",
									"typeName": {
										"id": 1555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1562,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "706:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1557,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1560,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1559,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1558,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "817:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1565,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:9",
										"keyType": {
											"id": 1563,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1564,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										495,
										2086
									],
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "1045:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1577,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "1062:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1578,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "1077:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1582,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "1125:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1580,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1664_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 495,
															"src": "1101:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1585,
												"nodeType": "Return",
												"src": "1055:82:9"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1573,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1571,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "1013:6:9"
											},
											{
												"id": 1572,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2087,
												"src": "1021:7:9"
											}
										],
										"src": "1004:25:9"
									},
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1039:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:9"
									},
									"scope": 1664,
									"src": "937:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "1298:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1596,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1308:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:9"
											},
											{
												"assignments": [
													1601
												],
												"declarations": [
													{
														"constant": false,
														"id": 1601,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "1341:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1600,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"baseExpression": {
														"id": 1602,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1367:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1604,
													"indexExpression": {
														"id": 1603,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "1378:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:9"
											},
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "1396:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1606,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1608,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1417:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1613,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "1506:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1621,
												"nodeType": "IfStatement",
												"src": "1496:70:9",
												"trueBody": {
													"id": 1620,
													"nodeType": "Block",
													"src": "1525:41:9",
													"statements": [
														{
															"expression": {
																"id": 1618,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "1546:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1595,
															"id": 1619,
															"nodeType": "Return",
															"src": "1539:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1624,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "1671:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1622,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "1661:95:9",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "1694:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1632,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "1729:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1633,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "1735:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1595,
															"id": 1635,
															"nodeType": "Return",
															"src": "1708:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1638,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1664_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "1773:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1642,
												"nodeType": "Return",
												"src": "1766:30:9"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1592,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:9"
									},
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1228:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:9"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1664,
									"src": "1210:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "2003:86:9",
										"statements": [
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1652,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "2013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1654,
														"indexExpression": {
															"id": 1653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1655,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "2035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1658,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "EmitStatement",
												"src": "2054:28:9"
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1961:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:9"
									},
									"scope": 1664,
									"src": "1922:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1665,
							"src": "431:1660:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437
							]
						}
					],
					"src": "128:1964:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1520
						],
						"IERC721Metadata": [
							1692
						]
					},
					"id": 1693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1521,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1667,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "357:7:10"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								1520,
								2087
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1692,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1692,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1692,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1693,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1722
						]
					},
					"id": 1723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1695,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1722,
							"linearizedBaseContracts": [
								1722
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1700,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1702,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1722,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1711,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1722,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1717,
												"id": 1719,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1722,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1723,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1796
						]
					},
					"id": 1797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1796,
							"linearizedBaseContracts": [
								1796
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1726,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 1796,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1736,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1727,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1738,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1729,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "844:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 1796,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 1752,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1746,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1727,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1751,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "964:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 1796,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"expression": {
														"id": 1762,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1727,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 1780,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1772,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1727,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1779,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 1796,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1788,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1727,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1783,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 1796,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1797,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3141
						],
						"SignedMath": [
							3246
						],
						"Strings": [
							2051
						]
					},
					"id": 2052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1798,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 3142,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1799,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3141,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 3247,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1801,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3246,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1803,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1806,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2051,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1804,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1809,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2051,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1807,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1808,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1816,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															1825
														],
														"declarations": [
															{
																"constant": false,
																"id": 1825,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1832,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1828,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1826,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3141,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3141_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2961,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															1834
														],
														"declarations": [
															{
																"constant": false,
																"id": 1834,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1833,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1839,
														"initialValue": {
															"arguments": [
																{
																	"id": 1837,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1835,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															1841
														],
														"declarations": [
															{
																"constant": false,
																"id": 1841,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1842,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1834,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1825,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1841,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 1843,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 1858,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 1845,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1806,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1841,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1819,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1848,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1852,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1857,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 1856,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1859,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 1860,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1823,
														"id": 1861,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2051,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1884,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1882,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3246,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3246_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3245,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1881,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1872,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1871,
												"id": 1888,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2051,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 1908,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1902,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1893,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1900,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3141_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3083,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1898,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1910,
																	1993,
																	2013
																],
																"referencedDeclaration": 1993,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1907,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2051,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													1921
												],
												"declarations": [
													{
														"constant": false,
														"id": 1921,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1923,
												"initialValue": {
													"id": 1922,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1913,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1924,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1929,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1926,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1935,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1937,
														"indexExpression": {
															"hexValue": "30",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1943,
														"indexExpression": {
															"hexValue": "31",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 1975,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1961,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1963,
																	"indexExpression": {
																		"id": 1962,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1964,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1968,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1965,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1970,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1955,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"initializationExpression": {
													"assignments": [
														1948
													],
													"declarations": [
														{
															"constant": false,
															"id": 1948,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1976,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1947,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1954,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1950,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 1958,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1960,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1982,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1980,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1984,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1987,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1919,
												"id": 1991,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2051,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2006,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2004,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2002,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2009,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2001,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1993,
															2013
														],
														"referencedDeclaration": 1993,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2000,
												"id": 2011,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2051,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2025,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2023,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2030,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2028,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2037,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2016,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2035,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2034,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2043,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2041,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2040,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2048,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2051,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2052,
							"src": "251:2847:13",
							"usedErrors": [
								1816
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2075
						],
						"IERC165": [
							2087
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2076,
							"sourceUnit": 2088,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2054,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2057,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "687:7:14"
									},
									"id": 2058,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2075,
							"linearizedBaseContracts": [
								2075,
								2087
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2086
									],
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2066,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2068,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2087_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2087_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2067,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2087",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2072,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2075,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2076,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						]
					},
					"id": 2088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2087,
							"linearizedBaseContracts": [
								2087
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2087,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2088,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3141
						]
					},
					"id": 3142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2090,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3141,
							"linearizedBaseContracts": [
								3141
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2093,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2098,
									"members": [
										{
											"id": 2094,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2095,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2096,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2097,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2128,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2111
														],
														"declarations": [
															{
																"constant": false,
																"id": 2111,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2128,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2110,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2115,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2116,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2111,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2123,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2109,
															"id": 2122,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2125,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2111,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2126,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2109,
														"id": 2127,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3141,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2156,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2142,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2149,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2147,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2141,
															"id": 2148,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2152,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2154,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2141,
														"id": 2155,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3141,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2198,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2176,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2179
														],
														"declarations": [
															{
																"constant": false,
																"id": 2179,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2183,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2184,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2185,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2193,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2192,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2195,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2196,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2169,
														"id": 2197,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3141,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2226,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2211,
															"id": 2218,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2221,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2222,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2224,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2211,
														"id": 2225,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3141,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2254,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2233,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2239,
															"id": 2246,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2250,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2252,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2239,
														"id": 2253,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3141,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2266,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2267,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2270,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2272,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3141,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2284,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2285,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2288,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2287,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2283,
												"id": 2290,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3141,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2303,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2297,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2305,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2306,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2307,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2301,
												"id": 2313,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3141,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2332,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2328,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2329,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2324,
															"id": 2331,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2334,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2338,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2324,
												"id": 2347,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3141,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2473,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2362
														],
														"declarations": [
															{
																"constant": false,
																"id": 2362,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2366,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2364,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2368
														],
														"declarations": [
															{
																"constant": false,
																"id": 2368,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2367,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2369,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2354,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2370,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2371,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2378,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2374,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2362,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2375,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2360,
																	"id": 2377,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2381,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2387,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2386,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2383,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2385,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2389
														],
														"declarations": [
															{
																"constant": false,
																"id": 2389,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2390,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2354,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2391,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2393
														],
														"declarations": [
															{
																"constant": false,
																"id": 2393,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2400,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2394,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2396,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2401,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2402,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2403,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2404,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2409
														],
														"declarations": [
															{
																"constant": false,
																"id": 2409,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2408,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2416,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2411,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2413,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2417,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2419,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2420,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2424,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2425,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2427,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2428,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2432,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2433,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2435,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2436,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2440,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2441,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2443,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2444,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2448,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2449,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2451,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2452,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2456,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2457,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2459,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2460,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2464,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2465,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2467,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2470,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2471,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2360,
														"id": 2472,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3141,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2491
												],
												"declarations": [
													{
														"constant": false,
														"id": 2491,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2497,
												"initialValue": {
													"arguments": [
														{
															"id": 2493,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2494,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2492,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2475,
															2518
														],
														"referencedDeclaration": 2475,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2499,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2098",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2098",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2498,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2502,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2503,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2504,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2501,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2513,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2509,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2512,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2515,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2491,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2489,
												"id": 2516,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2476,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2483,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3141,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2526,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2532,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2531,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2525,
															"id": 2530,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2534
												],
												"declarations": [
													{
														"constant": false,
														"id": 2534,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2629,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2543,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2537,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2536,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2797,
																			2832
																		],
																		"referencedDeclaration": 2797,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2541,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2628,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2544,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2545,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2546,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2547,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2550,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2554,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2555,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2556,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2557,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2558,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2561,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2565,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2566,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2567,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2569,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2572,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2576,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2577,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2578,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2579,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2580,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2583,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2587,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2588,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2589,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2590,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2591,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2594,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2598,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2599,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2600,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2601,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2602,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2609,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2610,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2611,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2612,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2613,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2616,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2620,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2622,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2534,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2623,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2624,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2534,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2621,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2525,
														"id": 2627,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3141,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2663,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2642
														],
														"declarations": [
															{
																"constant": false,
																"id": 2642,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2663,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2646,
														"initialValue": {
															"arguments": [
																{
																	"id": 2644,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2633,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2643,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2630,
																	2665
																],
																"referencedDeclaration": 2630,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2647,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2649,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2636,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2648,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2651,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2652,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2654,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2633,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2640,
														"id": 2662,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2631,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2634,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3141,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2674
												],
												"declarations": [
													{
														"constant": false,
														"id": 2674,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2676,
												"initialValue": {
													"hexValue": "30",
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 2793,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2691,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2690,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2706,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2705,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2700,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2721,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2720,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2712,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2715,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2716,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2727,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2730,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2751,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2750,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2742,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2745,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2765,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2781,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 2780,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2775,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2792,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 2791,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2794,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2674,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2672,
												"id": 2795,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3141,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 2830,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															2809
														],
														"declarations": [
															{
																"constant": false,
																"id": 2809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2813,
														"initialValue": {
															"arguments": [
																{
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2800,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2810,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2797,
																	2832
																],
																"referencedDeclaration": 2797,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2809,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2821,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2800,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2807,
														"id": 2829,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3141,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													2841
												],
												"declarations": [
													{
														"constant": false,
														"id": 2841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2960,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2843,
												"initialValue": {
													"hexValue": "30",
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 2957,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2860,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 2859,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 2893,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2911,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 2910,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2912,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2928,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 2927,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2923,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2945,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 2944,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2940,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2943,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2946,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2956,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 2955,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2951,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2958,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2839,
												"id": 2959,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 2833,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3141,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 2994,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															2973
														],
														"declarations": [
															{
																"constant": false,
																"id": 2973,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2994,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2972,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2977,
														"initialValue": {
															"arguments": [
																{
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2974,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2961,
																	2996
																],
																"referencedDeclaration": 2961,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2978,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2980,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2967,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2979,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2983,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2985,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2971,
														"id": 2993,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2965,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3141,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3005
												],
												"declarations": [
													{
														"constant": false,
														"id": 3005,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3082,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3007,
												"initialValue": {
													"hexValue": "30",
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3079,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3022,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3021,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3016,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3037,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3036,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3031,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3035,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3052,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3051,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3046,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3050,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3067,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3066,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3061,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3065,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3078,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3077,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3080,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3005,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3003,
												"id": 3081,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3141,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3119,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3095
														],
														"declarations": [
															{
																"constant": false,
																"id": 3095,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3119,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3094,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3099,
														"initialValue": {
															"arguments": [
																{
																	"id": 3097,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3086,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3096,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3083,
																	3121
																],
																"referencedDeclaration": 3083,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3095,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3102,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3089,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3101,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3107,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3105,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3095,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3106,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3108,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3110,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3086,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3093,
														"id": 3118,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3084,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3087,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3141,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3132,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3125,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2098",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2098",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3130,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3138,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3123,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3141,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "203:14914:16",
							"usedErrors": [
								2093
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3246
						]
					},
					"id": 3247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3144,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3246,
							"linearizedBaseContracts": [
								3246
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3161,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3154,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3155,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3149,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3153,
												"id": 3160,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3145,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3246,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3179,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3172,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3165,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3173,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3167,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3165,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3171,
												"id": 3178,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3163,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3164,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3166,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3246,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3191
												],
												"declarations": [
													{
														"constant": false,
														"id": 3191,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3223,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3190,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3192,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3193,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3185,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3196,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3197,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3202,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3205,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3191,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3210,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3191,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3208,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3206,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3215,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3216,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3218,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3220,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3189,
												"id": 3222,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3181,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3182,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3184,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3187,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3246,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3244,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3243,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3234,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3227,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3238,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3227,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3237,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3227,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3231,
														"id": 3242,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3226,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3246,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3247,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/NFTMarketplace.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMarketplace.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"Counters": [
							1796
						],
						"ERC721": [
							1403
						],
						"ERC721URIStorage": [
							1664
						],
						"IERC165": [
							2087
						],
						"IERC20": [
							394
						],
						"IERC4906": [
							175
						],
						"NFTMarketplace": [
							3424
						],
						"Ownable": [
							147
						],
						"Strings": [
							2051
						]
					},
					"id": 3425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 1665,
							"src": "60:78:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 395,
							"src": "140:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 148,
							"src": "198:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 1797,
							"src": "252:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3253,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"337:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "337:16:18"
									},
									"id": 3254,
									"nodeType": "InheritanceSpecifier",
									"src": "337:16:18"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3424,
							"linearizedBaseContracts": [
								3424,
								1664,
								1403,
								269,
								1692,
								175,
								1520,
								2075,
								2087,
								1722
							],
							"name": "NFTMarketplace",
							"nameLocation": "319:14:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3258,
									"libraryName": {
										"id": 3255,
										"name": "Counters",
										"nameLocations": [
											"367:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1796,
										"src": "367:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "361:36:18",
									"typeName": {
										"id": 3257,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3256,
											"name": "Counters.Counter",
											"nameLocations": [
												"380:8:18",
												"389:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "380:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "380:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3261,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "428:15:18",
									"nodeType": "VariableDeclaration",
									"scope": 3424,
									"src": "403:40:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1728_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3260,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3259,
											"name": "Counters.Counter",
											"nameLocations": [
												"403:8:18",
												"412:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "403:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "403:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3264,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "465:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 3424,
									"src": "450:27:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$394",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3262,
											"name": "IERC20",
											"nameLocations": [
												"450:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 394,
											"src": "450:6:18"
										},
										"referencedDeclaration": 394,
										"src": "450:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$394",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "NFTMarketplace.Sale",
									"id": 3271,
									"members": [
										{
											"constant": false,
											"id": 3266,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "566:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3271,
											"src": "558:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3265,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3268,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "591:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3271,
											"src": "583:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "583:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3270,
											"mutability": "mutable",
											"name": "isForSale",
											"nameLocation": "612:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3271,
											"src": "607:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3269,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "607:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Sale",
									"nameLocation": "542:4:18",
									"nodeType": "StructDefinition",
									"scope": 3424,
									"src": "535:94:18",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5f522f7",
									"id": 3276,
									"mutability": "mutable",
									"name": "sales",
									"nameLocation": "707:5:18",
									"nodeType": "VariableDeclaration",
									"scope": 3424,
									"src": "675:37:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$3271_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.Sale)"
									},
									"typeName": {
										"id": 3275,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3272,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "683:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "675:24:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$3271_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.Sale)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3274,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3273,
												"name": "Sale",
												"nameLocations": [
													"694:4:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3271,
												"src": "694:4:18"
											},
											"referencedDeclaration": 3271,
											"src": "694:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Sale_$3271_storage_ptr",
												"typeString": "struct NFTMarketplace.Sale"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a2",
									"id": 3284,
									"name": "NFTListed",
									"nameLocation": "727:9:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3278,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "753:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "737:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3280,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "770:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "762:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3282,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "786:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "778:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:56:18"
									},
									"src": "721:72:18"
								},
								{
									"anonymous": false,
									"eventSelector": "5b8046420884c4698df446ee47bb3971db3b7f1f959ff4f04a70b32b28732841",
									"id": 3288,
									"name": "NFTRemoved",
									"nameLocation": "805:10:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "832:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3288,
												"src": "816:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:25:18"
									},
									"src": "799:42:18"
								},
								{
									"anonymous": false,
									"eventSelector": "6329e40c0365262ebbff5ca819385c2b9713dcaa050ed07866d72c441395699a",
									"id": 3296,
									"name": "NFTSold",
									"nameLocation": "853:7:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "877:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "861:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3292,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "894:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "886:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3294,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "909:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "901:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:55:18"
									},
									"src": "847:69:18"
								},
								{
									"body": {
										"id": 3311,
										"nodeType": "Block",
										"src": "990:55:18",
										"statements": [
											{
												"expression": {
													"id": 3309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3305,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3264,
														"src": "1001:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$394",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3307,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3298,
																"src": "1023:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3306,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "1016:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$394_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1016:21:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$394",
															"typeString": "contract IERC20"
														}
													},
													"src": "1001:36:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$394",
														"typeString": "contract IERC20"
													}
												},
												"id": 3310,
												"nodeType": "ExpressionStatement",
												"src": "1001:36:18"
											}
										]
									},
									"id": 3312,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d69417274654469676974616c",
													"id": 3301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "966:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4a59971836ea90320e4bc9bc9dbcdb82efc95f34f93d4e1795819d0b819b3429",
														"typeString": "literal_string \"MiArteDigital\""
													},
													"value": "MiArteDigital"
												},
												{
													"hexValue": "4d4144",
													"id": 3302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "983:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33",
														"typeString": "literal_string \"MAD\""
													},
													"value": "MAD"
												}
											],
											"id": 3303,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3300,
												"name": "ERC721",
												"nameLocations": [
													"959:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "959:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "959:30:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "944:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "936:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:23:18"
									},
									"returnParameters": {
										"id": 3304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "990:0:18"
									},
									"scope": 3424,
									"src": "924:121:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3354,
										"nodeType": "Block",
										"src": "1145:292:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3321,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3314,
																		"src": "1172:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3320,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "1164:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1164:16:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3323,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1184:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1188:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1184:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1164:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f6c6f20656c2070726f706965746172696f207075656465206c697374617220656c204e46542070617261206c612076656e7461",
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:55:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032",
																"typeString": "literal_string \"Solo el propietario puede listar el NFT para la venta\""
															},
															"value": "Solo el propietario puede listar el NFT para la venta"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a18607ac1813eb831dd962d262af83e0fa44f8add3d3f10ebfc89524195d3032",
																"typeString": "literal_string \"Solo el propietario puede listar el NFT para la venta\""
															}
														],
														"id": 3319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1156:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1156:96:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3328,
												"nodeType": "ExpressionStatement",
												"src": "1156:96:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3330,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3316,
																"src": "1271:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1279:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1271:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c2070726563696f206465626520736572206d61796f72207175652030",
															"id": 3333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1282:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c",
																"typeString": "literal_string \"El precio debe ser mayor que 0\""
															},
															"value": "El precio debe ser mayor que 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3cabed251a8b24978e04fa48f9988414ec07bbcfb2aeeee6a12e203bd38f57c",
																"typeString": "literal_string \"El precio debe ser mayor que 0\""
															}
														],
														"id": 3329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1263:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:52:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3335,
												"nodeType": "ExpressionStatement",
												"src": "1263:52:18"
											},
											{
												"expression": {
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3336,
															"name": "sales",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3276,
															"src": "1328:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$3271_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Sale storage ref)"
															}
														},
														"id": 3338,
														"indexExpression": {
															"id": 3337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3314,
															"src": "1334:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1328:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$3271_storage",
															"typeString": "struct NFTMarketplace.Sale storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3340,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1350:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1354:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1350:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3342,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3316,
																"src": "1362:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1369:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3339,
															"name": "Sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3271,
															"src": "1345:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Sale_$3271_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.Sale storage pointer)"
															}
														},
														"id": 3344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1345:29:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
															"typeString": "struct NFTMarketplace.Sale memory"
														}
													},
													"src": "1328:46:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$3271_storage",
														"typeString": "struct NFTMarketplace.Sale storage ref"
													}
												},
												"id": 3346,
												"nodeType": "ExpressionStatement",
												"src": "1328:46:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3314,
															"src": "1402:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1411:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1415:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1411:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3351,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3316,
															"src": "1423:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3347,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3284,
														"src": "1392:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 3352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:37:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3353,
												"nodeType": "EmitStatement",
												"src": "1387:42:18"
											}
										]
									},
									"functionSelector": "94383f14",
									"id": 3355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "listNFT",
									"nameLocation": "1098:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1114:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "1106:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1131:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "1123:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:32:18"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:18"
									},
									"scope": 3424,
									"src": "1089:348:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3409,
										"nodeType": "Block",
										"src": "1508:509:18",
										"statements": [
											{
												"assignments": [
													3362
												],
												"declarations": [
													{
														"constant": false,
														"id": 3362,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "1531:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 3409,
														"src": "1519:16:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
															"typeString": "struct NFTMarketplace.Sale"
														},
														"typeName": {
															"id": 3361,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3360,
																"name": "Sale",
																"nameLocations": [
																	"1519:4:18"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3271,
																"src": "1519:4:18"
															},
															"referencedDeclaration": 3271,
															"src": "1519:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$3271_storage_ptr",
																"typeString": "struct NFTMarketplace.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3366,
												"initialValue": {
													"baseExpression": {
														"id": 3363,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3276,
														"src": "1538:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$3271_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.Sale storage ref)"
														}
													},
													"id": 3365,
													"indexExpression": {
														"id": 3364,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3357,
														"src": "1544:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1538:14:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$3271_storage",
														"typeString": "struct NFTMarketplace.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1519:33:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3368,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3362,
																"src": "1571:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
																	"typeString": "struct NFTMarketplace.Sale memory"
																}
															},
															"id": 3369,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1576:9:18",
															"memberName": "isForSale",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3270,
															"src": "1571:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45737465204e4654206e6f20657374612061206c612076656e7461",
															"id": 3370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:29:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140",
																"typeString": "literal_string \"Este NFT no esta a la venta\""
															},
															"value": "Este NFT no esta a la venta"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_962ac3b2a2b0bfdb5672bd136d84feff8b4a62186c605c3bef119814f065e140",
																"typeString": "literal_string \"Este NFT no esta a la venta\""
															}
														],
														"id": 3367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1563:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:54:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3372,
												"nodeType": "ExpressionStatement",
												"src": "1563:54:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3376,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1711:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1715:6:18",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1711:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 3378,
																		"name": "sale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3362,
																		"src": "1723:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
																			"typeString": "struct NFTMarketplace.Sale memory"
																		}
																	},
																	"id": 3379,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1728:6:18",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3266,
																	"src": "1723:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 3380,
																		"name": "sale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3362,
																		"src": "1736:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
																			"typeString": "struct NFTMarketplace.Sale memory"
																		}
																	},
																	"id": 3381,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1741:5:18",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3268,
																	"src": "1736:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3374,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "1685:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$394",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1698:12:18",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 393,
																"src": "1685:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1685:62:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061676f2066616c6c69646f",
															"id": 3383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1749:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3",
																"typeString": "literal_string \"Pago fallido\""
															},
															"value": "Pago fallido"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c19e794dcadaf12ce78681fae0f8585738e31ebdea95d51c143749a7a68ba0e3",
																"typeString": "literal_string \"Pago fallido\""
															}
														],
														"id": 3373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1677:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:87:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3385,
												"nodeType": "ExpressionStatement",
												"src": "1677:87:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3387,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3362,
																"src": "1831:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
																	"typeString": "struct NFTMarketplace.Sale memory"
																}
															},
															"id": 3388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1836:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3266,
															"src": "1831:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1844:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1848:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1844:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3391,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3357,
															"src": "1856:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3386,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "1821:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:43:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3393,
												"nodeType": "ExpressionStatement",
												"src": "1821:43:18"
											},
											{
												"expression": {
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3394,
																"name": "sales",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3276,
																"src": "1919:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$3271_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Sale storage ref)"
																}
															},
															"id": 3396,
															"indexExpression": {
																"id": 3395,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3357,
																"src": "1925:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1919:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$3271_storage",
																"typeString": "struct NFTMarketplace.Sale storage ref"
															}
														},
														"id": 3397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1934:9:18",
														"memberName": "isForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3270,
														"src": "1919:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1946:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1919:32:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3400,
												"nodeType": "ExpressionStatement",
												"src": "1919:32:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3402,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3357,
															"src": "1977:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1986:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1990:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1986:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3405,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3362,
																"src": "1998:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$3271_memory_ptr",
																	"typeString": "struct NFTMarketplace.Sale memory"
																}
															},
															"id": 3406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2003:5:18",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3268,
															"src": "1998:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3401,
														"name": "NFTSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "1969:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 3407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:40:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3408,
												"nodeType": "EmitStatement",
												"src": "1964:45:18"
											}
										]
									},
									"functionSelector": "51ed8288",
									"id": 3410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyNFT",
									"nameLocation": "1477:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1492:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3410,
												"src": "1484:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:17:18"
									},
									"returnParameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:0:18"
									},
									"scope": 3424,
									"src": "1468:549:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3422,
										"nodeType": "Block",
										"src": "2244:50:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3418,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3412,
															"src": "2268:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3419,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3414,
															"src": "2277:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3417,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "2255:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2255:31:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3421,
												"nodeType": "ExpressionStatement",
												"src": "2255:31:18"
											}
										]
									},
									"functionSelector": "2cb2f52e",
									"id": 3423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenMetadata",
									"nameLocation": "2175:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2203:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3423,
												"src": "2195:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "2226:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3423,
												"src": "2212:22:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:41:18"
									},
									"returnParameters": {
										"id": 3416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:18"
									},
									"scope": 3424,
									"src": "2166:128:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3425,
							"src": "310:2369:18",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437,
								3284,
								3288,
								3296
							]
						}
					],
					"src": "33:2648:18"
				},
				"id": 18
			}
		}
	}
}